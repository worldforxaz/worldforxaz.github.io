<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>沸石结构</title>
      <link href="/2024/12/17/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/%E6%B2%B8%E7%9F%B3%E7%BB%93%E6%9E%84/"/>
      <url>/2024/12/17/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/%E6%B2%B8%E7%9F%B3%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c1225e29e7de34315ebe7e62a6df8204e3981ec4e4792c61a3c8991ac7bf5f5a">bda6ad0d5f606e7055c23f770369041ffa354e2b32a3834b155272c56f6444661ab7718603343a34c88aae20fc74544723e3f5a785c272956c08b08ed598c2b95ad0ba281bb8c0d0467d8e87b7444228cbc3c750e7d910f39d08ecda732a5f3c6f263f358037a9df260e4ccdbd524de5c21a63c50c77e9c96275c561cbd2d04cc0275330d017d2cdfa7b6ed012f55a70789ae0689d9424d0d0d965b8d9b28ec70be831f23d69ebf6dad257e2e0e0143fb6bfcd965d189060cf3ea8708d1a1db3dc7e7298e03d76070f30b5c287d73b67ab9a2bb060eee9ae7953c30b31bb99dba49e6705963dd27f9567979d705c4e76a7fbce9d7b499e3c939e4aeab1e1b7f7d797ccc9aaac9debc3a73763bafd4b575a9d7f9b2f1f10ef2fd1e07f8a6a7e1e106fc42dc85a3181bdd56f93e1fc013525f6a5b51aa6dac3adbbd847e8119f984d80c98ce2747a182b814292407cdeafa9efbd65dabdf03231b43468b4b842e9333eaf0c8c1ca423d4ad871047246b13e7b495d304f7d3ea3d1eaf96cfa9145484ab88db0e4e9fbcf3fbcb913d9b2f0992d2acf5d5d21f19ef38f158454fe7c59ccbfbb47ac5de0921e69c57bd0cbb0cdb0102a1cc0394c2abe632f8d0a5982778105396a551240047b35c4f3026436d690da2327f8d039fe480698cd8b8f6d07b5816a1cedd6aa20aa28f9811ae2c48d96539c11ed894c17c12b6856b49fb7124f81a0c80314245b87e87868257f0139c1bbc4dcadf0179850f966b84dc63a64cfa835dc672333d8d62aab373d043b3181106645017f1ca35d084faf8012f0c98119d7dc48f6cbdab0f659613e524a7c0a8d6aede4ec93ffa966a1e810f1de2b7b03db187c925789caf369f2735c1e76587d975e4f3665a03c892f0343c0cda78e0fd9b82601c92ad313333742abc53cfde004c0587e285e6a54f59e092e8db2d314959306afdb3d966cf99e713ec5501c496bda777e9945cfe1fb12aed5e55da0bf74164b44341df5f05b5b701710e85845df61502ab51d97ef92641196511da0024f330197e4e3e624c2609b8a1ecd2f8967fd991eafc1f4100d8b3a48f9bdfb7d3f77cb9e4cf73e60343d3ca2a53ae96c6cd5e0f5a1103f7774cb00f1a395cad9abd95595b4ea31817d1d58b3957</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 课题研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>资源网站</title>
      <link href="/2024/12/16/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E8%B5%84%E6%BA%90%E7%B1%BB%E7%BD%91%E7%AB%99/"/>
      <url>/2024/12/16/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E8%B5%84%E6%BA%90%E7%B1%BB%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-影视"><a href="#1-影视" class="headerlink" title="1. 影视"></a>1. 影视</h1><ol><li><a href="https://www.jitutv.me/">极兔</a></li><li><a href="https://www.netflixgc.com/">奈飞工厂</a></li></ol><h1 id="2-音乐"><a href="#2-音乐" class="headerlink" title="2. 音乐"></a>2. 音乐</h1><ol><li><p><a href="https://www.hifini.com/">HiFiNi - 音乐磁场</a></p></li><li><p><a href="https://xiageba.com/">下歌吧 </a></p></li></ol><h1 id="3-游戏"><a href="#3-游戏" class="headerlink" title="3. 游戏"></a>3. 游戏</h1><ol><li><a href="https://bbs.3dmgame.com/forum.php">破解游戏论坛 3dm</a></li></ol><h1 id="4-聚合站"><a href="#4-聚合站" class="headerlink" title="4. 聚合站"></a>4. 聚合站</h1><ol><li><a href="https://www.ysa.cc/">伊萨书签</a></li><li><a href="https://link3.cc/galijun">咖喱君的资源库</a></li><li><a href="https://www.xygalaxy.com/">星云导航</a></li><li><a href="https://heeee.com/">资源导航</a></li><li><a href="https://axutongxue.com/">阿虚同学的储物间</a></li><li><a href="https://xydh.fun/">iLinks (高级)</a></li><li><a href="https://www.chongbuluo.com/thread-7961-1-1.html">虫部落 小众网站合集</a></li></ol><h1 id="5-节点"><a href="#5-节点" class="headerlink" title="5. 节点"></a>5. 节点</h1><ol><li><p><a href="https://www.spcloud2.cc/dashboard">SPCloud</a></p></li><li><p><a href="https://www.nfsq.us/#/dashboard">农夫山泉</a></p></li><li><p><a href="https://udwt.io/">UDWT.IO</a></p></li><li><p><a href="https://fn1.170203.xyz/#/plan">飞鸟云</a></p></li><li><p><a href="https://hk.freecat.network/console">自由猫</a></p></li><li><p><a href="https://github.com/DiningFactory/panda-vpn-pro">GitHub推荐</a></p></li><li><p><a href="https://pub.riolu.icu/?code=Babz9GDg">RioLU.443</a></p></li></ol><h1 id="6-技术站"><a href="#6-技术站" class="headerlink" title="6. 技术站"></a>6. 技术站</h1><ol><li><p><a href="https://www.coolaler.com/forums/threads/word-grindeq-math-utilities-2024.382145/">台湾硬件交流</a></p></li><li><p><a href="https://www.nodeseek.com/">NodeSeek</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网站收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2024/10/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/git%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/10/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/git%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://www.cnblogs.com/hmy-666/p/17326120.html">www.cnblogs.com/hmy-666/p/17326120.html</a> git 分支的命令与使用</p><p>git 教程（新手向） <a href="https://zhuanlan.zhihu.com/p/135183491">Git 使用教程：最详细、最傻瓜、最浅显、真正手把手教！（万字长文） - 知乎</a></p><p>[Git 基本命令 – 你用过 git diff 吗？补习一下吧 - 知乎](<a href="https://zhuanlan.zhihu.com/p/148312377#:~:text=%E8%BF%90%E8%A1%8C">https://zhuanlan.zhihu.com/p/148312377#:~:text=运行</a> git log –pretty%3Doneline –abbrev-commit 命令看一下当前分支的提交记录，选择两个进行比较。 运行 git,commit 的差异： 好奇宝宝附体，咱们颠倒一下 commit 之间的顺序，看看差异效果 可以看到，比较对象的先后顺序决定了 diff 的差异结果的「增删」。)</p></blockquote><ul><li>概念合集</li></ul><p>远程服务器 远程分支 本地分支 远程跟踪分支&#x3D;&#x3D; 上游分支</p><p><strong>命令合集</strong></p><ul><li><p>查看分支<code>git branch</code></p></li><li><p>创建分支 <code>git branch &lt;本地分支&gt;</code></p></li><li><p>切换分支 <code>git checkout &lt;本地分支&gt;</code></p></li><li><p>当前分支跟踪远程分支 <code>git branch -u &lt;仓库&gt;/&lt;远程分支&gt;</code></p></li><li><p>将当前分支推送到远程仓库并跟踪新分支或旧分支 <code>git push -u &lt;远程仓库&gt; &lt;远程分支&gt;</code>  <strong>不适合直接修改完提交，会把仓库内旧分支覆盖，可以建一个新分支</strong></p></li><li><p>合并某分支到当前分支 <code>git merge &lt;远程分支&gt;</code> (需要先git fetch) 或者<code>&lt;本地分支&gt;</code></p></li><li><p>删除分支 <code>git branch -d name </code></p></li><li><p>创建本地分支跟踪远程分支 <code>git checkout -b  &lt;新建本地分支&gt; &lt;远程服务器分支&gt;/&lt;远程分支（上游分支&gt;</code> （本地分支和追踪的远程分支不要求名字一定想同）</p></li><li><p>指定已有的分支跟踪远程分支 </p><p><code>git branch &lt;已有的分支&gt; -u &lt;远程服务器分支&gt;/&lt;远程分支&gt; </code>   (u&#x3D; –set upstream-to)</p><p>如果在本地分支下可以 <code>git branch -u &lt;远程仓库&gt;/&lt;远程分支&gt;</code></p></li><li><p>查看远程分支和本地分支跟踪情况</p><p><code>git branch -vv</code></p></li><li><p>删除远程分支</p></li><li><p><code>git push &lt;远程仓库&gt;</code> –delete &lt;远程分支&gt;</p></li><li><p>获取所有分支的更新 <code>git fetch origin</code>  </p><p>获取特定分支的更新 <code>git fetch origin &lt;分支名称&gt;</code></p><p>显示区别 <code>git log / git diff</code></p><p>合并某分支到当前 <code>git merge origin/&lt;远程分支&gt;</code></p></li><li><p><code>git pull</code> 是git fetch 和git merge的组合  <code>git pull origin main</code> &#x3D;&#x3D; <code>git fetch origin </code> + <code>git merge origin/main</code></p></li><li><p>查看所有远程分支 <code>git remote show &lt;远程仓库&gt;</code> ；<code>git fetch </code> + <code>git branch -r</code>  or <code>git branch -a</code></p></li><li><p><code>git pull &lt;仓库名&gt; &lt;仓库分支&gt;:&lt;本地分支&gt;</code>  将仓库与本地分支合并，如果是当前分支，不需要冒号后面的内容</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>manjaro学习笔记</title>
      <link href="/2024/10/03/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/manjaro%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/10/03/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/manjaro%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-pacman"><a href="#1-pacman" class="headerlink" title="1. pacman"></a>1. pacman</h1><h1 id="2-配置中文输入法"><a href="#2-配置中文输入法" class="headerlink" title="2.配置中文输入法"></a>2.配置中文输入法</h1><blockquote><p><a href="https://blog.csdn.net/Mingcai_Xiong/article/details/138989121">https://blog.csdn.net/Mingcai_Xiong/article/details/138989121</a></p></blockquote><h1 id="3-安装v2ray代理"><a href="#3-安装v2ray代理" class="headerlink" title="3. 安装v2ray代理"></a>3. 安装v2ray代理</h1><blockquote><p><a href="https://www.wannaexpresso.com/2020/02/23/manjaro-v2ray/">https://www.wannaexpresso.com/2020/02/23/manjaro-v2ray/</a></p><p><a href="https://toutyrater.github.io/prep/start.html">https://toutyrater.github.io/prep/start.html</a></p><p><a href="https://www.v2ray.com/chapter_00/start.html">https://www.v2ray.com/chapter_00/start.html</a></p></blockquote><h1 id="4-修改zsh为bash的shell"><a href="#4-修改zsh为bash的shell" class="headerlink" title="4. 修改zsh为bash的shell"></a>4. 修改zsh为bash的shell</h1><pre><code class="shell">sudo chsh -s --shell /bin/bash lizhao注销后登录</code></pre><h1 id="5-挂载u盘"><a href="#5-挂载u盘" class="headerlink" title="5. 挂载u盘"></a>5. 挂载u盘</h1><blockquote><p><a href="https://blog.csdn.net/qq_37677519/article/details/78160733">https://blog.csdn.net/qq_37677519/article/details/78160733</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003222642109.png" alt="image-20241003222642109"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003222653282.png" alt="image-20241003222653282"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003222706833.png" alt="image-20241003222706833"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003222736874.png" alt="image-20241003222736874"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003222854582.png" alt="image-20241003222854582"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003223013889.png" alt="image-20241003223013889"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003223028021.png" alt="image-20241003223028021"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241003223136102.png" alt="image-20241003223136102"></p><h1 id="1-关于-systemctl"><a href="#1-关于-systemctl" class="headerlink" title="1. 关于 systemctl"></a>1. 关于 systemctl</h1><p><a href="https://www.cnblogs.com/zwcry/p/9602756.html">https://www.cnblogs.com/zwcry/p/9602756.html</a></p><h1 id="2-使用conections从linux连接windows"><a href="#2-使用conections从linux连接windows" class="headerlink" title="2.使用conections从linux连接windows"></a>2.使用conections从linux连接windows</h1><h1 id="3-使用samba访问nas文件"><a href="#3-使用samba访问nas文件" class="headerlink" title="3.使用samba访问nas文件"></a>3.使用samba访问nas文件</h1><p><a href="https://coda.world/linux-and-samba-share/#:~:text=%E7%94%A8%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE">https://coda.world/linux-and-samba-share/#:~:text=%E7%94%A8%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE</a></p><p>另一种（不优雅）：smbclient &#x2F;&#x2F;192.168.110.13&#x2F;Home1 -U 18843101769%1021</p><h1 id="4-配置代理"><a href="#4-配置代理" class="headerlink" title="4. 配置代理"></a>4. 配置代理</h1><p><a href="https://zhuanlan.zhihu.com/p/676022554#:~:text=%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E8%BE%93%E5%85%A5%E4%BB%A5%E4%B8%8B%E5%91%BD%E4%BB%A4">https://zhuanlan.zhihu.com/p/676022554#:~:text=%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E8%BE%93%E5%85%A5%E4%BB%A5%E4%B8%8B%E5%91%BD%E4%BB%A4</a></p><h1 id="5-使用快照备份系统"><a href="#5-使用快照备份系统" class="headerlink" title="5.使用快照备份系统"></a>5.使用快照备份系统</h1><p><a href="https://cn.linux-console.net/?p=19103#:~:text=%E6%9C%AC%E5%88%9D%E5%AD%A6%E8%80%85%E6%8C%87%E5%8D%97%E5%90%91%E6%82%A8%E5%B1%95%E7%A4%BA">https://cn.linux-console.net/?p=19103#:~:text=%E6%9C%AC%E5%88%9D%E5%AD%A6%E8%80%85%E6%8C%87%E5%8D%97%E5%90%91%E6%82%A8%E5%B1%95%E7%A4%BA</a></p><h1 id="6-使用Backups备份文件"><a href="#6-使用Backups备份文件" class="headerlink" title="6.使用Backups备份文件"></a>6.使用Backups备份文件</h1><h1 id="7-安装微信"><a href="#7-安装微信" class="headerlink" title="7.安装微信"></a>7.安装微信</h1><p><a href="https://wenku.csdn.net/answer/4tppvuy282">https://wenku.csdn.net/answer/4tppvuy282</a></p><h1 id="8-常用命令"><a href="#8-常用命令" class="headerlink" title="8.常用命令"></a>8.常用命令</h1><p><a href="https://cloud.tencent.com/developer/article/2223411">https://cloud.tencent.com/developer/article/2223411</a></p><h1 id="9-添加AUR源"><a href="#9-添加AUR源" class="headerlink" title="9.添加AUR源"></a>9.添加AUR源</h1><p><a href="https://cloud.tencent.com/developer/article/1948468">https://cloud.tencent.com/developer/article/1948468</a></p><h1 id="10-pamac无法查看分类-和AUR源"><a href="#10-pamac无法查看分类-和AUR源" class="headerlink" title="10. pamac无法查看分类 和AUR源"></a>10. pamac无法查看分类 和AUR源</h1><p>关闭软件模式</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20241008110252006.png" alt="image-20241008110252006"></p><ul><li><p>查看AUR源需要再点一下搜索，使用pamac命令在命令行搜索能够查找AUR源</p><p>或者关掉然后重新开启以下</p><p>查看源是否有问题 yay -p -Q</p></li></ul><h1 id="11-使用rsync备份文件"><a href="#11-使用rsync备份文件" class="headerlink" title="11.使用rsync备份文件"></a>11.使用rsync备份文件</h1><p><a href="https://www.ruanyifeng.com/blog/2020/08/rsync.html">https://www.ruanyifeng.com/blog/2020/08/rsync.html</a></p><h1 id="12-将用户加到管理员组"><a href="#12-将用户加到管理员组" class="headerlink" title="12.将用户加到管理员组"></a>12.将用户加到管理员组</h1><p><code>sudo usermod -aG wheel lizhao</code></p><h1 id="13-command命令"><a href="#13-command命令" class="headerlink" title="13.command命令"></a>13.command命令</h1><p>command -V </p><h1 id="14-关于路由、端口、主机动态ip、静态ip、主机mac"><a href="#14-关于路由、端口、主机动态ip、静态ip、主机mac" class="headerlink" title="14.关于路由、端口、主机动态ip、静态ip、主机mac"></a>14.关于路由、端口、主机动态ip、静态ip、主机mac</h1><ul><li><p>路由分配给主机ip, 这个主机相当于挂载在路由上的一个端口上。需要首先由路由分配给主机一个静态ip（从LAN设置）和设置一个端口映射，</p></li><li><p>主机应该打开sshd服务，这样外面的机器可以访问本地 </p><p><code>systemctl start sshd</code></p></li><li><p>同一个路由下的主机的ip地址前几个是相同的，可以通过输入前几个进入路由设置</p></li><li><p>访问时，访问路由的特定端口，然后 由路由转到主机</p></li><li><p>访问路由可以通过 ip address 查看ip,然后删除最后的数字换成1</p></li></ul><p><img src="/../../%E5%9B%BE%E7%89%87/image-20241008164703168.png" alt="image-20241008164703168"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20241008165352346.png" alt="image-20241008165352346"></p><h1 id="15-xdotool工具"><a href="#15-xdotool工具" class="headerlink" title="15. xdotool工具"></a>15. xdotool工具</h1><p><a href="http://git.malu.me/xdotool%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E7%AC%94%E8%AE%B0/w">http://git.malu.me/xdotool%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E7%AC%94%E8%AE%B0/w</a></p><h1 id="16-不同系统的区别"><a href="#16-不同系统的区别" class="headerlink" title="16.不同系统的区别"></a>16.不同系统的区别</h1><p><a href="https://www.51cto.com/article/621615.html">https://www.51cto.com/article/621615.html</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>不同的主动学习方法</title>
      <link href="/2024/08/29/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%B8%8D%E5%90%8C%E7%9A%84%E4%B8%BB%E5%8A%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
      <url>/2024/08/29/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%B8%8D%E5%90%8C%E7%9A%84%E4%B8%BB%E5%8A%A8%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-随机位移的方法"><a href="#1-随机位移的方法" class="headerlink" title="1. 随机位移的方法"></a>1. 随机位移的方法</h1><p><strong>给整个结构中的原子引入随机位移，代替md过程，增加采样</strong></p><p>核心脚本</p><p><code>random_distance.py</code></p><p>需要的文件</p><p><code>sub-grade.sh  POSCAR inv2 </code></p><pre><code class="python">import numpy as npfrom sys import argvfrom ase.atoms import Atomsfrom ase.io import readimport osimport subprocessimport shutildef write2my(file_path, ene_i, lat_i, ele_i, coo_i, foc_i, vir_i=None):    lat_i = lat_i.reshape(3, 3)    coo_i = coo_i.reshape(-1, 3)    foc_i = foc_i.reshape(-1, 3)    with open(file_path, &#39;w&#39;) as file:        file.write(f&quot;# total energy = &#123;ene_i&#125; eV\n\n&quot;)        if vir_i is not None:            vir_i = np.array(vir_i).reshape(-1)            file.write(f&quot;VIRIAL\n&quot;)            for i in vir_i:                file.write(f&#39;&#123;i:20.8f&#125;&#39;)        file.write(&quot;\n&quot;)        file.write(&quot;CRYSTAL\n&quot;)        file.write(&quot;PRIMVEC\n&quot;)        for j in lat_i:            for k in j:                file.write(f&#39;&#123;k:20.8f&#125;&#39;)            file.write(&#39;\n&#39;)        file.write(&quot;PRIMCOORD\n&quot;)        file.write(f&quot;&#123;len(coo_i)&#125; 1\n&quot;)        for j in range(len(coo_i)):            file.write(f&#39;&#123;ele_i[j]:2&#125;&#39;)            # coo            for k in coo_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            # force            for k in foc_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            file.write(&quot;\n&quot;)    passdef read_from_ase_atoms(atoms: Atoms):    try:        ene = atoms.get_potential_energy()    except:        ene = 0.0    lat = atoms.get_cell()    pos = atoms.get_positions()    try:        foc = atoms.get_forces()    except:        foc = np.zeros_like(pos)    try:        sts = atoms.get_stress()        xx, yy, zz, yz, xz, xy = - sts * atoms.get_volume()        vir = np.array(            [[xx, xy, xz],             [xy, yy, yz],             [xz, yz, zz]]).reshape(-1)    except:        vir = np.zeros([3, 3])    ele = atoms.get_chemical_symbols()    return ene, lat, pos, foc, vir, eledef read_poscar(filename):    with open(filename,&#39;r&#39;) as file:        lines =file.readlines()    title =lines[0].strip()    scale =float(lines[1].strip())    #for i in range(2,5):    #    lattice_list.append(list(map(float,line[i].split())))    #lattice_array=np.array(lattice_list)    lattice_vectors = np.array([list(map(float,lines[i].split())) for i in range(2,5)])    element_type=lines[5].split()    atomnumbers=np.array(list(map(int,lines[6].split())))    atompositions=np.array([list(map(float,lines[i].split()[:3])) for i in range(8,8+sum(atomnumbers))])    cor_type = lines[7].strip()    if cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions[atompositions &lt; 0]+=1        atompositions[atompositions &gt;=1]-=1    elif cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    return(title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions)def write_poscar(filename,title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions):     with open(filename,&#39;w&#39;) as file:        file.write(f&quot;&#123;title&#125;\n&quot;)        file.write(f&quot;&#123;scale&#125;\n&quot;)        for vec in lattice_vectors:            file.write(f&quot;&#123;vec[0]:.8f&#125;  &#123;vec[1]:.8f&#125;  &#123;vec[2]:.8f&#125;\n&quot;)        #&quot;  &quot;.join用于将可迭代对象的元素以空格连接起来        file.write(&quot;  &quot;.join(element_type)+ &quot;\n&quot;)        file.write(&quot;  &quot;.join(map(str,atomnumbers))+ &quot;\n&quot;)        file.write(f&quot;&#123;cor_type&#125;\n&quot;)        for pos in atompositions:            file.write(f&quot;&#123;pos[0]:.8f&#125;  &#123;pos[1]:.8f&#125;  &#123;pos[2]:.8f&#125;\n&quot;)def change_dir_to_car(filename):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= read_poscar(filename)    if cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions = np.dot(atompositions,lattice_vectors)        cor_type = &quot;Cartesian&quot;    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositionsdef atom_pos(atomnumbers,atompositions):    atom_pos = np.split(atompositions,np.cumsum(atomnumbers)[:-1])    return atom_posparent_dir = os.path.dirname(os.getcwd())oos_dir = os.path.join(parent_dir, &quot;oos&quot;)os.makedirs(oos_dir, exist_ok=True)counter = 0counter2 = 0counter3 = 0exit_flag = Falsefor itera in range(1, 100):    if exit_flag:        break    mignitude1 = 0.0018*itera    mignitude2 = 0.0009*itera    mignitude3 = 0.0017*itera    mignitude4 = 0.0022*itera        title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions=change_dir_to_car(&quot;POSCAR&quot;)        atom_pos = atom_pos(atomnumbers,atompositions)    for i in range(1,10001):        counter3 +=1        if exit_flag:            break        counter +=1        rd1=np.random.randn(atomnumbers[0],3)*mignitude1        rd2=np.random.randn(atomnumbers[1],3)*mignitude1        rd3=np.random.randn(atomnumbers[2],3)*mignitude1        rd4=np.random.randn(atomnumbers[3],3)*mignitude1        atom_pos[0]+=rd1        atom_pos[1]+=rd2        atom_pos[2]+=rd3        atom_pos[3]+=rd4        atompositions = np.concatenate(atom_pos)        write_poscar(f&quot;&#123;counter&#125;.vasp&quot;,title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions)        datas = read(f&quot;&#123;counter&#125;.vasp&quot;, index=&quot;:&quot;)        ene, lat, pos, foc, vir, ele = read_from_ase_atoms(datas[0])        write2my(            f&quot;&#123;counter&#125;.xsf&quot;,            ene_i=ene,            lat_i=lat,            ele_i=ele,            coo_i=pos,            foc_i=foc,            vir_i=vir)        os.remove(f&quot;&#123;counter&#125;.vasp&quot;)        print(counter3)        if counter3 &gt;= 100:            subprocess.run([&quot;sh&quot;, &quot;sub-grade.sh&quot;], check=True)            with open(&quot;grade-log&quot;, &#39;r&#39;) as file:                lines = file.readlines()                        for line in lines:                if exit_flag:                    break                if &#39;grad:&#39; in line:                    parts = line.split()                    filename = parts[0]                    grade_value = float(parts[-1])                    if 3 &lt; grade_value &lt; 8:                        counter2 += 1                        if counter2 &gt;= 50:                            exit_flag = True                            break                        src = os.path.join(os.getcwd(), filename)                        dst = os.path.join(oos_dir, filename)                        shutil.move(src, dst)                    else:                        os.remove(filename)                    counter3 = 0            </code></pre><p><code>iter_scheduling_remote.sh</code> 中修改的内容</p><pre><code class="shell">echo &quot;Simulation ...&quot;# run local &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;mkdir random_vaspmv sub-grade.sh random_vaspmv Ap_inv* random_vaspmv inv2 random_vaspmv random_distance.py random_vaspmv POSCAR random_vaspcd random_vasppython random_distance.py</code></pre><h1 id="2-切割的方法"><a href="#2-切割的方法" class="headerlink" title="2. 切割的方法"></a>2. 切割的方法</h1><p>切割后的结构grade比较大，不太好用</p><pre><code class="python">&quot;&quot;&quot;输入可以有多种形式,输出目前只有writ_poscar可以&quot;&quot;&quot;import numpy as npimport osfrom ase.atoms import Atomsfrom ase.io import readimport subprocessimport shutildef write2my(file_path, ene_i, lat_i, ele_i, coo_i, foc_i, vir_i=None):    lat_i = lat_i.reshape(3, 3)    coo_i = coo_i.reshape(-1, 3)    foc_i = foc_i.reshape(-1, 3)    with open(file_path, &#39;w&#39;) as file:        file.write(f&quot;# total energy = &#123;ene_i&#125; eV\n\n&quot;)        if vir_i is not None:            vir_i = np.array(vir_i).reshape(-1)            file.write(f&quot;VIRIAL\n&quot;)            for i in vir_i:                file.write(f&#39;&#123;i:20.8f&#125;&#39;)        file.write(&quot;\n&quot;)        file.write(&quot;CRYSTAL\n&quot;)        file.write(&quot;PRIMVEC\n&quot;)        for j in lat_i:            for k in j:                file.write(f&#39;&#123;k:20.8f&#125;&#39;)            file.write(&#39;\n&#39;)        file.write(&quot;PRIMCOORD\n&quot;)        file.write(f&quot;&#123;len(coo_i)&#125; 1\n&quot;)        for j in range(len(coo_i)):            file.write(f&#39;&#123;ele_i[j]:2&#125;&#39;)            # coo            for k in coo_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            # force            for k in foc_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            file.write(&quot;\n&quot;)    passdef read_from_ase_atoms(atoms: Atoms):    try:        ene = atoms.get_potential_energy()    except:        ene = 0.0    lat = atoms.get_cell()    pos = atoms.get_positions()    try:        foc = atoms.get_forces()    except:        foc = np.zeros_like(pos)    try:        sts = atoms.get_stress()        xx, yy, zz, yz, xz, xy = - sts * atoms.get_volume()        vir = np.array(            [[xx, xy, xz],             [xy, yy, yz],             [xz, yz, zz]]).reshape(-1)    except:        vir = np.zeros([3, 3])    ele = atoms.get_chemical_symbols()    return ene, lat, pos, foc, vir, eledef read_poscar(filename):    with open(filename,&#39;r&#39;) as file:        lines =file.readlines()    title =lines[0].strip()    scale =float(lines[1].strip())    #for i in range(2,5):    #    lattice_list.append(list(map(float,line[i].split())))    #lattice_array=np.array(lattice_list)    lattice_vectors = np.array([list(map(float,lines[i].split())) for i in range(2,5)])    element_type=lines[5].split()    atomnumbers=np.array(list(map(int,lines[6].split())))    atompositions=np.array([list(map(float,lines[i].split()[:3])) for i in range(8,8+sum(atomnumbers))])    cor_type = lines[7].strip()    if cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions[atompositions &lt; 0]+=1        atompositions[atompositions &gt;=1]-=1    elif cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    return(title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions)def write_poscar(filename,title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions):     with open(filename,&#39;w&#39;) as file:        file.write(f&quot;&#123;title&#125;\n&quot;)        file.write(f&quot;&#123;scale&#125;\n&quot;)        for vec in lattice_vectors:            file.write(f&quot;&#123;vec[0]:.8f&#125;  &#123;vec[1]:.8f&#125;  &#123;vec[2]:.8f&#125;\n&quot;)        #&quot;  &quot;.join用于将可迭代对象的元素以空格连接起来        file.write(&quot;  &quot;.join(element_type)+ &quot;\n&quot;)        file.write(&quot;  &quot;.join(map(str,atomnumbers))+ &quot;\n&quot;)        file.write(f&quot;&#123;cor_type&#125;\n&quot;)        for pos in atompositions:            file.write(f&quot;&#123;pos[0]:.8f&#125;  &#123;pos[1]:.8f&#125;  &#123;pos[2]:.8f&#125;\n&quot;)#输出不同类型原子的坐标def atom_pos(atomnumbers,atompositions):    atom_pos = np.split(atompositions,np.cumsum(atomnumbers)[:-1])    return atom_pos        &quot;&quot;&quot;功能区&quot;&quot;&quot;#计算体积def cal_volume(lattice_vectors):    volume = np.abs(np.dot(lattice_vectors[0],np.cross(lattice_vectors[1],lattice_vectors[2])))    return volume#转换分数坐标为笛卡尔坐标def change_dir_to_car(filename):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= read_poscar(filename)    if cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions = np.dot(atompositions,lattice_vectors)        cor_type = &quot;Cartesian&quot;    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#笛卡尔坐标转换为分数坐标def change_car_to_dir(filename):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions = read_poscar(filename)    if cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        atompositions = np.dot(atompositions,np.linalg.inv(lattice_vectors))        cor_type = &quot;Direct&quot;        atompositions[atompositions &lt; 0]+=1        atompositions[atompositions &gt;=1]-=1    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        pass    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#晶格向量的变换def lattice_change(filename,cell_type):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= change_car_to_dir(filename)    if cell_type == &#39;211&#39;:        pass    elif cell_type == &quot;121&quot;:        middle_value = lattice_vectors[0].copy()        lattice_vectors[0] = lattice_vectors[1]        lattice_vectors[1] = lattice_vectors[2]        lattice_vectors[2] = middle_value        middle_value2 = atompositions[:,0].copy()        atompositions[:,0] = atompositions[:,1]        atompositions[:,1] = atompositions[:,2]        atompositions[:,2] = middle_value2    elif cell_type == &quot;112&quot;:        middle_value = lattice_vectors[0].copy()        lattice_vectors[0] = lattice_vectors[2]        lattice_vectors[2] = lattice_vectors[1]        lattice_vectors[1] = middle_value        middle_value2 = atompositions[:,0].copy        atompositions[:,0] = atompositions[:,2]        atompositions[:,2] = atompositions[:,1]        atompositions[:,1] = middle_value2    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#将211晶胞分解为两个111晶胞def split_211(input_file,cell_type,output_file1,output_file2):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= lattice_change(input_file,cell_type)    atom_type_pos = atom_pos(atomnumbers,atompositions)    total_atoms1 = []    total_atoms_number1 = []    total_atoms2 = []    total_atoms_number2 = []    if cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        for sub_atom_type_pos in atom_type_pos:            print(sub_atom_type_pos)            coord_1=sub_atom_type_pos[sub_atom_type_pos[:,0]&lt;=0.48].copy()            total_atoms1.append(coord_1)            total_atoms_number1.append(len(coord_1))                    coord_2=sub_atom_type_pos[sub_atom_type_pos[:,0]&gt;0.52].copy()            total_atoms2.append(coord_2)            total_atoms_number2.append(len(coord_2))    # elif cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:    #     for sub_atom_type_pos in atom_type_pos:    #         sub_atom_type_pos=np.dot(sub_atom_type_pos,np.linalg.inv(lattice_vectors))    #         sub_atom_type_pos[sub_atom_type_pos &lt; 0]+=1    #         sub_atom_type_pos[sub_atom_type_pos &gt;=1]-=1    #         coord_1=sub_atom_type_pos[sub_atom_type_pos[:,0]&lt;=0.5].copy()    #         total_atoms1.append(coord_1)    #         total_atoms_number1.append(len(coord_1))            #         coord_2=sub_atom_type_pos[sub_atom_type_pos[:,0]&gt;0.5].copy()    #         total_atoms2.append(coord_2)    #         total_atoms_number2.append(len(coord_2))    #     cor_type = &quot;Direct&quot;    total_atoms1=np.vstack(total_atoms1)    total_atoms2=np.vstack(total_atoms2)    total_atoms1=np.dot(total_atoms1,lattice_vectors)    total_atoms2=np.dot(total_atoms2,lattice_vectors)    lattice_vectors[0]/=2    cor_type =&quot;Cartesian&quot;    # print(total_atoms1)    # print(total_atoms_number1)    write_poscar(output_file1,title,scale,lattice_vectors,element_type,total_atoms_number1,cor_type,total_atoms1)    write_poscar(output_file2,title,scale,lattice_vectors,element_type,total_atoms_number2,cor_type,total_atoms2)#POSCAR坐标的修改def coords_change(axis,value,cor_type,atompositions):    if cor_type.lower() == &quot;Cartesian&quot; or cor_type.lower() == &quot;c&quot;:        print(&quot;use change_car_to_dir to input&quot;)    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        if axis == &#39;x&#39;:           atompositions[:,0] += value        elif axis == &#39;y&#39;:           atompositions[:,1] += value        elif axis == &#39;z&#39;:           atompositions[:,2] += value        else:            raise ValueError(f&quot;invalid axis&quot;)    else:        raise ValueError(f&quot;invalid cor_type&quot;)    return atompositions#切割x*y*z倍的晶胞为x*y*z个晶胞def split_cell(input_file,x,y,z):    input_file_without_ext = os.path.splitext(input_file)[0]    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= change_car_to_dir(input_file)    atom_type_pos = atom_pos(atomnumbers,atompositions)    total_cells = [[[&#123;elem:[] for elem in element_type&#125; for _ in range(z)] for _ in range(y)] for _ in range(x)]    total_atom_numbers = [[[&#123;elem: 0 for elem in element_type&#125; for _ in range(z)] for _ in range(y)] for _ in range(x)]    if cor_type.lower() == &quot;direct&quot; or cor_type.lower == &quot;d&quot;:        for elem_index,sub_atom_type_pos in enumerate(atom_type_pos):            elem = element_type[elem_index]            for atom in sub_atom_type_pos:                ix = int(atom[0]*x)                iy = int(atom[1]*y)                iz = int(atom[2]*z)                total_cells[ix][iy][iz][elem].append(atom)                total_atom_numbers[ix][iy][iz][elem] += 1    cor_type =&quot;Cartesian&quot;    lattice_vectors_changed = np.zeros((3,3))    lattice_vectors_changed[0] = lattice_vectors[0]/x    lattice_vectors_changed[1] = lattice_vectors[1]/y    lattice_vectors_changed[2] = lattice_vectors[2]/z    os.makedirs(&quot;xsf_output&quot;)    for ix in range(x):        for iy in range(y):            for iz in range(z):                output_file =f&quot;&#123;input_file_without_ext&#125;_&#123;ix&#125;&#123;iy&#125;&#123;iz&#125;.vasp&quot;                sub_atoms = np.vstack([atom for elem in element_type for atom in total_cells[ix][iy][iz][elem]])                sub_atoms = np.dot(sub_atoms, lattice_vectors)                subcell_numbers = [total_atom_numbers[ix][iy][iz][elem] for elem in element_type]                write_poscar(output_file,title,scale,lattice_vectors_changed,element_type,subcell_numbers,cor_type,sub_atoms)                datas = read(output_file, index=&quot;:&quot;)                ene, lat, pos, foc, vir, ele = read_from_ase_atoms(datas[0])                output_file_path = os.path.join(&quot;xsf_output&quot;, f&quot;&#123;output_file&#125;.xsf&quot;)                write2my(                    output_file_path,                    ene_i=ene,                    lat_i=lat,                    ele_i=ele,                    coo_i=pos,                    foc_i=foc,                    vir_i=vir)split_cell(&quot;POSCAR&quot;,2,2,2)#os.remove(&quot;POS&quot;)subprocess.run([&quot;dsub&quot;,&quot;-s&quot;,&quot;sub-grade.sh&quot;], check=True)counter = 0with open(&quot;grade-log&quot;, &#39;r&#39;) as file:    lines = file.readlines()    for line in lines:        if &#39;grad:&#39; in line:            parts = line.split()            filename = parts[0]            filename_first = os.path.splitext(filename)[0]            grade_value = float(parts[-1])            if 3 &lt; grade_value &lt; 8:                os.makedirs(filename_first)                shutil.move(f&quot;&#123;filename_first&#125;&quot;, os.path.join (filename_first, &quot;POSCAR&quot;))            else:                os.remove(f&quot;&#123;filename_first&#125;&quot;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高精度数据集构建步骤</title>
      <link href="/2024/08/10/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9E%84%E5%BB%BA%E6%AD%A5%E9%AA%A4/"/>
      <url>/2024/08/10/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9E%84%E5%BB%BA%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><hr><ol><li><p>给每个文件分配文件夹</p><pre><code class="shell">counter=0for file in *;do if [ -f &quot;$file&quot; ];then    new_folder=&quot;$counter&quot;    mkdir -p &quot;$new_folder&quot;    mv &quot;$file&quot; &quot;$new_folder&quot;    counter=&quot;$((counter+1))&quot;fidone</code></pre></li><li><p>准备计算文件</p><p><code>for i in */;do cp my2poscar.py $i;cd $i;python my2poscar.py *.xsf POSCAR;cd ..;done</code></p><p><code>for i in */;do cp makepot.py $i;cd $i;python makepot.py ;cd ..;done</code></p></li><li><p>先找出所有的原子数为单胞的结构</p></li></ol><p><code>grep -B 1 &#39;Car&#39; POSCAR | awk &#39;/Car/ &#123;print $0&#125;&#39; &gt; atom_number.dat</code></p><p><code>grep 72 atom_number.dat &gt; 72.dat</code></p><p><code>grep 144 atom_number.dat &gt; 144.dat</code></p><p>可以做两遍，把那些原子数多的都删除掉</p><ol start="2"><li><p>对找出的单胞进行高精度自洽计算</p></li><li><p>检验有没有没有进行计算的目录(找OSZICAR)</p><p><code>find . -type d ! -exec test -e &#39;&#123;&#125;/OSZICAR&#39; \; -print</code></p></li><li><p>检查有哪些没有计算成功</p></li></ol><p>​       <code>grep -rl &quot;vasp.6.1.0&quot; */OUTCAR | xargs grep -L &quot;CPU&quot;</code></p><ol start="4"><li>构建数据集，进行新的机器学习势训练</li></ol>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OER台阶图</title>
      <link href="/2024/07/18/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/OER%E5%92%8CHER/"/>
      <url>/2024/07/18/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/OER%E5%92%8CHER/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-关于催化理论知识"><a href="#1-关于催化理论知识" class="headerlink" title="1. 关于催化理论知识"></a>1. 关于催化理论知识</h1><blockquote><ol><li>Bifunctional CoNx embedded graphene electrocatalysts for OER and ORR: A theoretical evaluation</li><li><a href="https://www.bilibili.com/video/BV1Q7411k7NU/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">VASP电催化，OER&#x2F;ORR计算实例【电催化课程2】_哔哩哔哩_bilibili</a></li><li><a href="https://www.bigbrosci.com/2018/11/06/ex68/">Ex68 频率，零点能，吉布斯自由能的计算 | Learn VASP The Hard Way (bigbrosci.com)</a></li><li><a href="https://blog.shishiruqi.com/2019/04/21/freenergy/">校正分子和吸附分子自由能 | 世事如棋 (shishiruqi.com)</a></li><li><a href="https://www.bilibili.com/video/BV1aH4y1278C/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">催化OER计算：PH值对反应自由能影响 | 【华算科技朱老师讲DFT-VASP】_哔哩哔哩_bilibili</a></li></ol></blockquote><h2 id="1-ORR-and-OER"><a href="#1-ORR-and-OER" class="headerlink" title="1. ORR and OER"></a>1. ORR and OER</h2><ul><li>ORR : oxygen reduction reaction 氧还原反应</li><li>OER : oxygen evolution reaction  氧析出反应</li></ul><p>用于金属-空气电池</p><h3 id="1-OER-：氧气析出过程-氢气脱离过程"><a href="#1-OER-：氧气析出过程-氢气脱离过程" class="headerlink" title="1. OER ：氧气析出过程&#x2F;氢气脱离过程"></a>1. OER ：氧气析出过程&#x2F;氢气脱离过程</h3><blockquote><p>H2O   to OH and H+ and e-</p><p>其中，H+ and e-的能量用1&#x2F;2 H2表示</p><p>H2O是液态水分子的能量，等于饱和蒸汽压下的水蒸汽能量（常温下 ~0.035 bar) 用vaspkit-502-298.15-0.035-1计算</p><p>OH to O</p><p>O and H2O to OOH</p><p>OOH to O2</p><p>氧气自由能不能直接计算，需要用2G(H2O)-2G(H2)-G(O2)&#x3D;-4.92 eV计算，以保证总包的反应能量。同理，CO N2也需要能量反推</p><p>O2 脱吸附</p></blockquote><p>其中，前四步是电子过程，也是通常台阶图包括的</p><hr><h2 id="3-计算过程"><a href="#3-计算过程" class="headerlink" title="3. 计算过程"></a>3. 计算过程</h2><ol><li><p>计算H2O H2 O2 的自由能 (需要修正能量 H2O用饱和蒸汽压的方法;注意算频率的一步只能得到修正的能量，不能用最后的总能当作最后的总能，总能看正常优化、自洽后的总能；氧气自由能不能直接计算(自旋多重度），需要用2G(H2O)-2G(H2)-G(O2)&#x3D;-4.92 eV，注意添加自旋极化 ISYM&#x3D;0)</p><p>氧气有自旋，电子占据问题，高斯软件的高斯基组可以计算能量，但是vasp的平面波无法计算<a href="https://www.bilibili.com/video/BV1pB4y1A7Ae/?spm_id_from=333.788&vd_source=3fde33be3f37f952ed046ee6301aa448">DFT学习11-VASP和高斯计算有何不同_哔哩哔哩_bilibili</a></p><p>自旋极化计算需要把ISYM 设置为0（<a href="https://www.bigbrosci.com/2017/10/30/ex08/">Ex08 氧原子能量的正确计算 | Learn VASP The Hard Way (bigbrosci.com)</a>）</p></li><li><p>优化基底 (固定c轴的优化)</p></li><li><p>优化基团+基底 （ISIF&#x3D;2 即固定晶格，催化是化学吸附，不需要考虑范德瓦尔斯修正(VDW)，但需要考虑零点振动能的能量修正）</p><p><strong>进行频率计算校正能量时，由于只能使用NPAR&#x3D;1,所以用结构优化的k点数量算频率很不划算，很慢。测试发现用Gamma点计算后修正的G值的量变化只有几个meV。可以直接用Gamma点计算。</strong></p></li><li><p>对基团+基底进行自由能校正(需要固定住基底原子，selective dynamics ,只放开吸附的分子做计算)</p></li><li><p>进行分电势的台阶图计算</p></li><li><p>过电势由能量变化最大的一步减去1.23eV&#x2F;e 得到</p></li></ol><h2 id="2-需要注意的计算细节"><a href="#2-需要注意的计算细节" class="headerlink" title="2.需要注意的计算细节"></a>2.需要注意的计算细节</h2><ul><li><p>优化二维材料需要用固定一个晶格的优化，而不是全部打开</p><p>OPTCELL</p></li></ul><pre><code class="shell"># 固定c轴进行优化，不希望改变和c轴的夹角100110000</code></pre><ul><li><p>磁性元素ISPIN &#x3D;2</p></li><li><p>优化吸附物的时候用固定晶格的优化就可以了</p></li><li><p>第一性原理计算不能直接计算双原子分子的能量，有较大误差</p></li></ul><hr><h3 id="1-自由能的计算（计算频率以修正自由能）："><a href="#1-自由能的计算（计算频率以修正自由能）：" class="headerlink" title="1.自由能的计算（计算频率以修正自由能）："></a>1.自由能的计算（计算频率以修正自由能）：</h3><p>通常的计算中只考虑了晶体的势能而没有考虑零点振动能及温度变化导致的电子能对能量的贡献。通过计算气相分子的频率得到振动相关的配分函数，进而可以计算振动对能量的贡献。</p><p>计算溶液分子的自由能可以通过饱和蒸汽压的方法shi’xian</p><ol><li>计算基团的频率振动</li></ol><pre><code class="shell">EDIFF = 1E-7IBRION = 5 #有限差分海森矩阵POTIM =0.015  #步长NFREE =2 #中心差分的算法NSW = 1ISIF =2 ISYM = 0固定基底的原子(by vaspkit) selected dynamics</code></pre><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240913211253982.png" alt="image-20240913211253982"></p><p>计算完成后查看频率</p><p><code> grep cm OUTCAR</code></p><p>校正自由能使用 vaspkit 501</p><hr><h1 id="2-碱性-酸性环境下的催化"><a href="#2-碱性-酸性环境下的催化" class="headerlink" title="2. 碱性&#x2F;酸性环境下的催化"></a>2. 碱性&#x2F;酸性环境下的催化</h1><blockquote><p><a href="https://www.bilibili.com/video/av67721985/?vd_source=3fde33be3f37f952ed046ee6301aa448">超详细电催化台阶图计算步骤，细节拉满【电催化课程1】_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1BK4y1d73H/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">DFT16-碱性条件下OER的计算_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1aH4y1278C/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">催化OER计算：PH值对反应自由能影响 | 【华算科技朱老师讲DFT-VASP】_哔哩哔哩_bilibili</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240726091418857.png" alt="image-20240726091418857"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240725163001124.png" alt="image-20240725163001124"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240926102947433.png" alt="image-20240926102947433"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240926103042908.png" alt="image-20240926103042908"></p><blockquote><p><strong>Selectively nitrogen-doped carbon materials as  superior metal-free catalysts for oxygen reduction</strong></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240726142836671.png" alt="image-20240726142836671"></p><h1 id="3-HER-析氢反应"><a href="#3-HER-析氢反应" class="headerlink" title="3. HER 析氢反应"></a>3. HER 析氢反应</h1><blockquote><p><a href="https://www.bilibili.com/video/BV1Fe411F7yK/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">析氢反应（HER）计算_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV19CgoeKEz8/?spm_id_from=333.337.search-card.all.click&vd_source=3fde33be3f37f952ed046ee6301aa448">吸附与催化：HER反应计算_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV17K411K7oH/?vd_source=3fde33be3f37f952ed046ee6301aa448">老司机公开课3 | 计算电催化专题 2小时干货拉满_哔哩哔哩_bilibili</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240919202401459.png" alt="image-20240919202401459"> </p><p>酸性条件下的HER，1.需要吸热的部分加个电压就克服了；2.并不是放热越大越好，因为第二步脱氢的时候也会越大，所以绝对值越小越好</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920110028493.png" alt="image-20240920110028493"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920110053716.png" alt="image-20240920110053716"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920110558249.png" alt="image-20240920110558249"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920110632396.png" alt="image-20240920110632396"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920110618106.png" alt="image-20240920110618106"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920112512564.png" alt="image-20240920112512564"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920112427558.png" alt="image-20240920112427558"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920112434745.png" alt="image-20240920112434745"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920112455211.png" alt="image-20240920112455211"></p><blockquote><p><a href="https://www.researchgate.net/publication/352363498_Macroporous_Array_Induced_Multiscale_Modulation_at_the_SurfaceInterface_of_CoOH2NiMo_Self-Supporting_Electrode_for_Effective_Overall_Water_Splitting?_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6Il9kaXJlY3QiLCJwYWdlIjoiX2RpcmVjdCJ9fQ">Macroporous Array Induced Multiscale Modulation at the Surface&#x2F;Interface of Co(OH)2&#x2F;NiMo Self‐Supporting Electrode for Effective Overall Water Splitting</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920141930381.png" alt="image-20240920141930381"></p><blockquote><p><a href="https://www.researchgate.net/publication/342964851_Trends_in_Alkaline_Hydrogen_Evolution_Activity_on_Cobalt_Phosphide_Electrocatalysts_Doped_with_Transition_Metals?_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6Il9kaXJlY3QiLCJwYWdlIjoiX2RpcmVjdCJ9fQ">Trends in Alkaline Hydrogen Evolution Activity on Cobalt Phosphide Electrocatalysts Doped with Transition Metals</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920142618174.png" alt="image-20240920142618174"></p><blockquote><p><a href="https://www.researchgate.net/publication/357180559_Review_of_the_Hydrogen_Evolution_Reaction-A_Basic_Approach?_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6Il9kaXJlY3QiLCJwYWdlIjoiX2RpcmVjdCJ9fQ">Review of the Hydrogen Evolution Reaction—A Basic Approach</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920142752619.png" alt="image-20240920142752619"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920142919588.png" alt="image-20240920142919588"></p><blockquote><p><a href="https://www.sciencedirect.com/science/article/pii/S2211285520312180">https://www.sciencedirect.com/science/article/pii/S2211285520312180</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920143350032.png" alt="image-20240920143350032"></p><p><a href="https://pubs.rsc.org/en/content/articlepdf/2023/nr/d3nr01940c">https://pubs.rsc.org/en/content/articlepdf/2023/nr/d3nr01940c</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920144432901.png" alt="image-20240920144432901"></p>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习的理论基础</title>
      <link href="/2024/06/21/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/06/21/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-机器学习中的取样"><a href="#1-机器学习中的取样" class="headerlink" title="1. 机器学习中的取样"></a>1. 机器学习中的取样</h1><p>机器学习的一个重要步骤是采样，采集那些能够表征系统特征的构型加以训练，能够训练出新的机器学习势，在遇到构型时，能够准确判断构型中原子受到的力</p><p>从统计热力学的角度看，一个系统的微观状态的概率服从玻尔兹曼分布，即随着能量增加，微观状态出现的概率越低。在我的体系中，能够出现一些稀有的构型，这些构型应该有一个共同的特点就是能量高，导致他们出现的概率很低。但是增大晶胞能够大大增加这些稀有事件出现的概率。</p><p>分子动力学的过程只能探索很少的势能面，这些很少的势能面在大概率上决定了系统在大部分时间内的演化。系统根据玻尔兹曼分布到达其他势能面的概率很低，这也是机器学习能够起到作用的根本原因</p><blockquote><p>分子动力学只需要很少的势能面就能运行足够多的时间</p></blockquote><p><strong>为什么增大晶胞这些稀有的构型就出现了？</strong></p><p>理论上讲，氧元素所能探索的高能态是很有限的，因为它们没有扩散，真正起作用的还是钠离子的扩散，导致在小晶胞中本来不可能探测到的氧原子的位移、钠离子的构型出现了，所以问题的根源还是在钠离子的扩散。大晶胞和小晶胞的扩散不同的一点应该就在于钠离子可以以更加紧密的方式排列在一起。这需要证据。并且如果是这样的话，为什么在其他体系的模拟中没有出现这样的现象。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>统计力学</title>
      <link href="/2024/06/17/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BB%9F%E8%AE%A1%E5%8A%9B%E5%AD%A6/"/>
      <url>/2024/06/17/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BB%9F%E8%AE%A1%E5%8A%9B%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-学习统计力学"><a href="#1-学习统计力学" class="headerlink" title="1.学习统计力学"></a>1.学习统计力学</h1><blockquote><p>学习<a href="https://theoreticalminimum.com/courses/statistical-mechanics/2009/spring/lecture-3">统计力学</a></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213331482.png" alt="image-20240618213331482"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213400376.png" alt="image-20240618213400376"></p><p><strong>势能面本质上是多维的能量概率分布</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213407601.png" alt="image-20240618213407601"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213414194.png" alt="image-20240618213414194"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213421000.png" alt="image-20240618213421000"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213426693.png" alt="image-20240618213426693"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213432429.png" alt="image-20240618213432429"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240618213442093.png" alt="image-20240618213442093"></p><h1 id="2-如何用统计物理理解晶体"><a href="#2-如何用统计物理理解晶体" class="headerlink" title="2. 如何用统计物理理解晶体"></a>2. 如何用统计物理理解晶体</h1><h2 id="2-1-晶体与统计物理中微观态的关系"><a href="#2-1-晶体与统计物理中微观态的关系" class="headerlink" title="2.1 晶体与统计物理中微观态的关系"></a>2.1 晶体与统计物理中微观态的关系</h2><p>对于一个有大量原子的集合，可以有多种微观状态，晶体也是其中一种微观状态，且能量比普通随机的微观状态低得多，因此是概率最大的微观状态。温度升高时，系统的状态由能量和熵共同决定，高温下无序状态的熵贡献可能使系统偏离晶体结构。结构熔化就是一种温度升高导致的能量最小值改变的现象。</p><p>宏观态指的是宏观的外界条件，微观态指的是宏观条件约束下原子的速度、坐标等信息</p><h2 id="2-2-两者的不同"><a href="#2-2-两者的不同" class="headerlink" title="2.2 两者的不同"></a>2.2 两者的不同</h2><p>统计物理描述的是大量微观状态&#x2F;粒子在不同能级上的分布，晶体中的声子、电子能级、空位浓度这些描述在不同能级上的分布可以用统计物理来理解。</p><p>但是晶体在基态时是能量最低的状态，这与统计力学不同，统计物理中，平衡态并不是能量最低的状态，而是微观状态数最多的状态。可以理解为平衡态下，晶体中的声子的分布并不是能量最低的状态，而是有最合适的分布。</p><blockquote><p>空位浓度是统计物理的研究范围，离子的扩散也是空位的浓度的一种重分布啊（阿伦尼乌斯公式）</p></blockquote><h2 id="2-3-统计物理来理解晶格中的声子"><a href="#2-3-统计物理来理解晶格中的声子" class="headerlink" title="2.3 统计物理来理解晶格中的声子"></a>2.3 统计物理来理解晶格中的声子</h2><p>在统计物理中，声子是描述晶体中原子集体振动的量子化准粒子。理解声子和它们在不同温度下的行为可以揭示晶体的热力学性质、比热容、热导率等。</p><h3 id="声子的统计物理描述"><a href="#声子的统计物理描述" class="headerlink" title="声子的统计物理描述"></a>声子的统计物理描述</h3><h4 id="1-声子基本概念"><a href="#1-声子基本概念" class="headerlink" title="1. 声子基本概念"></a>1. 声子基本概念</h4><ul><li><strong>声子</strong>: 声子是晶格振动的量子化模式。声子可以分为纵波和横波，且每种类型可以进一步分为声学声子和光学声子。</li><li><strong>简谐振动</strong>: 在平衡位置附近，原子的振动可以近似为简谐振动。这个近似使得我们能够用二次项展开势能函数，并使用量子力学来处理振动能级。</li></ul><h4 id="2-声子模型和配分函数"><a href="#2-声子模型和配分函数" class="headerlink" title="2. 声子模型和配分函数"></a>2. 声子模型和配分函数</h4><p>在统计物理中，声子的贡献通过声子配分函数来描述。对于一个具有频率 $( \omega_q)$ 的声子模式，其能量量子化为：</p><p>$$[ E_n &#x3D; \left( n + \frac{1}{2} \right) \hbar \omega_q ]$$</p><p>其中 $$( n &#x3D; 0, 1, 2, \ldots )$$。</p><p>对于一组声子模式，配分函数$$ ( Z_{\text{phonon}} )$$ 可以写成：</p><p>$$[ Z_{\text{phonon}} &#x3D; \prod_{q} \left( \sum_{n_q&#x3D;0}^{\infty} e^{-\beta \left( n_q + \frac{1}{2} \right) \hbar \omega_q} \right) ]$$</p><p>计算上述和，可以得到：</p><p>$$[ Z_{\text{phonon}} &#x3D; \prod_{q} \left( \frac{e^{-\beta \hbar \omega_q &#x2F; 2}}{1 - e^{-\beta \hbar \omega_q}} \right) ]$$</p><h4 id="3-声子的热力学性质"><a href="#3-声子的热力学性质" class="headerlink" title="3. 声子的热力学性质"></a>3. 声子的热力学性质</h4><p>通过声子配分函数，可以计算出系统的热力学性质：</p><ul><li><p><strong>内能 ( U )</strong>:<br>$$[ U &#x3D; \sum_q \left( \frac{\hbar \omega_q}{2} + \frac{\hbar \omega_q}{e^{\beta \hbar \omega_q} - 1} \right) ]$$</p><p>其中，第一项是零点能，第二项是由热激发引起的能量。</p></li><li><p><strong>比热容 ( C_V )</strong>:<br>$$[ C_V &#x3D; \left( \frac{\partial U}{\partial T} \right)_V ]$$</p></li></ul><p>对于高温（经典极限）和低温（量子极限），比热容表现出不同的行为。在低温下，比热容 ( C_V ) 随温度 ( T ) 的立方关系增长（德拜定律）；在高温下，比热容趋于常数（德拜高温极限）。</p><h3 id="温度升高时晶体的振动变化"><a href="#温度升高时晶体的振动变化" class="headerlink" title="温度升高时晶体的振动变化"></a>温度升高时晶体的振动变化</h3><h4 id="1-低温下的振动"><a href="#1-低温下的振动" class="headerlink" title="1. 低温下的振动"></a>1. 低温下的振动</h4><p>在低温下，大多数声子模式处于其最低量子态，只有少量的声子被激发。这时，晶体的热容量主要由少数低频声子（长波长声子）贡献。热激发的能量较少，原子振动幅度较小。</p><h4 id="2-高温下的振动"><a href="#2-高温下的振动" class="headerlink" title="2. 高温下的振动"></a>2. 高温下的振动</h4><p>随着温度升高，更多的声子模式被热激发，占据更高的量子态。这导致以下几方面的变化：</p><ul><li><p><strong>声子激发增加</strong>:<br>高温下，大量声子被激发，声子模式的占据数增加。这意味着晶体内的原子振动更加剧烈。</p></li><li><p><strong>平均振动能量增加</strong>:<br>根据玻尔兹曼分布，声子的平均能量随温度增加。高温下，每个声子模式的平均能量趋近于 ( k_B T )。</p></li><li><p><strong>比热容趋于常数</strong>:<br>在经典极限（高温下），根据德拜模型，晶体的比热容趋于 ( 3Nk_B )，其中 ( N ) 是原子的数目。这称为德拜高温极限。</p></li></ul><h3 id="德拜模型"><a href="#德拜模型" class="headerlink" title="德拜模型"></a>德拜模型</h3><p>德拜模型是描述声子热容的经典模型之一。德拜模型假设声子的频谱是连续的，并引入一个最高截止频率 (\omega_D)，即德拜频率。</p><ul><li><p><strong>德拜频率</strong>:<br>$$[ \omega_D^3 &#x3D; \frac{6\pi^2 N}{V} v_s^3 ]$$</p><p>其中， ( v_s ) 是声速， ( N ) 是晶体中的原子数， ( V ) 是体积。</p></li><li><p><strong>德拜积分</strong>:<br>德拜模型中，比热容 ( C_V ) 可以通过德拜积分计算：</p><p>$$[ C_V &#x3D; 9Nk_B \left( \frac{T}{\Theta_D} \right)^3 \int_0^{\Theta_D&#x2F;T} \frac{x^4 e^x}{(e^x - 1)^2} dx ]$$</p><p>其中， $$(\Theta_D &#x3D; \hbar \omega_D &#x2F; k_B) $$是德拜温度。</p></li></ul><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>通过统计物理和声子模型，可以理解晶体的振动行为及其热力学性质。随着温度升高，晶体的原子振动加剧，声子激发增加，比热容从低温下的$$ ( T^3 )$$ 依赖逐渐趋于常数。这些行为在德拜模型和配分函数的框架下得到了很好的解释。</p><h1 id="3-玻尔兹曼分布与麦克斯韦-玻尔兹曼分布函数"><a href="#3-玻尔兹曼分布与麦克斯韦-玻尔兹曼分布函数" class="headerlink" title="3. 玻尔兹曼分布与麦克斯韦-玻尔兹曼分布函数"></a>3. 玻尔兹曼分布与麦克斯韦-玻尔兹曼分布函数</h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240620200917358.png" alt="image-20240620200917358"></p><p>玻尔兹曼分布既指某一个宏观状态的概率，也可指某个全同小部分的概率的分布</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>meta_dynamics_plumed</title>
      <link href="/2024/06/05/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/meta-dynamics-plumed/"/>
      <url>/2024/06/05/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/meta-dynamics-plumed/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-基本功能"><a href="#1-基本功能" class="headerlink" title="1. 基本功能"></a>1. 基本功能</h1><blockquote><p>Promoting transparency and reproducibility in enhanced molecular simulations</p></blockquote><ol><li><p>PLUMED中提供了各种分子动力学增强采样的方法，如umbrella sampling , metadynamics ,steered MD</p><p>这些增强采样方法需要和CV结合使用。CVs包括原子对之间的距离，扭转角，二次结构内容，回转半径，接触图，系统能量，与参考构想偏差的相关指标，基于人工网络人工定义的CVs</p></li><li><p>PLUMED可以用于<strong>on the fly 处理数据</strong>（感觉类似对msd的计算），也可用于<strong>增强采样</strong></p></li></ol><blockquote><p><strong>需要注意的是，PLUMED中的集体变量首先是表征系统的量，因此在给定集体变量或多集体变量后，可以按照一些函数输出对这个系统的刻画。如果需要用这些集体变量的函数值去bias系统，这是集体变量的额外功能，集体变量首先是静态的对系统的反映而不是动力学源头，因此首先把PLUMED当作数据分析软件学习，偏置是另一个大项</strong></p></blockquote><h1 id="2-使用lammps-调用plumed模拟"><a href="#2-使用lammps-调用plumed模拟" class="headerlink" title="2. 使用lammps 调用plumed模拟"></a>2. 使用lammps 调用plumed模拟</h1><blockquote><p><a href="https://docs.lammps.org/fix_plumed.html">fix plumed command — LAMMPS documentation</a></p></blockquote><p><strong>语法</strong></p><pre><code>fix ID group-ID plumed keyword value</code></pre><p>keyword &#x3D; <code>plumedfile</code> and <code>outfile</code>    <strong>这两个参量都是必需的</strong></p><p><code>plumedfile</code>  PLUMED input</p><p><code>outfile</code> PLUMED log   指定的outfile并不包括plumed的输出，而是输入文件的重复，plumed的输出文件在input文件中指定</p><ul><li><p><code>fix plumed </code> 命令应该在时间步长等系统设置之后设置</p></li><li><p>group-ID 不起作用，lammps 会向lammps传递所有原子信息</p></li><li><p>在输入文件中，只允许有一个<code>fix plumed</code>命令，但是plumed本身允许多个独立集体变量，独立bias，和多种分析</p></li></ul><p>example:</p><pre><code>fix pl all plumed plumedfile plumed.dat outfile p.log</code></pre><hr><p><strong>关于restart</strong></p><p>注意需要在plumed的输入文件中开启plumed的restart</p><hr><p> <strong>与plumed相关的热力学输出设置</strong></p><pre><code>fix_modify energy yes</code></pre><p>输出plumed改变的势能面能量</p><pre><code>fix_modify virial yes</code></pre><p>输出plumed改变的压力</p><hr><h1 id="3-lammps-acnn-plumed-实现"><a href="#3-lammps-acnn-plumed-实现" class="headerlink" title="3. lammps + acnn + plumed 实现"></a>3. lammps + acnn + plumed 实现</h1><p>plumd 只用来加速分子动力学，因此需要改变的地方只有lammps相关的</p><ul><li><p><code>in.lmp</code> 中增加fix plumed命令 </p><pre><code>fix   pp all plumed plumedfile plumed.dat outfile p.log</code></pre></li><li><p>在<code>resource/md</code>中增加<code>plumed.dat</code>文件</p></li></ul><pre><code class="shell">#目前采用的集体变量是氧原子的配位数# Specify that we are in natural unitsUNITS ENERGY=96.48530776074416 LENGTH=0.1# Retrieve the value of the potential energyee: ENERGY cn: COORDINATIONNUMBER SPECIES=61-132 R_0=5.0 MEANrestraint: METAD ARG=cn.mean SIGMA=1 HEIGHT=0.5 PACE=10 FILE=HILLS# Print the energy and the moduli of the three cell vectorsPRINT ARG=ee,cn.mean,restraint.bias FILE=colvar STRIDE=1</code></pre><ul><li>修改<code>resource/md/sub-md.sh</code>中软件的路径，在安装时需要将plumed 静态链接到lammps中</li></ul><p>目前在华为机器<code>/home/jildxwlxyljlstdui/cccs-share02/lijx/liz/2-Na-X-Si-O/2_NaXSiO_big_model/1_one_element/14_Pr_es</code>目录下的训练得到了验证</p><h1 id="4-plumed-作为系统表征方法的输入文件"><a href="#4-plumed-作为系统表征方法的输入文件" class="headerlink" title="4. plumed 作为系统表征方法的输入文件"></a>4. plumed 作为系统表征方法的输入文件</h1><p>PLUMED的核心思想是计算可以描述变化的集体变量（collective variables)，它们作为描述符刻画了系统发生的变化。对CVs的计算可以on-the-fly地进行，也可以对一段已有的轨迹后验地进行。</p><hr><pre><code class="apl">d:DISTANCE ATOMS=1,10#d:命令代号 DISTANCE:命令名称 ATOMS：操作的原子#计算1，10原子的距离#标识符不能使用@开头，@在plumed有特定原子群#所有的动作都可以被定义标识符并且引用DISTANCE ATOMS=1,10 LABEL=d1#同上，命令的另一种写法phil:TORSION ATOMS=1,10,20,30#计算1，10，20，30原子的扭转角TORSION ...LABEL=phi2ATOMS=1,10,20,30...#一个分行来写的命令，计算扭转角PRINT ARG=d FILE=COLCAR1 STRIDE=10#在COLCAR1文件中每10步打印一次d的值。注意：只有在需要打印d的时候plumed才会计算一次d值#STRIDE：默认值为1，只有在PRINT调用d时才计算一次dPRINT ARG=phil FILE=COLCAR2 STRIDE=100</code></pre><h2 id="4-1-Collective-Variables-colvar"><a href="#4-1-Collective-Variables-colvar" class="headerlink" title="4.1 Collective Variables (colvar)"></a>4.1 Collective Variables (colvar)</h2><p>化学反应&#x2F;物理过程的进行往往并不能通过单个原子的变化来观测；通过多个原子的协同变化能更好观测系统的变化，<strong>集体变量就是表征多个原子协同变化的量</strong>，如原子对距离、扭转角等。</p><p>这些集体变量可以直接输出，也可以作为函数的输入计算输出，也可以用于人为地偏置来加速动力学过程，也可以直接用来分析</p><blockquote><p>构建集体变量的原则 (重要)</p></blockquote><p>元动力学的基本思想是特定集体变量能够刻画系统的整体变化。<strong>偏置势是根据集体变量上定义的，作用是帮助系统在集体变量空间内更丰富地探索</strong>，推动系统在包括集体变量的整体势能面上探索。因此合适的集体变脸至关重要，需要用那些体现系统变化的重要特征</p><p><strong>CV构建</strong></p><p>选择原子集的方法：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_group.html">PLUMED: Groups and Virtual Atoms</a></p><p>CV变量表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_colvar.html">PLUMED: CV Documentation</a></p><p><strong>CV分析方法</strong></p><p>CV打印方法：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_p_r_i_n_t.html">PLUMED: PRINT</a></p><p>CV的函数表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_function.html">PLUMED: Functions</a></p><p>CV的偏置方法表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_bias.html">PLUMED: Bias</a></p><p>CV的分析方法表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_analysis.html">PLUMED: Analysis</a></p><p>多CV的使用方法：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/mcolv.html">PLUMED: MultiColvar</a></p><h3 id="构建CV"><a href="#构建CV" class="headerlink" title="构建CV"></a>构建CV</h3><hr><h4 id="1-选择原子集"><a href="#1-选择原子集" class="headerlink" title="1. 选择原子集"></a>1. 选择原子集</h4><p>原子集的选择大部分是使用原子序号进行的。可以对特定的CV定义单独的原子集，也可以预先定义可重复使用的原子组。可以选定每个原子，也可以选定范围</p><pre><code>g1:GROUP ATOMS=1,2,3,4,5 = GROUP ATOMS=1-5 LABEL=g1GROUP ATOMS=10-50:10 LABEL=g3 = GROUP ATOMS=10,20,30,40,50, LABEL=g3GROUP ATOMS=100-10:10 LABEL=g4@mdatoms :MD模拟中所有的原子 ATOMS=@mdatoms@allatoms :所有的原子，包括plumed中自定义的虚拟原子 ATOMS=@allatoms#获得plumed中定义的虚拟原子GROUP ATOMS=@allatoms REMOVE=@mdatoms</code></pre><p>其他的选择原子快捷命令：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_m_o_l_i_n_f_o.html">PLUMED: MOLINFO</a></p><p>plumed可与MDAnalysis 和mdtraj联动选择原子</p><p>一些集体变量需要特定的原子数,distance 两个 ANGLE 3-4个 TORSION 4个原子</p><p><strong>定义虚拟原子</strong></p><pre><code>CENTER 计算一组原子的几何质心CENTER_OF_MULTICOLVAR 根据多集体变量计算一个加权平均的虚拟原子位置COM 质心原子FIXEDATOM 在特定的位置添加一个虚拟原子GHOST 计算一个具有固定坐标的虚拟原子在三个原子构成的局部参考系中的绝对位置</code></pre><p><strong>引用虚拟原子</strong></p><pre><code>COM ATOMS=1,10 LABEL=com1DISTANCE ATOMS=11,com1</code></pre><p>监测一个虚拟原子：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_d_u_m_p_a_t_o_m_s.html">https://www.plumed.org/doc-v2.6/user-doc/html/_d_u_m_p_a_t_o_m_s.html</a></p><hr><h4 id="2-选择CV函数"><a href="#2-选择CV函数" class="headerlink" title="2. 选择CV函数"></a>2. 选择CV函数</h4><p> CV表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_colvar.html">PLUMED: CV Documentation</a></p><ul><li><p><code>COORDINATION</code></p><p><code>c:COORDINATION GROUPA=1-30 R_0=0.3 </code></p></li></ul><hr><h3 id="特殊的CV-Disttance-from-reference-configurations"><a href="#特殊的CV-Disttance-from-reference-configurations" class="headerlink" title="特殊的CV -Disttance from reference configurations"></a>特殊的CV -<code>Disttance from reference configurations</code></h3><p><code>distance from reference configurations</code>对蛋白质折叠是一个很好的colvar，极大值和极小值分别对应蛋白质折叠和打开的状态。</p><p>直接用当前构型对应原子的位置减去参考构型的方法计算这一变量没有考虑质心平移和构型旋转。</p><p><strong>RMSD</strong>是实际中计算这一描述符的方法。也可以计算多个与这一变量相关的集体变量来代替对真实的distance from reference configurations的描述</p><p>可用于计算<code>distance from reference configurations</code>的参数表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/dists.html">PLUMED: Distances from reference configurations</a></p><hr><h3 id="CV的函数"><a href="#CV的函数" class="headerlink" title="CV的函数"></a>CV的函数</h3><p>CV可以作为函数的输入计算函数的输出，用来表征结构。CV的函数需要使用<code>PERIODIC</code> 关键字来说明变量是否是周期性的。</p><p>CV函数表：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_function.html">PLUMED: Functions</a></p><hr><h2 id="4-2-MultiColvar-集体变量的分布"><a href="#4-2-MultiColvar-集体变量的分布" class="headerlink" title="4.2 MultiColvar&#x2F;集体变量的分布"></a>4.2 MultiColvar&#x2F;集体变量的分布</h2><p>一个集体变量的值是对一组原子来计算的，多集体变量可以计算多组原子的某个集体变量的分布</p><p>当需要计算的并不是某个集体变量的值，也不是某个集体变量的函数的值（CV的函数），而是CV在构型中的分布时，需要用到multicolver。如计算两个原子最小的距离（需要计算所有的原子对距离），计算配位数大于3的原子。<br>$$<br>s&#x3D;\sum _i g[f({X}_i)]<br>$$<br>$g[f(X_i)]$是集体变量f 的分布，Xi是不同的原子组</p><h3 id="4-2-1-用法与输出"><a href="#4-2-1-用法与输出" class="headerlink" title="4.2.1 用法与输出"></a>4.2.1 用法与输出</h3><pre><code>NAME &lt;原子组&gt; (&lt;参数&gt;) &lt;计算的函数&gt; TOL=0.001 LABEL=label</code></pre><pre><code>pos: GROUP ATOMS=220,221,235neg: GROUP ATOMS=65,68,138,270,291slt: DISTANCE GROUPA=pos GROUPB=negDUMPMULTICOLVAR DATA=slt FILE=MUTI.dat</code></pre><p>如果需要输出<code>f(Xi)</code>,需要用<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_d_u_m_p_m_u_l_t_i_c_o_l_v_a_r.html">DUMPMULTICOLVAR</a>命令 ,并且输出的标示符是DATA而不是ARG</p><h3 id="4-2-2常用的multycolver"><a href="#4-2-2常用的multycolver" class="headerlink" title="4.2.2常用的multycolver"></a>4.2.2常用的multycolver</h3><p>角分布函数；成键向量分布；桥连原子分布；原子配位数及其分布；密度；原子距离分布；氢键分布……</p><ul><li><code>COORDINATIONNUMBER</code>  计算一组元素的配位数</li></ul><h3 id="4-2-3-多集体变量的函数-筛选原子-计算函数值"><a href="#4-2-3-多集体变量的函数-筛选原子-计算函数值" class="headerlink" title="4.2.3 多集体变量的函数 -筛选原子&#x2F;计算函数值"></a>4.2.3 多集体变量的函数 -筛选原子&#x2F;计算函数值</h3><p>有两种用来筛选原子的函数，一种是根据计算的多集体变量的值来筛选，如<code>MFILTER_BETWEEN,MFILTER_LESS,MFILTER_MORE</code>，另一种是只考虑特定区域内的原子（相当于先筛选再计算，如<code>INENVELOPE</code> （计算某种类型的原子密度比较高的区域内的集体变量的分布）后一种相当于一个$\delta $函数的权重</p><p>剩下还有一种函数用于计算多集体变量的值的函数如<code>MTRANSFORM_BETWEEN</code></p><h3 id="4-2-4-多集体变量的bias"><a href="#4-2-4-多集体变量的bias" class="headerlink" title="4.2.4 多集体变量的bias"></a>4.2.4 多集体变量的bias</h3><p>系统的偏置就是对系统做限制，针对一些集体变量，使得系统的值保持在这个位置。比如固定质心、添加墙，同时保持分子动力学的正确性</p><hr><h2 id="4-3-特殊的集体变量-近邻矩阵"><a href="#4-3-特殊的集体变量-近邻矩阵" class="headerlink" title="4.3 特殊的集体变量-近邻矩阵"></a>4.3 特殊的集体变量-近邻矩阵</h2><p>PLUMED可以计算$i_{th}$ 和$j_{th}$是否接触，构建接触矩阵</p><p> 判断是否近邻有不同的方法，PLUMED提供了<a href="https://www.plumed.org/doc-v2.6/user-doc/html/contactmatrix.html">多种方法</a>来判断是否近邻</p><hr><h2 id="4-4-PLUMED-analysis-方法"><a href="#4-4-PLUMED-analysis-方法" class="headerlink" title="4.4. PLUMED analysis 方法"></a>4.4. PLUMED analysis 方法</h2><p>PLUMED可以<code>on the fly</code>处理MD数据，也可以使用<a href="https://www.plumed.org/doc-v2.6/user-doc/html/driver.html">driver</a>进行后处理</p><p>PLUMED分析方法：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/_analysis.html">PLUMED: Analysis</a></p><hr><p><strong>输出</strong></p><p>最简单的analysis是输出信息到文件中，<code>PRINT</code>和<code>DUMPMULTICOLVAR</code>都是analysis的方法</p><p><code>UPDATE_IF</code>可以定义输出的范围，可以设置仅输出满足特定条件的量</p><p><code>COMMITTOR</code> 定义满足条件时停止输出</p><p><code>STRIDE</code> 定义计算并输出的间隔</p><hr><p><strong>重新加权和平均</strong></p><p><code>REWEIGHT_BIAS</code> 重新对系综平均加权以抵消偏置对相空间的影响</p><h2 id="3-其他输入参数"><a href="#3-其他输入参数" class="headerlink" title="3. 其他输入参数"></a>3. 其他输入参数</h2><h3 id="1-units"><a href="#1-units" class="headerlink" title="1. units"></a>1. units</h3><p><code>plumed</code>有自己默认的单位制 </p><ul><li><code>Energy: kJ/mol</code></li><li><code>Length: nanometers</code></li><li><code>Time: picoseconds</code></li></ul><p>在plumed中，可以修改这些单位：<code>LENGTH;ENERGY;TIME;MASS;CHARGE</code></p><p><em>Examples</em></p><pre><code>UNITS LENGTH=A TIME=fsUNITS LENGTH=0.1 TIME=0.001 #设置数字后单位与上面相等</code></pre><h1 id="5-PLUMED的增强采样-METAD"><a href="#5-PLUMED的增强采样-METAD" class="headerlink" title="5. PLUMED的增强采样-METAD"></a>5. PLUMED的增强采样-METAD</h1><blockquote><p><a href="https://bohrium.dp.tech/notebooks/7144731675">DP 运行实例，使用CP2K 模拟甘氨酸分子在纯水溶液中的质子转移</a></p><p><a href="https://bohrium.dp.tech/notebooks/9874998164">on-the-fly probability enhanced sampling</a></p><p><a href="https://bohrium.dp.tech/notebooks/83327491785">Voronoi CVs</a></p><p><a href="https://www.plumed.org/doc-v2.6/user-doc/html/index.html">PLUMED 2.6 手册</a></p><p>lammps官方例子 &#x2F;home&#x2F;share&#x2F;jildxwlxyljlstdui&#x2F;home&#x2F;lijx&#x2F;playground&#x2F;acnn&#x2F;interface&#x2F;lammps&#x2F;lammps-acnn&#x2F;examples&#x2F;PACKAGES&#x2F;plumed</p><p><a href="https://www.youtube.com/watch?v=q0RHlFAk544">plumed官方视频教程</a> </p><p><a href="https://www.youtube.com/watch?v=PxJP16qNCYs">A quick introduction to PLUMED 2 (youtube.com)</a></p><p><a href="https://www.plumed.org/doc-v2.6/user-doc/html/master-_i_s_d_d-2.html">PLUMED 官方教程</a></p><p><a href="https://www.youtube.com/watch?v=xjkSmaeaX74&list=PLUTWmWVeT0zZjl4MkKNfVA_nKBAjG-wW6">Enhanced Sampling Methods - chapter 1: Free Energy and Sampling (youtube.com)</a></p><p>Meta dynamics  Volume 1, September&#x2F;October 2011</p></blockquote><p>PLUMED中包含多种增强采样算法，METAD（元动力学只是其中一种）</p><h2 id="1-理论基础"><a href="#1-理论基础" class="headerlink" title="1. 理论基础"></a>1. 理论基础</h2><p>元动力学偏置势的作用是将系统推离局域最小值。在长时间极限下，<strong>集体变量空间</strong>中的偏置势是集体变量真实势能面的负数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240607210018900.png" alt="image-20240607210018900"></p><p><strong>高斯函数的宽度决定了偏置势的平滑程度，高度决定了系统在该位置停留的时间</strong></p><ul><li>宽度太大，偏置势太平滑，导致出现徘徊；宽度太小，偏置势太尖锐，系统在集体空间中跳跃而不是平滑过渡</li><li>高度太小无法有效探索；高度太大过于迅速地掠过重要信息</li></ul><p>高斯函数的信息输出到HILLS中，可以用于重启计算，也可根据CV重建自由能</p><p>在元动力学模拟中，随着模拟时间的增加，每一步需要评估的高斯核的数量增加，元动力学的成本也会增加。将偏置存储在网格上可以解决这一问题。</p><p>重启metadynamics的计算可以通过HILLS或者GRID进行。如果通过GRID进行，需要设置<code>GRID_WFILE</code> 来写入文件，并通过<code>GRID_RFILE</code> 来读取</p><p><strong>关于<code>well-tempered metadynamics</code></strong></p><p>标准的元动力学中，每一次添加的高斯核的高度是固定的。在<code>well-tempered metadynamics</code>  中，高斯核的高度随着模拟的时间增加而减少， 偏置势能的收敛更加平稳</p><p>在长时间极限下，well–metadynamics的偏置势能与真实势能的关系是</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240607212041551.png" alt="image-20240607212041551"></p><p>体系在高于设定温度$\delta T$  的范围内采样 deltaT&#x3D;0 表示标准MD，deltaT&#x3D;无穷 表示标准的元动力学。通过设置deltaT的值决定在势能面探索的程度</p><p>bias factor (偏置因子)</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240607213407809.png" alt="image-20240607213407809"></p><h3 id="构建集体变量的原则-重要"><a href="#构建集体变量的原则-重要" class="headerlink" title="构建集体变量的原则 (重要)"></a>构建集体变量的原则 (重要)</h3><p>元动力学的基本思想是特定集体变量能够刻画系统的整体变化。<strong>偏置势是根据集体变量上定义的，作用是帮助系统在集体变量空间内更丰富地探索</strong>，推动系统在包括集体变量的整体势能面上探索。因此合适的集体变脸至关重要，需要用那些体现系统变化的重要特征</p><p><strong>机器学习势跑飞是因为一些原子跑到了未在第一性原理中探索的势能面，所以需要对跑飞时刻的原子构建集体变量，更广泛地探索这些原子的集体变量空间</strong></p><h3 id="from-智谱清言-（very-useful"><a href="#from-智谱清言-（very-useful" class="headerlink" title="from 智谱清言 （very useful)"></a><strong>from 智谱清言</strong> （very useful)</h3><ol><li><h4 id="元动力学解释"><a href="#元动力学解释" class="headerlink" title="元动力学解释"></a><strong>元动力学解释</strong></h4></li></ol><hr><p>在元动力学（Meta-Dynamics）中，<strong>集体变量（Collective Variables，CVs）是用于描述系统状态的一些选定的自由度</strong>，它们通常能够捕捉到系统动态中最重要的变化。集体变量可以是距离、角度、平面上的坐标、或是任何可以描述系统感兴趣特征的参数组合。<br>元动力学是一种计算方法，用于加速分子动力学模拟中稀有事件的采样。在元动力学中，为了促进系统探索其在集体变量定义的低能势面上的罕见区域，会在模拟中人为地添加一个外部势能，即所谓的“偏置势”。<strong>这个偏置势与系统的历史相关，意味着它会随着模拟的进行而不断更新</strong>。<br>这个偏置势是由一系列高斯函数（也称为高斯核）构建而成的，每一个高斯函数都对应于系统在其集体变量的历史位置。<strong>每当系统访问一个新的集体变量状态时，就会在这个状态上添加一个新的高斯偏置，这些新的高斯偏置使得新的集体变量的状态更容易到达和被采样</strong>。<strong>这些高斯函数的宽度决定了偏置势的平滑程度，它们的高度则与系统在该位置停留的时间成正比</strong>，或者是根据某种预定义的更新规则来调整。<br>通过这种方式，偏置势会逐渐在集体变量空间中形成一条势能降低的路径，引导系统从一个局部最小值移动到另一个局部最小值，从而促进那些在没有任何偏置时可能非常缓慢或不可能发生的转变。</p><hr><ol start="2"><li><h4 id="高斯核解释"><a href="#高斯核解释" class="headerlink" title="高斯核解释"></a><strong>高斯核解释</strong></h4></li></ol><hr><p>在元动力学中，高斯核是构建外部历史相关偏置势的基本组成部分。每个高斯核都与系统在其集体变量（CVs）历史中的一个特定状态相对应。高斯核的具体作用可以从以下几个方面理解：</p><ol><li><strong>引导系统探索</strong>：高斯核的作用是引导系统在集体变量定义的低能势面上探索。通过在系统已经访问过的位置添加偏置势，元动力学鼓励系统探索新的区域，特别是那些能量较高、自然状态下难以到达的区域。</li><li><strong>加速稀有事件的采样</strong>：在分子动力学模拟中，某些生物化学过程或物理转变可能非常缓慢，以至于在常规模拟时间内几乎不可能观察到。<strong>高斯核通过提供一条能量降低的路径，使得这些稀有事件的发生概率大大增加</strong>。</li></ol><blockquote><p>稀有事件的能量应该是不利的，通过偏置提供到达的路径</p></blockquote><ol><li><strong>历史依赖性</strong>：高斯核的累积是历史依赖的，意味着偏置势随着模拟的进行而不断更新。这种历史依赖性确保了偏置势能够反映系统在集体变量空间中的完整历史，而不仅仅是当前状态。</li><li><strong>平滑过渡</strong>：高斯函数的平滑性质使得偏置势在集体变量空间中形成连续的势能面，这有助于系统在势能面上平滑地过渡，而不是在离散的点之间跳跃。</li><li><strong>自适应调整</strong>：高斯核的宽度和高度可以根据需要进行调整，以优化模拟效率和准确性。<strong>例如，较宽的高斯核可以提供更平滑的偏置势，而较窄的高斯核则可能导致更具体的引导</strong>。</li><li><strong>避免局部最小值陷阱</strong>：在复杂系统的能量景观中，系统可能会陷入局部最小值，难以逃逸。高斯核通过在能量景观中构建“桥梁”，帮助系统跨越能垒，从而避免被困在局部最小值中。<br> 总之，高斯核在元动力学中起着至关重要的作用，它们通过构建一个与系统历史相关的偏置势，引导系统在集体变量空间中高效地探索，从而加速对系统稀有事件的采样。</li></ol><hr><ol start="3"><li><h4 id="蛋白质折叠的例子"><a href="#蛋白质折叠的例子" class="headerlink" title="蛋白质折叠的例子"></a><strong>蛋白质折叠的例子</strong></h4></li></ol><hr><p>当然可以。让我们以蛋白质折叠过程为例来说明元动力学中高斯核的作用。<br>蛋白质折叠是一个复杂的过程，其中蛋白质从其未折叠状态转变到稳定的、功能性强的三维结构。这个过程中，蛋白质必须通过一个充满能量障碍的景观，这些障碍代表了中间状态，其中一些可能是亚稳态的，而另一些则可能是非功能性的。在没有任何外部帮助的情况下，蛋白质可能会在到达最终功能性结构之前陷入这些亚稳态。<br>在元动力学的框架下，我们可以选择一些集体变量来描述蛋白质的结构状态，比如两个特定氨基酸之间的距离、某些原子的角度或者是蛋白质的整体扭转。这些集体变量定义了蛋白质折叠的简化空间，我们可以在其中应用偏置势。<br>现在，让我们考虑一个具体的例子：</p><ol><li><strong>选择集体变量</strong>：我们选择蛋白质中两个关键氨基酸之间的距离作为集体变量。这个距离可以很好地描述蛋白质折叠过程中的关键转变。</li><li><strong>初始化模拟</strong>：开始时，蛋白质处于未折叠状态，我们在其集体变量的当前值处放置一个高斯偏置势。这个高斯函数有一个特定的宽度和高度，决定了偏置势的形状和强度。</li><li><strong>模拟过程</strong>：随着模拟的进行，<strong>蛋白质开始在集体变量空间中移动</strong>。每当蛋白质访问一个新的集体变量状态时，我们就在这个状态上添加一个新的高斯偏置势。随着时间的推移，<strong>这些高斯函数累加起来，形成了一个偏置势能面</strong>。</li><li><strong>引导折叠</strong>：偏置势能面开始引导蛋白质沿着集体变量空间中的能量降低路径移动。这有助于蛋白质跨越能量障碍，避免陷入亚稳态，并最终达到低能的折叠状态。</li><li><strong>更新偏置势</strong>：随着蛋白质继续移动，我们会根据预定义的规则定期更新高斯偏置势的参数，比如增加高度或改变宽度，以确保偏置势能够有效地引导蛋白质折叠。<br> 通过这种方式，元动力学中的高斯核帮助我们模拟并理解蛋白质折叠的复杂过程，这在没有偏置的情况下可能需要非常长的模拟时间才能观察到。</li></ol><hr><ol start="4"><li><h4 id="关于调整高斯核"><a href="#关于调整高斯核" class="headerlink" title="关于调整高斯核"></a><strong>关于调整高斯核</strong></h4></li></ol><hr><p>在元动力学中，调整高斯核的参数对于获得有效的模拟结果至关重要。高斯核的主要参数包括宽度（σ）和高度（V），这些参数的调整会影响偏置势的形状和强度，从而影响模拟的效率和准确性。以下是一些调整高斯核参数的策略：</p><ol><li><strong>选择合适的集体变量（CVs）</strong>：在添加高斯偏置之前，首先要确保选择了合适的集体变量，这些变量应该能够有效地描述系统的关键转变。如果集体变量选择不当，即使高斯核参数调整得很好，也可能无法获得满意的模拟结果。</li><li><strong>调整宽度（σ）</strong>：<ul><li><strong>σ太小</strong>：偏置势会非常尖锐，可能导致系统在集体变量空间中跳跃，而不是平滑地过渡，这可能会增加模拟的噪声并降低效率。</li><li><strong>σ太大</strong>：偏置势会过于平滑，可能会导致系统在集体变量空间中徘徊，而不是有效地探索新的区域。</li></ul></li><li><strong>调整高度（V）</strong>：<ul><li><strong>V太小</strong>：偏置作用不足以有效引导系统探索新的区域，特别是对于能量较高的区域。</li><li><strong>V太大</strong>：可能会导致系统过于迅速地通过某些重要区域，从而错过关键过程或过度偏置，导致模拟结果失真。</li></ul></li><li><strong>自适应调整</strong>：可以设计算法，根据系统的进展自动调整高斯核的参数。例如，如果系统在某个区域停滞不前，可以增加偏置的高度来帮助系统跨越能量障碍。</li><li><strong>平衡探索与利用</strong>：在元动力学中，需要平衡对已知区域的深入探索和对未知区域的大胆探索。可以通过调整高斯核的参数来实现这种平衡，例如，通过降低高度或增加宽度来鼓励探索。</li><li><strong>使用交叉验证</strong>：可以通过在不同模拟中尝试不同的参数设置，并比较结果的一致性和准确性来优化参数。</li><li><strong>考虑系统的动态特性</strong>：系统的动态特性，如能量障碍的高度和宽度，以及系统的自然时间尺度，都会影响最佳的高斯核参数选择。</li><li><strong>实验设计</strong>：可以先进行一系列预模拟，以快速确定参数的大致范围，然后在这些参数的基础上进行更精细的调整。<br> 总之，调整高斯核参数是一个迭代的过程，可能需要根据模拟的具体情况进行多次尝试和优化。通过仔细选择和调整这些参数，可以显著提高元动力学模拟的效率和有效性。</li></ol><hr><ol start="5"><li><h4 id="偏置势与真实势能面"><a href="#偏置势与真实势能面" class="headerlink" title="偏置势与真实势能面"></a><strong>偏置势与真实势能面</strong></h4></li></ol><hr><p>元动力学中引入的偏置势能够不断地对系统施加力，使其不停留在已探索过的局部能量最低点，而是继续向相空间中未知的区域移动。这样，系统就有机会访问到在自然条件下很难到达的状态，从而加快了对系统动态行为的全面理解。</p><p>随着时间的推移，偏置势的效果累积起来，最终反映出了系统在集体变量定义的低维空间中的自由能表面。在理想情况下，当模拟时间足够长时，偏置势会变得越来越接近于系统的真实自由能表面，不过是以相反的符号表示。这意味着偏置势的最高点对应于系统自由能的最低点，反之亦然。因此，通过分析偏置势的形状，我们可以得到系统自由能景观的轮廓，从而推断出系统在不同状态之间的转换路径和能量障碍。</p><hr><ol start="6"><li><h4 id="元动力学的过程"><a href="#元动力学的过程" class="headerlink" title="元动力学的过程"></a><strong>元动力学的过程</strong></h4></li></ol><hr><p>元动力学（Metadynamics）是一种计算模拟方法，用于加速分子动力学（MD）中对稀有事件的采样。这个过程通常包括以下几个步骤：</p><ol><li><strong>选择集体变量（Collective Variables, CVs）</strong>：首先，需要选择一组能够描述系统状态的参数作为集体变量。这些变量应该能够捕捉到系统动态中最重要的变化，例如蛋白质结构的变化、化学反应的进度等。</li><li><strong>初始化模拟</strong>：开始时，系统处于初始状态，通常是一个能量较低的局部最小值。在集体变量的当前值处放置第一个高斯偏置势。</li><li><strong>进行分子动力学模拟</strong>：在模拟过程中，系统会在原有的物理势能基础上，受到添加的高斯偏置势的影响。这个偏置势会随着模拟的进行而不断更新。</li><li><strong>添加高斯偏置</strong>：每当系统访问一个新的集体变量状态时，就在这个状态上添加一个新的高斯偏置。这些高斯函数的宽度决定了偏置势的平滑程度，它们的高度则与系统在该位置停留的时间成正比，或者是根据某种预定义的更新规则来调整。</li><li><strong>更新偏置势</strong>：随着模拟的进行，系统会不断地在集体变量空间中移动，高斯偏置势会根据系统的历史位置逐渐累积。这个累积的偏置势会逐渐在集体变量空间中形成一条势能降低的路径，引导系统从一个局部最小值移动到另一个局部最小值。</li><li><strong>分析结果</strong>：模拟结束后，分析累积的偏置势可以得到系统的自由能景观。这个景观揭示了系统在不同状态之间的能量关系，以及转换路径和能量障碍。</li><li><strong>优化参数（可选）</strong>：根据模拟结果，可以调整集体变量和高斯偏置的参数，以提高模拟的效率和准确性。这可能需要多次迭代和模拟。<br> 通过这个过程，元动力学能够帮助研究人员探索系统的能量景观，特别是在研究稀有事件，如蛋白质折叠、化学反应的过渡态等过程中非常有用。</li></ol><hr><ol start="7"><li><h4 id="什么是偏置势能面"><a href="#什么是偏置势能面" class="headerlink" title="什么是偏置势能面"></a><strong>什么是偏置势能面</strong></h4></li></ol><hr><p>偏置势势能面（Bias Potential Energy Surface）是在分子动力学模拟中，特别是在元动力学（Metadynamics）模拟中人为引入的一个额外的势能面。这个势能面是由一系列在模拟过程中动态添加的高斯函数（或其他形式的偏置函数）组成的，其目的是为了加速系统对相空间中的特定区域的探索，尤其是那些在自然条件下难以访问的区域。<br>在传统的分子动力学模拟中，系统遵循由原子间相互作用决定的物理势能面。然而，对于某些生物学或化学过程，如蛋白质折叠、分子对接、化学反应等，感兴趣的过程可能非常缓慢，以至于在可接受的模拟时间内很难观察到。这是因为这些过程涉及到必须跨越的高能垒。<br>为了克服这个问题，元动力学在物理势能面上叠加了一个偏置势势能面。这个偏置势随着模拟的进行而不断调整，其作用是“推动”系统探索新的区域，从而加速稀有事件的采样。偏置势的引入不会改变系统的物理性质，但它可以改变系统在相空间中的动态行为，使得原本缓慢的过程变得可行。<br>随着时间的推移，偏置势势能面逐渐接近于系统的自由能面。在长时间尺度下，偏置势势能面收敛到自由能面的负值，这意味着偏置势的最高点对应于自由能的最低点，反之亦然。因此，通过分析偏置势势能面的形状，可以获得系统自由能景观的轮廓，从而推断出系统在不同状态之间的转换路径和能量障碍。</p><hr><ol start="8"><li><h4 id="PLUMED中用于存储高斯函数的GRID-SPACING和GRID-BIN的值的设置"><a href="#PLUMED中用于存储高斯函数的GRID-SPACING和GRID-BIN的值的设置" class="headerlink" title="PLUMED中用于存储高斯函数的GRID_SPACING和GRID_BIN的值的设置"></a>PLUMED中用于存储高斯函数的GRID_SPACING和GRID_BIN的值的设置</h4></li></ol><hr><p>在元动力学模拟中，<code>GRID_SPACING</code> 和 <code>GRID_BIN</code> 是两个用于定义如何将偏置势能（bias potential）离散化到网格上的参数。这两个参数的作用和设置方法如下：</p><ol><li><strong>GRID_SPACING</strong>：这个参数定义了网格点之间的间距。在元动力学模拟中，偏置势能是由一系列高斯函数组成的，这些函数随着模拟的进行而不断添加。如果使用<code>GRID_SPACING</code>，您可以直接指定网格点之间的距离。这个<strong>间距决定了网格的精细程度，间距越小，网格越细，模拟的精度可能越高，但计算成本也越大</strong>。</li><li><strong>GRID_BIN</strong>：这个参数定义了每个集体变量（collective variable, CV）方向上应该有多少个网格箱（bins）。网格箱的数量越多，网格越细，模拟的精度可能越高，但同样，计算成本也越大。<br>设置这两个参数时，应该考虑以下几点：</li></ol><ul><li><strong>系统的复杂性</strong>：如果系统的能量景观非常复杂，或者集体变量的变化范围很大，可能需要更细的网格来准确捕捉能量景观的细节。</li><li><strong>计算资源</strong>：更细的网格意味着更高的计算成本。您需要根据自己的计算资源（如CPU时间、内存等）来平衡网格的精细程度和计算效率。</li><li><strong>模拟目的</strong>：如果您对模拟结果的精度要求非常高，可能需要使用更细的网格。但如果只是进行初步的探索，较粗的网格可能就足够了。</li><li><strong>默认设置</strong>：如果既没有指定<code>GRID_SPACING</code>也没有指定<code>GRID_BIN</code>，并且高斯宽度是固定的，PLUMED会默认使用高斯宽度的1&#x2F;5作为网格间距。这是一个经验性的合理选择，但对于特定的系统可能需要调整。<br>在实际操作中，您可以先从默认设置或根据经验选择一个初始值，然后进行测试模拟，观察结果是否稳定和准确。如果发现结果不够理想，可以尝试调整网格参数，进行新一轮的模拟，直到得到满意的结果。</li></ul><hr><h2 id="2-PLUMED中的METDA参数"><a href="#2-PLUMED中的METDA参数" class="headerlink" title="2. PLUMED中的METDA参数"></a>2. PLUMED中的METDA参数</h2><h3 id="必填关键词"><a href="#必填关键词" class="headerlink" title="必填关键词"></a><strong>必填关键词</strong></h3><ul><li><code>SIGMA</code> : 高斯势的宽度</li><li><code>PACE</code> : 增加势的频率</li><li><code>FILE</code> : 增加的势存储的位置</li><li><code>HEIGHT</code> 高斯势的高度</li></ul><h3 id="选填关键词"><a href="#选填关键词" class="headerlink" title="选填关键词"></a><strong>选填关键词</strong></h3><ul><li><code>GRID_BIN/GRID_SPACING</code>  储存高斯函数的网格的精细度，SPACING越小，网格越细，模拟的精度越高，计算量越大。默认值为1&#x2F;5的高斯宽度</li><li><code>GRID_WFILE and GRID_WSTRIDE)</code> 写网格文件，可以用于重启计算，也可以用HILLS重启</li><li><code>BIASFACTOR</code> 偏置因子，在优化的元动力学中使用，决定偏置的程度&#x2F;势能面探索的程度</li><li><code>TEMP</code> 系统温度，在优化的元动力学中使用</li></ul><h3 id="默认输出"><a href="#默认输出" class="headerlink" title="默认输出"></a><strong>默认输出</strong></h3><p><code>bias</code>: bias potential的瞬时值</p><p><code>work</code>: 工作蓄能器</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><blockquote><p>例子：使用两对原子的距离做metadynamics</p></blockquote><pre><code>DISTANCE ATOMS=3,5 LABEL=d1DISTANCE ATOMS=2,4 LABEL=d2METAD ...ARG=d1,d2 SIGMA=0.2,0.2 HEIGH=0.3 PACE=500 LABEL=restraint...PRINT ...ARG=d1,d2,restraint.bias STRIDE=100 FILE=COLVAR...</code></pre><blockquote><p>例子：<a href="https://www.plumed.org/doc-v2.6/user-doc/html/master-_i_s_d_d-2.html">使用 <code>well-tempered metadynamics</code>模拟蛋白质折叠</a></p></blockquote><pre><code class="python">phi: TORSION ATOMS=__FILL__# Compute the backbone dihedral angle psi, defined by atoms N-CA-C-Npsi: TORSION ATOMS=__FILL__# Activate well-tempered metadynamics in phimetad: __FILL__ ARG=__FILL__ ...# Deposit a Gaussian every 500 time steps, with initial height equal to 1.2 kJ/mol  PACE=500 HEIGHT=1.2 # The bias factor should be wisely chosen  BIASFACTOR=__FILL__# Gaussian width (sigma) should be chosen based on CV fluctuation in unbiased run  SIGMA=__FILL__# Gaussians will be written to file and also stored on grid  FILE=HILLS GRID_MIN=-pi GRID_MAX=pi...# Print both collective variables on COLVAR file every 10 stepsPRINT ARG=__FILL__ FILE=COLVAR STRIDE=__FILL__</code></pre><blockquote><p>高斯势的高度是否下降为0不是判断元动力学是否收敛的参数</p></blockquote><p><a href="https://www.plumed.org/doc-v2.6/user-doc/html/master-_i_s_d_d-2.html"><strong>分析真实的势能面</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>从MP数据库提取结构</title>
      <link href="/2024/06/05/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E4%BB%8EMP%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E5%8F%96%E7%BB%93%E6%9E%84/"/>
      <url>/2024/06/05/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E4%BB%8EMP%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E5%8F%96%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><pre><code class="python">from mp_api.client import MPResterfrom pymatgen.core import compositionfrom pymatgen.io.vasp.inputs import Poscarmpr=MPRester(&quot;5BhZJctjosrFpkuE6qErpu85dT4gw4VZ&quot;)mp_entries = mpr.get_entries_in_chemsys(elements=[&quot;Na&quot;,&quot;Mo&quot;,&quot;Si&quot;,&quot;O&quot;],additional_criteria=&#123;&quot;thermo_types&quot;: [&quot;GGA_GGA+U&quot;]&#125;) count = 0 for entries in mp_entries:    count +=1    struc = entries.structure    vasp_str = Poscar(struc)    vasp_str.write_file(&#39;%d.vasp&#39;%count)#print(mp_entries[0].structure)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>故事集</title>
      <link href="/2024/06/01/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E6%95%85%E4%BA%8B%E9%9B%86/"/>
      <url>/2024/06/01/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E6%95%85%E4%BA%8B%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-纯爱"><a href="#1-纯爱" class="headerlink" title="1. 纯爱"></a>1. 纯爱</h1><p>一个非常漂亮的残疾女孩，会有人愿意娶吗？ - 清霖的回答 - 知乎<br><a href="https://www.zhihu.com/question/607294004/answer/3419797924">https://www.zhihu.com/question/607294004/answer/3419797924</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240601211424155.png" alt="image-20240601211424155"></p>]]></content>
      
      
      <categories>
          
          <category> 网站收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>知识类网站</title>
      <link href="/2024/05/31/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E7%9F%A5%E8%AF%86%E7%B1%BB%E7%BD%91%E7%AB%99/"/>
      <url>/2024/05/31/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E7%9F%A5%E8%AF%86%E7%B1%BB%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-固态电解质收集"><a href="#1-固态电解质收集" class="headerlink" title="1 固态电解质收集"></a>1 固态电解质收集</h1><p><a href="https://ddse-database.streamlit.app/">Streamlit (ddse-database.streamlit.app)</a></p><h1 id="2-国家航天局"><a href="#2-国家航天局" class="headerlink" title="2 国家航天局"></a>2 国家航天局</h1><p><a href="https://www.cnsa.gov.cn/">国家航天局 (cnsa.gov.cn)</a></p><h1 id="3-吉大图书馆"><a href="#3-吉大图书馆" class="headerlink" title="3 吉大图书馆"></a>3 吉大图书馆</h1><p><a href="http://lib.jlu.edu.cn/portal/index.aspx">吉林大学图书馆 (jlu.edu.cn)</a></p><h1 id="4-物理课程站"><a href="#4-物理课程站" class="headerlink" title="4. 物理课程站"></a>4. 物理课程站</h1><p><a href="https://physics.stackexchange.com/questions/550507/pdf-lecture-notes-of-various-courses-by-leonard-susskind">PHYSICS</a></p><h1 id="5-傅里叶级数"><a href="#5-傅里叶级数" class="headerlink" title="5. 傅里叶级数"></a>5. 傅里叶级数</h1><p><a href="https://www.andreinc.net/2024/04/24/from-the-circle-to-epicycles">From the Circle to Epicycles (Part 1) - An animated introduction to Fourier Series | andreinc</a></p><h1 id="6-理解深度学习"><a href="#6-理解深度学习" class="headerlink" title="6. 理解深度学习"></a>6. 理解深度学习</h1><p><a href="https://udlbook.github.io/udlbook/">Understanding Deep Learning (udlbook.github.io)</a></p><h1 id="7-从CPU角度理解机器运行"><a href="#7-从CPU角度理解机器运行" class="headerlink" title="7.从CPU角度理解机器运行"></a>7.从CPU角度理解机器运行</h1><p><a href="https://cpu.land/">Intro | Putting the “You” in CPU</a></p><h1 id="8-物理学入门推荐"><a href="#8-物理学入门推荐" class="headerlink" title="8.物理学入门推荐"></a>8.物理学入门推荐</h1><p><a href="https://www.susanrigetti.com/physics">Physics — Susan Rigetti</a></p><h1 id="9-天文图像"><a href="#9-天文图像" class="headerlink" title="9. 天文图像"></a>9. 天文图像</h1><p><a href="https://www.astrobin.com/iotd/archive/">今日最佳 - AstroBin</a></p><h1 id="10-技术博客"><a href="#10-技术博客" class="headerlink" title="10. 技术博客"></a>10. 技术博客</h1><p><a href="https://world.hey.com/dhh/why-don-t-more-people-use-linux-33b75f53">Why don’t more people use Linux? (hey.com)</a></p><h1 id="11-历史网站"><a href="#11-历史网站" class="headerlink" title="11. 历史网站"></a>11. 历史网站</h1><ol><li><a href="https://histography.io/">时间轴历史事件</a></li><li><a href="https://history-maps.com/zh">各国历史</a></li><li><a href="https://www.allhistory.com/">时间轴各国历史</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网站收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工具-游戏网站</title>
      <link href="/2024/05/30/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%BD%91%E7%AB%99/"/>
      <url>/2024/05/30/9-%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86/%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-工具网站"><a href="#1-工具网站" class="headerlink" title="1. 工具网站"></a>1. 工具网站</h1><ol><li>查询配色表</li></ol><p><a href="https://www.rocschool.com/tool/colorquery/">Color颜色值查询、RGB颜色值、html网页颜色代码在线查询 (rocschool.com)</a></p><ol start="2"><li>数学公式绘制</li></ol><p><a href="https://zh.numberempire.com/graphingcalculator.php?functions=log(x),sqrt(x),sin(x),1/x,x%5E2&xmin=0&xmax=3&ymin=-1.0&ymax=1.0&var=x">函数图像绘制工具 (numberempire.com)</a></p><p><a href="https://www.desmos.com/calculator?lang=zh-CN">Desmos | 图形计算器</a></p><ol start="3"><li><a href="https://www.52pojie.cn/forum.php">吾爱破解</a></li><li><a href="https://dy.kukutool.com/#pricing">视频无水印下载和图片无水印下载</a></li><li><a href="https://mycolor.space/?hex=%236FB3F4&sub=1">生成合适的配色</a></li></ol><h1 id="2-磁力下载"><a href="#2-磁力下载" class="headerlink" title="2. 磁力下载"></a>2. 磁力下载</h1><ol><li><a href="https://xdown.org/">XDown</a></li><li><a href="https://www.wangdu.site/software/tools/592.html">2024年国内外常用的28款磁力下载工具推荐</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网站收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>风物零食集</title>
      <link href="/2024/05/30/8-%E6%9D%82%E8%B0%88/%E9%A3%8E%E7%89%A9%E9%9B%B6%E9%A3%9F%E9%9B%86/"/>
      <url>/2024/05/30/8-%E6%9D%82%E8%B0%88/%E9%A3%8E%E7%89%A9%E9%9B%B6%E9%A3%9F%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-零食"><a href="#1-零食" class="headerlink" title="1. 零食"></a>1. 零食</h1><ol><li>君乐宝喝鲜奶</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240924190431803.png" alt="image-20240924190431803"></p><ol start="2"><li><p>百醇 茶风注心饼干</p><p><img src="/./../../%E5%9B%BE%E7%89%87/23ba0c4744834d5ba9b21d700383a95.jpg" alt="23ba0c4744834d5ba9b21d700383a95"></p></li><li><p>伊利牧场 脆皮雪糕 </p></li><li><p>明洞打糕 北门外 目前吃了抹茶味 不错，馅略甜</p></li><li><p>日新楼 幸福沙拉饭家鸡块，涨价后不实惠了</p></li><li><p>枣子坊  核桃枣糕</p></li><li><p>隆美栗园 现炒腰果</p></li><li><p>燃厚 咸奶油泡芙 贵但是确实味道不错</p></li><li><p>无印家 桂林路 柚子冰激凌 好吃</p></li><li><p>文汀蛋糕店  红旗街</p></li><li><p>妃记 生牛乳蛋糕</p></li><li><p>老街口焦糖味瓜子</p></li></ol><h1 id="2-饭食"><a href="#2-饭食" class="headerlink" title="2. 饭食"></a>2. 饭食</h1><h2 id="1-长春"><a href="#1-长春" class="headerlink" title="1. 长春"></a>1. 长春</h2><h3 id="1-正经吃"><a href="#1-正经吃" class="headerlink" title="1.正经吃"></a>1.正经吃</h3><ol><li>大馅饺子    —-精炒四样、干锅菜花、素白菜蒸饺、</li><li>地桌烤牛肉</li><li>楼外楼、元盛居</li><li>大峰特色烧烤</li><li>林园路市场卷饼的饼，蒸的馒头</li><li>市场对面的八珍食品 —– 皮蛋鸡肉卷</li><li>栖乐荟  —- 大叔手擀面、安姬酸奶</li><li>阿敏煲  —- 白菜汤 开胃</li><li>君怡楼外楼对面狗肉馆  —– 瘦肉不柴而嫩，无肥肉 80的狗肉两人足够 </li><li>滇君鱼味蒸汽石锅鱼  —– 蒸的鱼汤好喝 鱼肉鲜嫩 羊肉卷不错，金枪鱼丸子有奶香味（再去感觉下降了）</li><li>花满溪 比较中庸的火锅，麻酱不错，涮菜合适，美团两人餐丰盛</li><li>四海回族饭店 东北菜  —- 羊排 </li><li>品尚缘 —— 葱油蛋炒饭</li><li>胖大厨 ——剁椒炒鸡蛋木耳、 压锅三道鳞 、熏大肠</li><li>钱锋烧烤 菜单推荐的不错</li><li>日新楼三楼川菜馆  还不错 环境不错</li><li>盛记牛肉面 —–打卤面劲道</li><li>川贵缘 —– 牛肉米粉 辣子鸡</li><li>大馅饺子旁的米线 品质靠上</li><li>阿郎牛杂面  —– 剁椒</li><li>屿霖小馆(君怡酒店旁边)  —– 鱼香肉丝、水煮鱼、冰豆花、饮品都不错 干锅鹿茸菌(辣)、拔丝地瓜、宫保鸡丁有点甜</li><li>仁风阁 朝鲜国营餐厅 服务员都是漂亮朝鲜姐姐 狗肉盘、 海鲜饼、 玉米米酒</li><li>君怡楼外楼对面- 山东小炒鸡 —–  炒鸡 丸子汤 糖醋里脊 小炸鱼 香椿鸡蛋 都不踩雷</li><li>小马家烤鸭菜  东升附近 海皇豆腐 狮子头</li><li>韩金钰 炸鸡</li><li>大鹅岛  东北菜</li><li>阿郎旁边炖肉的  —– 牛肉干单品 炖肉饭不太行</li><li>东升铁锅炖</li><li>德国金皇冠</li><li>玫满茶餐厅 </li><li>繁荣路潮汕牛肉火锅 —– 牛肉丸</li><li>北门延奶奶 五花肉汤饭的汤好喝，有肉味</li><li>泰餐  青柠</li></ol><h3 id="2-吃环境"><a href="#2-吃环境" class="headerlink" title="2. 吃环境"></a>2. 吃环境</h3><ol><li>香谷私厨</li><li>烟雨江南  —– 水煮三国 水蒸鸡 绿茶饼 鸡汤萝卜   盐水鹅 黄酒 绿茶饼   甜 糖醋排骨 红烧肉 鳝丝 宫保虾球</li></ol><h1 id="3-各地食"><a href="#3-各地食" class="headerlink" title="3. 各地食"></a>3. 各地食</h1><ol><li>扬州盐水鹅 瘦而不柴 不腻</li><li>西安袁家村 实惠好吃</li><li>霍州年馍</li><li>商丘 吊炉烧饼 烧饼鲜骨牛肉汤店</li><li>乌鲁木齐 馕 过油肉拌面 手抓饭 羊肉串</li><li>衢州 老裴鸭头</li><li>恩施的藤茶 入口苦，回甘甜</li><li>武汉植物园的红心无毛猕猴桃，好吃</li><li>镇江香醋</li></ol><h1 id="4-好去处"><a href="#4-好去处" class="headerlink" title="4. 好去处"></a>4. 好去处</h1><ol><li>无印家 桂林路 </li><li>小酒馆</li><li>祖父家食堂</li><li>咖啡厅</li><li>桌游-麻将-剧本杀-密室逃脱-ktv</li><li>甜品店 广式甜品</li><li>蛋糕店 文汀</li></ol>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>zotero使用技巧</title>
      <link href="/2024/05/28/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/zotero%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2024/05/28/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/zotero%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>发现一款好用的文献管理软件，zotero，相比endnote, 用起来更加没有束缚；缺点是相比知云文献翻译，没有直接划词、划段翻译的功能；但是知云文献翻译的问题就是打开太慢了，而且内部没有zotero的笔记功能，pdf阅读器用起来不丝滑。所以比较合适的解决方法是使用zotero搭配比较好用的文献翻译软件。</p><h1 id="1-解决zotero翻译问题"><a href="#1-解决zotero翻译问题" class="headerlink" title="1. 解决zotero翻译问题"></a>1. 解决zotero翻译问题</h1><p>zotero自带了翻译引擎，但是相比知云翻译，体验差太多；使用网上沙拉划词+quicker的方案，每次划词都会跳出&#x2F;跳回 翻译界面，效果很差。</p><p>考虑使用知云家的翻译软件 xtranslator</p><p><a href="https://www.zhiyunwenxian.cn/">https://www.zhiyunwenxian.cn</a></p><p><a href="https://www.yuque.com/xtranslator/help/mep0g0">001-Xtranslator最新版下载地址(含安装方法) (yuque.com)</a></p><p>安装后使用方便，一点缺点是翻译的速度没有知云快</p><h1 id="2-zotero中的笔记功能"><a href="#2-zotero中的笔记功能" class="headerlink" title="2. zotero中的笔记功能"></a>2. zotero中的笔记功能</h1><blockquote><p>分为独立笔记和条目笔记，条目笔记用于附加在文献上</p><p>在文献阅读界面，可以任意打开独立笔记和条目笔记进行修改</p><p>可以通过改变布局修改笔记的位置，和xtranslator有更好的配合</p></blockquote><p>折腾来折腾去感觉还是自带的最好，可以直接复制markdown的源码到本地博客中的文献阅读，作为汇总，zotero的内容附在每个文献上</p><p>the diﬀusion ability of K ions</p><p>and the stronger polarizing ability of potassium ,<br>which results in weaker interactions between potassium ions<br>and the surrounding ions.</p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>写作工具</title>
      <link href="/2024/05/27/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/05/27/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-输入数学公式的工具"><a href="#1-输入数学公式的工具" class="headerlink" title="1.输入数学公式的工具"></a>1.输入数学公式的工具</h1><p><a href="https://www.mathcha.io/editor">https://www.mathcha.io/editor</a></p><h1 id="2-pdf转图片"><a href="#2-pdf转图片" class="headerlink" title="2. pdf转图片"></a>2. pdf转图片</h1><p><strong>sumatraPDF</strong></p>]]></content>
      
      
      <categories>
          
          <category> 绘图与写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>slurm系统</title>
      <link href="/2024/05/27/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/slurm%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/05/27/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/slurm%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-关于slurm系统"><a href="#1-关于slurm系统" class="headerlink" title="1.关于slurm系统"></a>1.关于slurm系统</h1><ol><li><strong>指定节点提任务 ：<code>#SBATCH  --nodelist=c1405</code></strong></li><li><strong>杀残余进程   <code>killall -9 vasp_std   killall -9 vasp_gam</code></strong></li></ol><h1 id="2-slurm系统的sq命令"><a href="#2-slurm系统的sq命令" class="headerlink" title="2. slurm系统的sq命令"></a>2. slurm系统的sq命令</h1><pre><code class="shell">#!/bin/bash# A simple wrapper for squeue, requires bash 4.0+# by Junhao Li@TCBUSAGE()&#123;echoecho &quot;available arguments: &quot;echo &quot;   -h | --help             print the help information&quot;echo &quot;   -P | --show_partition   number (optional, default is 10)&quot;echo &quot;   -j | --job_length       number (optional, default is 20)&quot;echo &quot;   -p | --workidng_dir     number (optional, default is a full path)&quot;echo &quot;   -a | --show_account     number (optional, default is 15)&quot;echo &quot;   -A | --tcb_users&quot;echo &quot;    *                      other arguments pass to squeue&quot;echo&#125;resize &gt;&amp; /dev/null[[ -z $1 ]] &amp;&amp; squeue -u $USER -o &#39; %10i %15a %20j %8u %3t %10M %10l %4D%5C %20V %Z&#39; &amp;&amp; exit 0squeueArgs=()TCBUserList=&quot;lilu,user2,user3,user4&quot; # replace the username herewhile [[ $# -gt 0 ]]; do    case $1 in     -P | --show_partition)    showPartition=&quot;%10P&quot;    [[ &quot;$2&quot; -gt 0 ]] &amp;&amp; showPartition=&quot;%$&#123;2&#125;P&quot; &amp;&amp; shift 2 || shift 1    ;;    -U | --User_list) #user1,user2,.. or user1    if [[ -z $showTCBUsers ]]; then        if [[ &quot;$2&quot; -gt 0 ]]; then            userList=&quot;-u $&#123;2&#125;&quot;            shift 2        else            echo &quot;Warning: please give user after -u&quot;            shift 1        fi    else        echo &quot;-u could not be used with -A!&quot;        exit 1    fi        ;;    -j | --job_length)    [[ &quot;$2&quot; -gt 0 ]] &amp;&amp; jobLength=&quot;%$&#123;2&#125;j&quot; || echo &quot;Warning: please give number after -j&quot;    shift 2    ;;    -p | -wd | --working_dir)    showWorkingDir=&quot;%Z&quot;    [[ &quot;$2&quot; -gt 0 ]] &amp;&amp; showWorkingDir=&quot;%$&#123;2&#125;Z&quot; &amp;&amp; shift 2 || shift 1    ;;    -a | --show_account)    showAccount=&quot;%15a&quot;    [[ &quot;$2&quot; -gt 0 ]] &amp;&amp; showAccount=&quot;%$&#123;2&#125;a&quot; &amp;&amp; shift 2 || shift 1    ;;    -A | --tcb_users)    if [[ ! -z userList ]]; then        showTCBUsers=&quot;-u $TCBUserList&quot;     shift 1    else        echo &quot;-A could not be used with -u!&quot;        exit 1    fi    ;;    -s | --star | --start)    showStartTime=&quot;--start&quot;    shift 1    ;;    -aAp | -apA | -Aap | -Apa | -paA | -pAa)    showAccount=&quot;%15a&quot;    showTCBUsers=&quot;-u $TCBUserList&quot;    showWorkingDir=&quot;%Z&quot;    shift 1    ;;    -h | --help)    USAGE    exit 0    ;;    *) # Other argurement pass to squeue!    squeueArgs=($&#123;squeueArgs[*]&#125; $1)    shift 1    ;;    esacdone[[ -z $jobLength ]] &amp;&amp; jobLength=&quot;%20j&quot;#if [[ -z $userList ]] &amp;&amp; [[ -z $showTCBUsers ]]; then#    userToShow=&quot;-u $USER&quot;#elif [[ ! -z $userList ]]; then#    userToShow=$userList#elif [[ ! -z $showTCBUsers ]]; then#    userToShow=$showTCBUsers#fiformat=$(echo &quot; %10i $showPartition $showAccount $jobLength %8u %3t %10M %10l %4D%5C %20V $showWorkingDir&quot;)squeue $userToShow -o &quot;$format&quot; $showStartTime $&#123;squeueArgs[@]&#125;</code></pre><h1 id="3-array-任务-限制同时运行的任务总数"><a href="#3-array-任务-限制同时运行的任务总数" class="headerlink" title="3. array 任务 限制同时运行的任务总数"></a>3. array 任务 限制同时运行的任务总数</h1><pre><code class="shell#SBATCH">#SBATCH --array=1-100%10</code></pre><p><code>1-100</code> 指定了任务数组的范围，即从 1 到 100 的任务。</p><p><code>%10</code> 限制了同时运行的任务数为 10</p><p><strong>–array的数字范围只能在0-1001 ，1001是最大值</strong></p><p>–array是重复提交固定次数，运行标头下面的内容，然后可以做一些限制</p><pre><code class="shell">#!/bin/sh#SBATCH  --job-name=scf#SBATCH  --output=log.out.%A_%a#SBATCH  --error=log.err.%A_%a#SBATCH  --partition=intel6240r_192#SBATCH  --nodes=1#SBATCH  --ntasks=48#SBATCH  --ntasks-per-node=48#SBATCH  --array=0-1000%15#SBATCH  --cpus-per-task=1#SBATCH  --exclusivedir=$((SLURM_ARRAY_TASK_ID + 1000))cd $dir || &#123; echo &quot;Failed to enter directory $dir&quot;; exit 1; &#125;source /work/env/intel2018srun hostname | sort | uniq &gt;&gt; /tmp/nodefile.$$NP=`srun hostname | wc -l`mpirun -genv I_MPI_FABRICS shm:tcp -machinefile /tmp/nodefile.$$ -n $NP /work/software/vasp.6.1.0/vasp_std  &gt; vasp.log 2&gt;&amp;1#mpirun -genv I_MPI_FABRICS shm:ofa -machinefile /tmp/nodefile.$$ -n $NP /work/software/vasp.6.1.0/vasp_std  &gt; vasp.log 2&gt;&amp;1  rm -rf /tmp/nodefile.$$</code></pre><h1 id="4-给每个文件分配一个文件夹"><a href="#4-给每个文件分配一个文件夹" class="headerlink" title="4. 给每个文件分配一个文件夹"></a>4. 给每个文件分配一个文件夹</h1><pre><code class="shell">#!/bin/bash# 初始化计数器counter=0# 获取当前目录下的所有文件for file in *; do    # 检查是否是文件（排除目录）    if [ -f &quot;$file&quot; ]; then        # 使用计数器作为文件夹名        foldername=&quot;$counter&quot;                # 创建文件夹，以计数器命名        mkdir -p &quot;$foldername&quot;                # 移动文件到对应的文件夹        mv &quot;$file&quot; &quot;$foldername/&quot;                # 递增计数器        counter=$((counter + 1))    fidone</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lammps_plumed安装</title>
      <link href="/2024/05/27/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/lammps_plumed%E5%AE%89%E8%A3%85/"/>
      <url>/2024/05/27/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/lammps_plumed%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li><a href="https://guriang.unpad.ac.id/hpc/lammpsdoc/Build_extras.html#plumed">https://guriang.unpad.ac.id/hpc/lammpsdoc/Build_extras.html#plumed</a></li><li>plumed官方教程 <a href="https://www.plumed.org/doc-v2.9/user-doc/html/index.html">PLUMED: Introduction</a></li></ul><h1 id="plumed-包嵌入lammps的三种方式"><a href="#plumed-包嵌入lammps的三种方式" class="headerlink" title="plumed 包嵌入lammps的三种方式"></a>plumed 包嵌入lammps的三种方式</h1><blockquote><p>静态：plumed 完全嵌入lammps，</p><p>共享：plumed独立安装，链接到lammps，可以被多种程序使用</p><p>使用时连接：独立安装plumed，独立指定plumed版本，可以用于比对不同的plumed版本</p></blockquote><p>所有三种版本都支持CMake 或者传统的make build</p><h1 id="安装plumed"><a href="#安装plumed" class="headerlink" title="安装plumed"></a>安装plumed</h1><p>最简单的方法：conda</p><p><code>conda install -c conda-forge plumed</code></p><p><code>plumed help</code>  查看帮助文档</p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>待学习内容</title>
      <link href="/2024/05/27/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%BE%85%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9/"/>
      <url>/2024/05/27/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%BE%85%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-电化学阻抗谱"><a href="#1-电化学阻抗谱" class="headerlink" title="1. 电化学阻抗谱"></a>1. 电化学阻抗谱</h1><p><a href="https://mp.weixin.qq.com/s/tJPPsU-p7Vmh8SNEnJOsLQ">【eScience-干货】电化学阻抗谱在锂离子电池中的应用 (qq.com)</a></p><h1 id="2-阿伦尼乌斯公式起源与物理学推导"><a href="#2-阿伦尼乌斯公式起源与物理学推导" class="headerlink" title="2.阿伦尼乌斯公式起源与物理学推导"></a>2.阿伦尼乌斯公式起源与物理学推导</h1><p><a href="https://www.zhihu.com/question/354394675/answer/884368098">(23 封私信 &#x2F; 81 条消息) Arrhenius 公式中，指前因子 A 和什么有关？ - 知乎 (zhihu.com)</a></p><h1 id="3-统计力学"><a href="#3-统计力学" class="headerlink" title="3. 统计力学"></a>3. 统计力学</h1><p> [Statistical Physics of Particles-Mehran Kardar.pdf](..........\3-文献\文献\X-1-书籍\统计物理\Statistical Physics of Particles-Mehran Kardar.pdf) </p><h1 id="4-Simon-固体物理"><a href="#4-Simon-固体物理" class="headerlink" title="4. Simon 固体物理"></a>4. Simon 固体物理</h1>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>windows使用技巧</title>
      <link href="/2024/05/26/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2024/05/26/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/windows%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-善用多桌面功能"><a href="#1-善用多桌面功能" class="headerlink" title="1.善用多桌面功能"></a>1.善用多桌面功能</h1><p>ctrl + win + D 新建桌面</p><p>ctrl + win + 左右方向键 切换桌面</p><ul><li>可以在新桌面跑一些需要挂在后台的任务</li></ul><h1 id="2-windows中的powershell"><a href="#2-windows中的powershell" class="headerlink" title="2 . windows中的powershell"></a>2 . windows中的powershell</h1><h2 id="1-如何使用anaconda"><a href="#1-如何使用anaconda" class="headerlink" title="1. 如何使用anaconda"></a>1. 如何使用anaconda</h2><p>方便可视化，所有的包都以图形的的形式展现，下载的包都在d盘的下载目录</p><ol><li><p>更改powershell的初始路径：更改下图的起始位置</p></li><li><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231225195806411.png" alt="image-20231225195806411"></p></li><li><p>更改jupyter的初始路径：</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231225195904473.png" alt="image-20231225195904473"></p></li></ol><p>更改属性中目标位置最后的路径</p><ol start="4"><li><p>安装origin提示试用期已过 解决方法：更改系统时间</p></li><li><p><a href="https://blog.csdn.net/dengjin20104042056/article/details/131502937">【Tools】Xshell中中文字体和英语字体大小不一致问题_xshell字体一大一小-CSDN博客</a></p></li></ol><h2 id="2-Powershell使用"><a href="#2-Powershell使用" class="headerlink" title="2. Powershell使用"></a>2. Powershell使用</h2><ol><li><p>ii &#x3D; Invoke-Item 对文件&#x2F;文件夹&#x2F;程序进行默认操作</p></li><li><p>cat &#x3D;Get-Content  </p><p>cat a.dat |clip  把内容复制到剪切板</p></li><li><p>Get-Alias 获取所有简化的名称</p></li><li><p>(gl).path |clip 把输出的路径放到剪切板</p></li><li><p>powershell中与.bashrc相似的文件是$profile ，初始是没有的，需要自己构建。在Set</p></li></ol><p>-Alias之前需要定义要做的事 </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231228152827863.png" alt="image-20231228152827863"></p><p>对应于$profile powershell中使用的是.$$profile</p><ol start="6"><li>notepad 用记事本打开文件</li></ol><p>电脑创建文件夹不显示的原因：海康智存</p><h1 id="3-安装wsl2-ubuntu与卸载"><a href="#3-安装wsl2-ubuntu与卸载" class="headerlink" title="3.安装wsl2 -ubuntu与卸载"></a>3.安装wsl2 -ubuntu与卸载</h1><p><a href="https://zhuanlan.zhihu.com/p/668630951">在Windows中安装Linux（亲测） - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/263089007">自定义WSL的安装位置，别再装到C盘啦 - 知乎 (zhihu.com)</a></p><p>cd &#x2F;mnt 从linux查看windows文件</p><p>&#x2F;&#x2F;wsl$  从windows查看linux文件</p><h1 id="4-windows11的问题"><a href="#4-windows11的问题" class="headerlink" title="4.windows11的问题"></a>4.windows11的问题</h1><p><a href="https://answers.microsoft.com/zh-hans/windows/forum/all/win11%E7%B3%BB%E7%BB%9F/a004fdd5-db81-4486-93bc-98b76d5668d1">Win11系统 任务栏软件图标不显示 - Microsoft Community</a></p><h1 id="5-永久停止windows更新"><a href="#5-永久停止windows更新" class="headerlink" title="5.永久停止windows更新"></a>5.永久停止windows更新</h1><p><a href="https://flzzz.com/5456.html">https://flzzz.com/5456.html</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高通量筛选结构</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E9%AB%98%E9%80%9A%E9%87%8F%E7%AD%9B%E9%80%89%E7%BB%93%E6%9E%84/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E9%AB%98%E9%80%9A%E9%87%8F%E7%AD%9B%E9%80%89%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><pre><code class="python">from pymatgen.ext.matproj import MPRestera = MPRester(&#39;1agzMpqyTNkIiTUX&#39;)structure = a.get_structure_by_material_id(&quot;mp-1234&quot;)print(structure)a.get_database_version()#data = a.query(criteria=&#123;&quot;pretty_formula&quot;: &quot;Li2O&quot;&#125;, properties=[&quot;spacegroup.symbol&quot;])#data = a.query(criteria=&#123;&quot;pretty_formula&quot;: &quot;Li2O&quot;&#125;, properties=[&quot;icsd_ids&quot;])data = a.query(criteria=&#123;&quot;pretty_formula&quot;: &quot;Li2O&quot;&#125;, properties=[&quot;material_id&quot;])data = a.query(criteria=&#123;&quot;pretty_formula&quot;: &quot;Li2O&quot;&#125;, properties=[&quot;band_gap&quot;,&quot;structure&quot;])data = a.query(&#39;Li-O&#39;,properties=[&quot;band_gap&quot;,&quot;material_id&quot;&quot;cif&quot;])) #获取Li-O体系所有化合物和iddata = a.query(&#39;Li-O-*-*&#39;,properties=[&quot;formula&quot;,&quot;material_id&quot;,&quot;band_gap&quot;])#获取所有四元Li-O化合物data = a.query(&#123;&quot;elements&quot;:&#123;&quot;$in&quot;:[&quot;Na&quot;], &quot;$all&quot;: [&quot;O&quot;]&#125;, &quot;nelements&quot;:4, &quot;band_gap&quot;: &#123;&quot;$gt&quot;: 2&#125;, &quot;e_above_hull&quot;: &#123;&quot;$lt&quot;: 0.1&#125;&#125;,properties=[&quot;formula&quot;,&quot;material_id&quot;,])#带隙&gt;2的所有Na-O四元素化合物print(len(data))#data = &#123;     &#39;criteria&#39;: &#123;          &#39;elements&#39;: &#123;&#39;$in&#39;: [&#39;Li&#39;], &#39;$all&#39;: [&#39;O&#39;]&#125;,          &#39;nelements&#39;: 4,      &#125;,      &#39;properties&#39;: [        &#39;formula&#39;,        &#39;material_id&#39;,      ]   &#125;#r = requests.post(&#39;https://materialsproject.org/rest/v2/query&#39;,#   headers=&#123;&#39;X-API-KEY&#39;: &#39;1agzMpqyTNkIiTUX&#39;&#125;,#   data=&#123;k: json.dumps(v) for k,v in data.items()&#125;)#response_content = r.json()#print(response_content[&#39;num_results&#39;])#stable_mpids = [doc.material_id for doc in docs]print(m.get_data(&quot;Li2O&quot;, prop=&quot;structure&quot;))for abc in data:    print(abc.values())#    print(abc[&#39;formula&#39;])valulist=[abc.values() for abc in data]valulist = [abc[&#39;material_id&#39;] for abc in data]valulist = [abc[&#39;formula&#39;].keys() for abc in data]#列表每个元素是一个字典，包含两个键，第一个键的值又是一个字典，包含四个键 #把第一个键的值的键作为列表peibi = [list(abc[&#39;formula&#39;].keys()) for abc in data] #把第一个键的值的键作为列表id  = [abc[&#39;material_id&#39;] for abc in data] pidic = dict(zip(id,peibi))#new1pidic=&#123;ka : va for ka, va in pidic.items() if &#39;H&#39; not in va&#125;#new1pidic2=&#123;ka : va for ka, va in pidic.items() if &#39;H&#39; in va&#125;nothopeelement=[&#39;V&#39;, &#39;Cr&#39;, &#39;Mn&#39;, &#39;Fe&#39;, &#39;Co&#39;, &#39;Ni&#39;, &#39;Cu&#39;, &#39;H&#39;, &#39;S&#39;,&#39;F&#39;,&#39;Cl&#39;,&#39;Br&#39;,&#39;I&#39;,&#39;N&#39;, &#39;Li&#39;, &#39;K&#39;, &#39;Ac&#39;, &#39;Th&#39;, &#39;U&#39;,&#39;Pa&#39;, &#39;Np&#39;, &#39;Pu&#39;, &#39;Am&#39;, &#39;Cm&#39;, &#39;Bk&#39;, &#39;Cf&#39;, &#39;Es&#39;, &#39;Fm&#39;, &#39;Md&#39;, &#39;No&#39;, &#39;Lr&#39;, &#39;Fr&#39;, &#39;Po&#39;, &#39;At&#39;, &#39;Rn&#39;, &#39;Tc&#39;,&#39;Ra&#39;,&#39;As&#39;,&#39;Hg&#39;,&#39;Be&#39;,&#39;Tl&#39;]newpidic=&#123;ka : va for ka, va in pidic.items() if not any (ha in va for ha in nothopeelement)&#125;#newpidic2=&#123;ka : va for ka, va in pidic.items() if any (ha in va for ha in nothopeelement)&#125;print(newpidic.values())id2=list(newpidic.keys())for ha in id2:    print(ha)    structure = a.get_structure_by_material_id(ha)    speciesna=[Element(&#39;Na&#39;)]    stripped = structure.copy()    stripped.remove_species(speciesna)    stripped = stripped.get_sorted_structure(reverse=True)    Vasp_Str = Poscar(stripped)    Vasp_Str.write_file(&#39;%s.vasp&#39;%ha)     #去除结构中的某一元素structure = a.get_structure_by_material_id(&quot;mp-6150&quot;)speciesna=[Element(&#39;Na&#39;)]stripped = struct.copy()stripped.remove_species(speciesna)stripped = stripped.get_sorted_structure(reverse=True)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网易公开课_氢原子波函数</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BD%91%E6%98%93%E5%85%AC%E5%BC%80%E8%AF%BE_%E6%B0%A2%E5%8E%9F%E5%AD%90%E6%B3%A2%E5%87%BD%E6%95%B0/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BD%91%E6%98%93%E5%85%AC%E5%BC%80%E8%AF%BE_%E6%B0%A2%E5%8E%9F%E5%AD%90%E6%B3%A2%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-氢原子能级"><a href="#1-氢原子能级" class="headerlink" title="1.氢原子能级"></a>1.氢原子能级</h1><h1 id="2-氢原子波函数"><a href="#2-氢原子波函数" class="headerlink" title="2.氢原子波函数"></a>2.氢原子波函数</h1><p>单个单电子原子的轨道 单个多电子原子的轨道 多个多电子原子的轨道</p><p>Ha&#x3D;Ea  薛定谔方程   </p><p>哈密顿量是电子与原子的动能、势能、的总和。对于氢原子，能级就是单个电子和原子核的结合能</p><p>密度泛函理论就是用多个多电子原子的哈密顿量来解能量，没有波函数，因为波函数等价于电子密度。</p><p>三个主量子数 n l m   极坐标系中的量子数，和波函数的公式相关</p><p>n 能级 </p><p>l角量子数 l&#x3D;0 - n-1</p><p>m 磁量子数  m&#x3D; -l -  +l</p><p>s轨道  l&#x3D;0</p><p>p轨道  l&#x3D;1   pz l&#x3D;1 m&#x3D;0  px&#x2F;py  l&#x3D;1 m&#x3D;1&#x2F;-1</p><p>波函数a100   -   n&#x3D;1 l&#x3D;0  1s</p><p>a200   2s</p><p>波函数a210  - n&#x3D;2 l&#x3D;1  2pz</p><p>a211 -   2px&#x2F;2py</p><p>a21-1 &#x3D; a211</p><p>3dxy 3dyz 3dz2 3dxz 3dx2-y2</p><p>在氢原子中，s和p轨道的能量都是兼并的</p><p>一个电子和一个原子核的解都是类似氢原子的，加一个Z个电荷</p><p>三个主量子数的原因是描述一个三维的轨道（为什么是三维的）</p><p>对主量子数n，有$n^2$个简并的轨道（对单个氢原子而言）</p><h2 id="波函数的样子（主要是s轨道的径向分布）"><a href="#波函数的样子（主要是s轨道的径向分布）" class="headerlink" title="波函数的样子（主要是s轨道的径向分布）"></a>波函数的样子（主要是s轨道的径向分布）</h2><p>波函数的样子和平方的样子是一个意思，只不过做一个平方而已，对于特定的r，大的更大，小的比较小，对特定的角度也是这样</p><p>s  球 靠近核的地方密度大，概率大 </p><p>波函数分为两个可分离的部分，径向波函数和角向波函数。径向波函数是和原子核距离R的函数，角向是相对原子核角度的波函数</p><p>a&#x3D;R(r)*Y()</p><p>a100的解角度为固定值</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108205858532.png" alt="image-20240108205858532"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108185410853.png" alt="image-20240108185410853"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108185530558.png" alt="image-20240108185530558"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108190136321.png" alt="image-20240108190136321"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108190200050.png" alt="image-20240108190200050"></p><p><strong>1s轨道</strong><br>$$<br>\Psi_{100}&#x3D;2{a_0}^{\frac{-3}2}e^{\frac{-r}{a_0}}*\sqrt{\pi&#x2F;4}<br>$$<br><strong>2s轨道</strong><br>$$<br>\Psi_{2 00}&#x3D;\frac1{\sqrt2}{a_0}^{\frac{-3}2}(1-\frac{r}{2a_0})e^{\frac{-r}{2a_0}}*\sqrt{\frac{\pi}4}<br>$$<br><img src="/./../../%E5%9B%BE%E7%89%87/media/7c6/7c6fd243-cfcb-4c04-a037-1e3686cd6db1/image.png" alt="student submitted image, transcription available below"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108192204474.png" alt="image-20240108192204474"></p><p>Z:核电荷数</p><p>s轨道的波函数都是球，因为l&#x3D;0 m&#x3D;0对应一个常数</p><p>pz是一个球   l&#x3D;1 m&#x3D;0</p><p>px和py是椭球 l&#x3D;1 m&#x3D;+-1</p><p><strong>对于不同主量子数的p轨道，其角向分布函数分别是相同的，区别是径向分布函数，但是径向分布函数是只与R相关的函数，也就是径向分布函数只随着距离的变化而变化，和角度无关。也就是随着半径增加疏密程度的变化，决定形状的是角向分布函数</strong></p><p><strong>也就是说对于不同的主量子数，其相同类型的轨道具有相同的角度形状</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108194619494.png" alt="image-20240108194619494"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108204551488.png" alt="image-20240108204551488"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108204604028.png" alt="image-20240108204604028"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108204703292.png" alt="image-20240108204703292"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108204943757.png" alt="image-20240108204943757"></p><p>波函数本身可以是负的，但是负号没有值的含义，平方还是正的</p><p>下图是波函数平方，也就是概率密度，和波函数形状一致<strong>波函数形状和概率密度形状一致，通过波函数就能看到电子概率的分布情况</strong></p><p>径向的分布情况</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108201150694.png" alt="image-20240108201150694"></p><p>1s 2s 3s </p><p><strong>对于电子分布，波函数正负的意义不大，但是对于成键比较重要。成键是电子云的叠加</strong></p><p>能量-概率密度（轨道比较形象，就是电子的运动空间）</p><p><strong>把氢原子所有轨道叠加起来就是它的整体的电子云，当然是一个球形了，因为所有轨道的能量是简并的。如果能量不简并，那它就只能在特定的轨道上运动了，也就有特定的轨迹，对氢原子，相当于是给区域分了类</strong></p><p><strong>当然，如果被激发后，能量就不同了，但是还是可以在s或者p或者d轨道上，主量子数变化但是轨迹分布还是可以随意走的</strong></p><p><strong>径向节点数量</strong>：主量子数-1-L  </p><p>1s 0 2s 1 3s 2  4p 2 </p><p>同一角量子数下不同的磁量子数对应的波函数的形状相同吗，节点数目相同</p><p>玻尔半径：概率最大值 （概率&#x2F;体积）</p><p>电子并不是绕着原子核旋转的！要看能量，能量如果简并，就在这些简并轨道运动，如果不简并，就在特定轨道运动</p><h2 id="p轨道"><a href="#p轨道" class="headerlink" title="p轨道"></a>p轨道</h2><p>&#x3D;&#x3D;l m决定了角向分布函数，n,l决定径向波函数&#x3D;&#x3D; ,不同的径向波函数也可以有相同的角向分布</p><p><strong>能带是晶体整体的所有电子的排布下的分列能级，或者分列轨道，也就对应着所有可能的电子能量分布。能带就是一个能级分布。一个能级可以对应多个轨道。每个轨道都可以填充两个电子。组成晶体后，有多少能级呢，无穷个，对应倒空间中无穷个点。通过特定的k点连线，得到最低能级。每个能级还可能是简并的，无法区分出来轨道的具体形状。</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108211517098.png" alt="image-20240108211517098"></p><p>2s 3s 的概率密度，激发后，最大可能位置变得更远 基态为a_0</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240108211847524.png" alt="image-20240108211847524"></p><p>波粒二象性使得粒子可以不经过b而从a到达c (驻波)</p><p>p轨道 有三个轨道 px py pz(m&#x3D;0)</p><p>三个轨道的区别在于节面的位置不同，最大值位置不同，相位分布不同（大于x或者y，或者z为正）pz在xy平面 px在yz平面</p><p>p轨道的角向节点为L 总节点数为n-l-1+l&#x3D;n-1</p><p>对于2p轨道，没有径向的节点（径向的连续空白区域，只有角向的，也就是没有在某一位置处有一个球形的节点）</p><p>2p轨道的最可能概率半径要小于2s，也就是2p更靠近原子核。p轨道比s轨道更靠近原子核。</p><p>主量子数越大，每个轨道平均都离原子核更远。</p><p><strong>现在不是经典的静电势图景，离原子核近的地方也可以能量比较大</strong>在经典的图像中，能级对应的轨道是确定的。这是波尔的错误</p><p><strong>n不变，随着l增加，最可能几率半径 降低 3d&lt;3p&lt;3s，但是能够以大概率接近原子核的轨道是3s&gt;3p&gt;3d    最可能和最近不同。</strong></p><p>对于一个多电子原子，s轨道最不容易被屏蔽，因为s轨道可以有最大概率更接近原子核</p><p>s电子既最远离原子核也最容易接近原子核</p><h2 id="电子自旋"><a href="#电子自旋" class="headerlink" title="电子自旋"></a>电子自旋</h2><p>$m_s$&#x3D;+-1&#x2F;2</p><p>三个量子数描述轨道，第四个量子数描述电子的状态</p><p>四个量子数是对电子的准确描述</p><p>每个轨道有两个电子</p><h1 id="3-多电子原子"><a href="#3-多电子原子" class="headerlink" title="3.多电子原子"></a>3.多电子原子</h1><p>多电子原子的波函数方程不可能解出（多体问题）</p><p>单电子轨道近似</p><p>分别考虑多电子原子中的每一个电子，都是一个多电荷原子加一个电子，这样可以使用氢原子能级来表示，只是在波函数中增加一个Z，多电子将依次地从低能级开始占据高能级，能级对应的主量子数不止是n，还和l有关。（一个是能级，一个是波函数，分清楚）但是这样做忽略了电子间的排斥作用。</p><p>Hartree 轨道：单电子轨道近似 (薛定谔波函数地解) why?</p><p>Lithium  A &#x3D; A1×A2*A3  A100 A100 A200  1s2 &#x3D; 1s×1s</p><p>电子组态是根据Hartree轨道写出的，周期表中的电子组态并不真实</p><h2 id="Hartree轨道和氢原子波函数地相似性与区别"><a href="#Hartree轨道和氢原子波函数地相似性与区别" class="headerlink" title="Hartree轨道和氢原子波函数地相似性与区别"></a>Hartree轨道和氢原子波函数地相似性与区别</h2><blockquote><p>相似性</p><p>形状相似（总节点 n-1 角向节点 l)</p><p>相同的节点数量</p></blockquote><blockquote><p>区别</p><p>多电子原子的单轨道近似比对应的氢的轨道更小（核电荷数更多）</p><p>轨道能量不仅依赖于n，也依赖于l </p><p>轨道的能量比氢对应的轨道能量低</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240113194748612.png" alt="image-20240113194748612"></p><p>通过确定电子的能量，可以确定电子的波函数&#x2F;轨道</p><p>屏蔽效应：电子间的相互作用抵消吸引力  内层离子屏蔽外层 </p><h2 id="角量子数的能量顺序"><a href="#角量子数的能量顺序" class="headerlink" title="角量子数的能量顺序"></a>角量子数的能量顺序</h2><p>2p轨道比2s轨道更近，但是2s轨道可以距离原子核的距离更近，因此受到的屏蔽更小，使得s轨道感受到的Z_eff更大，对应到能级上，-ZR&#x2F;n2  轨道的能量更小 </p><p>同理 E3s&lt;E3p&lt;E3d</p><h2 id="多电子原子洪特规则"><a href="#多电子原子洪特规则" class="headerlink" title="多电子原子洪特规则"></a>多电子原子洪特规则</h2><p>电子优先占据不同的波函数&#x2F;轨道，而不是相同的波函数&#x2F;轨道    电子尽可能进入不同的轨道来减少相互的斥力，从而降低能量</p><p>第四个量子数要求要首先平行，即自旋相同</p><p>周期：&#x3D; 主量子数  n</p><p>核电子被紧紧束缚在原子核周围，常温下只有价电子能够被激发（毕竟温稠密物质内层会被激发），离核最远</p><p>&#x3D;&#x3D;第四周期 4s低于3d 能级上低&#x3D;&#x3D;，但是波函数的距离上呢，应该同样是靠的更近，因为近的电子电子能量低？</p><p>Cr 4s15d5   Cu 4s13d10</p><p>3d在没有电子填充时比4s高，所以先填充4s，但是当有一个电子填充到3d时，3d的轨道就比4s能量低了，这时候如果要产生离子，是从4s来拿的</p><h1 id="光电子能谱"><a href="#光电子能谱" class="headerlink" title="光电子能谱"></a>光电子能谱</h1><h1 id="X-ray-photoelectron-spectroscopy"><a href="#X-ray-photoelectron-spectroscopy" class="headerlink" title="X-ray photoelectron spectroscopy"></a>X-ray photoelectron spectroscopy</h1><p>实验上确定不同的能级</p><p>测量不同原子打出来后的剩余动能</p><p>&#x3D;&#x3D;外层价电子和内层电子的能量差距很大&#x3D;&#x3D;，化学反应和化学过程主要考虑价电子 </p><p>对于Al和Na,最外层电子感受到屏蔽效应，但是不能完全屏蔽，导致Al的最外层电子感应到的有效电荷量还是多过Na，因此能量更低</p><h1 id="元素周期律"><a href="#元素周期律" class="headerlink" title="元素周期律"></a>元素周期律</h1><p>门捷列夫 根据元素性质对元素分类</p><p>1、2主族化学性质活泼 ：最外层容易失去电子 得到更低的能量 （每电子，类似相图中的每原子）</p><p>N不活泼因为是半满的</p><ul><li>电离能（默认指第一电离能，第一束缚能）</li></ul><p>向右，第一电离能逐渐升高，因为z是增加的，有效电荷量在增加，l的作用不明显</p><p>向下，第一电离能降低，因为主量子数增加，距离被很大降低了（概率上），n起主要作用</p><p>半满&#x2F;全满会降低电离能，但是不会降低到小于隔着的上一个。Li&lt;B&lt;Be</p><p>中性B原子中打出2s和B+中打出一个2s是不同的，B+中的2s电子的屏蔽效应更小，使得感受到的电荷量更大，因此能量更低，更难打出来</p><ul><li><p>电子亲和能 （得到一个电子的能力）</p><p>Cl- 比Cl更稳定，会放出能量</p><p>&#x3D;&#x3D;电离能是正的，表示打出一个电子需要的能量；电子亲和能可以是正或者负，表示增加一个电子的能量的负数；电子亲合能等于增加电子后能量变化的负值，正数越大表明越容易得到电子&#x3D;&#x3D;，是两个不同的物理过程，</p><p>N的电子亲和能是正的</p><p>向右电子亲和能增加，向下增加</p></li><li><p>电负性：一个原子吸引另一个原子的电荷密度的能力</p><p>正比于1&#x2F;2（电离能+电子亲和能） 越难打出，越容易嵌入，则电负性越大</p><p>从周期表向右电负性增加，向下电负性减小</p></li><li><p>原子半径 &#x3D;&#x3D;（没有确定的半径，百分之90的电子密度所在的地方）&#x3D;&#x3D;</p><p>向右减小，向下增加</p></li><li><p>等电子原子&#x2F;等电子离子:和原子具有相同的电子排布的离子</p><p>O2- F- Ne Na+ Mg2+</p><p>负离子比本体原子要大，正离子比本体原子要小。F- 比O2- 要小，因为束缚能力更小</p></li></ul><h1 id="共价键"><a href="#共价键" class="headerlink" title="共价键"></a>共价键</h1><p>键：如何放置两个原子核和电子的位置，使得它们的能量最低（低于两个原子分开的时候 </p><p>两个原子共用一对电子 </p><p>成键强度：成键之后能量降低了多少</p><p>键长：两个原子核之间的距离 </p><p>成键的原因：其中一个原子的电子与另一个原子核的吸引力，因为电子的屏蔽效应并不是完全的</p><p>离解能&#x3D;键的强度  ：把分子分开为两个原子的能量</p><p>N2分子的成键强度大于H2，键长更短</p><h1 id="Lewis-structures-路易斯结构（经验规律）"><a href="#Lewis-structures-路易斯结构（经验规律）" class="headerlink" title="Lewis structures 路易斯结构（经验规律）"></a>Lewis structures 路易斯结构（经验规律）</h1><p>要点：每一个原子都达到价壳层填满；电子共用</p><p>F 7个价电子：</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>表面计算</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E8%A1%A8%E9%9D%A2%E8%AE%A1%E7%AE%97/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E8%A1%A8%E9%9D%A2%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-固定原子"><a href="#1-固定原子" class="headerlink" title="1.固定原子"></a>1.固定原子</h1><pre><code class="python">from numpy import *import pandas as pdimport stringwith open(&#39;POSCAR&#39;) as f:    f.readline()    f.readline()    f.readline()    f.readline()    f.readline()    atom_name=f.readline()    atom_num=f.readline()    atom_name2=atom_name.split()     print(atom_name2)    atom_num2=[int(x) for x in atom_num.split()]    print(atom_num2)    atom_total=sum(atom_num2)    line_total = 8+atom_total    line_a=f.readlines()[1:atom_total+1]A=zeros((atom_total,3))B=zeros((atom_num2[0],3))C=zeros((atom_num2[1],3))A_row=0for line in line_a:    list =line.strip(&#39; &#39;).strip(&#39;\n&#39;).split(&#39; &#39;)    list=[x for x in list if x !=&#39;&#39;]    float_list=[float(x) for x in list]    A[A_row:]=float_list[0:3]    A_row +=1B,C=vsplit(A,[atom_num2[0]])#A[:,2] +=0.1 #第三列加0.2#A[:,1] -=0.1format_string= &quot;&#123;:,.8f&#125;&quot;with open(&#39;POSCAR-2&#39;,&#39;w&#39;) as h:    for i in range(B.shape[0]):        if B[i,2] &lt;0.33644:          for j in range(B.shape[1]):            h.write(format_string.format(B[i,j]) + &#39; &#39;)          h.write(&#39;F F F&#39;)          print(B[i])        else:          for j in range(B.shape[1]):            h.write(format_string.format(B[i,j]) + &#39; &#39;)          h.write(&#39;T T T&#39;)          print(B[i])        h.write(&#39;\n&#39;)with open(&#39;POSCAR-2&#39;,&#39;a&#39;) as h:    for i in range(C.shape[0]):        if C[i,2] &lt;0.3703:          for j in range(C.shape[1]):            h.write(format_string.format(C[i,j]) + &#39; &#39;)          h.write(&#39;F F F&#39;)        else:          for j in range(C.shape[1]):            h.write(format_string.format(C[i,j]) + &#39; &#39;)          h.write(&#39;T T T&#39;)        h.write(&#39;\n&#39;)   </code></pre><h1 id="2-计算表面能"><a href="#2-计算表面能" class="headerlink" title="2.计算表面能"></a>2.计算表面能</h1><p><a href="https://zhuanlan.zhihu.com/p/379448266">表面能计算基础及最新进展（PRB连载，计算表面能） - 知乎 (zhihu.com)</a></p><p><a href="https://en.wikipedia.org/wiki/Surface_energy">https://en.wikipedia.org/wiki/Surface_energy</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230604191033411.png" alt="image-20230604191033411"></p>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>缺陷能</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BC%BA%E9%99%B7%E8%83%BD/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BC%BA%E9%99%B7%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>参考文献</p><p><a href="https://mp.weixin.qq.com/s/gkfI3tuqyvjD6kTvnX8ogQ">https://mp.weixin.qq.com/s/gkfI3tuqyvjD6kTvnX8ogQ</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095246103.png" alt="image-20230529095246103"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095258898.png" alt="image-20230529095258898"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095310586.png" alt="image-20230529095310586"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095336478.png" alt="image-20230529095336478"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095348263.png" alt="image-20230529095348263"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095357191.png" alt="image-20230529095357191"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095408475.png" alt="image-20230529095408475"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529095421379.png" alt="image-20230529095421379"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>绘图细节</title>
      <link href="/2024/05/25/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/%E7%BB%98%E5%9B%BE%E7%BB%86%E8%8A%82/"/>
      <url>/2024/05/25/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/%E7%BB%98%E5%9B%BE%E7%BB%86%E8%8A%82/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-properties"><a href="#1-properties" class="headerlink" title="1. properties"></a>1. properties</h1><h2 id="1-原子"><a href="#1-原子" class="headerlink" title="1.原子"></a>1.原子</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612142745335.png"></p><ol><li><p>Shininese 一行控制原子中心光点， 颜色设置为黑色表示没有光点 值控制光点大小</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612142949636.png"><img src="/./../%E5%9B%BE%E7%89%87/image-20230612143024505.png" alt="image-20230612143024505"></p><ol start="2"><li><p>不同原子的颜色，一个参考的配色方案（from liujingyi)</p><p><img src="/./../../%E5%9B%BE%E7%89%87/IMG_20230612_105110.jpg" alt="IMG_20230612_105110"></p></li></ol><h2 id="2-成键"><a href="#2-成键" class="headerlink" title="2.成键"></a>2.成键</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612143457999.png" alt="image-20230612143457999"></p></li></ol><p>bond style控制是否使用双色还是单色还是不同类型的成键</p><h2 id="3-多面体"><a href="#3-多面体" class="headerlink" title="3.多面体"></a>3.多面体</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612143844460.png" alt="image-20230612143844460"></p><p>opacity 控制多面体的透明度</p><p>show polyhedral edges 控制是否显示多面体的边</p><h1 id="2-view-overall-appearence"><a href="#2-view-overall-appearence" class="headerlink" title="2. view - overall  appearence"></a>2. view - overall  appearence</h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612144101094.png" alt="image-20230612144101094"></p><p>projiection 控制显示方式，平行还是透视</p><p>enable lighting 控制是显示二维还是三维</p><p>ambient 和diffuse控制光亮明暗</p><p>enabledepth-cueing 在调整时先不要去掉，最后要导出图像时，可以去掉，有助于去除灰蒙蒙的感觉，更加立体</p><h1 id="3-绘制旋转的结构图在ppt中展示"><a href="#3-绘制旋转的结构图在ppt中展示" class="headerlink" title="3.绘制旋转的结构图在ppt中展示"></a>3.绘制旋转的结构图在ppt中展示</h1><p>1.vesta导出时可以使用stl格式，在ppt中打开为3D模型</p><h1 id="4-好看的配色"><a href="#4-好看的配色" class="headerlink" title="4. 好看的配色"></a>4. 好看的配色</h1><p>蓝  <code>29 123 249</code>  青 <code>227243181</code></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231026083755745.png" alt="image-20231026083755745"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231026083824812.png" alt="image-20231026083824812"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231026084245240.png" alt="image-20231026084245240"></p>]]></content>
      
      
      <categories>
          
          <category> 绘图与写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>纳米随机热力学暑期讲习班</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%B3%E7%B1%B3%E9%9A%8F%E6%9C%BA%E7%83%AD%E5%8A%9B%E5%AD%A6%E6%9A%91%E6%9C%9F%E8%AE%B2%E4%B9%A0%E7%8F%AD%202023/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%B3%E7%B1%B3%E9%9A%8F%E6%9C%BA%E7%83%AD%E5%8A%9B%E5%AD%A6%E6%9A%91%E6%9C%9F%E8%AE%B2%E4%B9%A0%E7%8F%AD%202023/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-赵鸿-第一讲-从微观到宏观"><a href="#1-赵鸿-第一讲-从微观到宏观" class="headerlink" title="1. 赵鸿 第一讲 从微观到宏观"></a>1. 赵鸿 第一讲 从微观到宏观</h1><ol><li><img src="/../../%E5%9B%BE%E7%89%87/image-20230709091502519.png" alt="image-20230709091502519"></li></ol><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709091756544.png" alt="image-20230709091756544"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709091911808.png" alt="image-20230709091911808"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709092043041.png" alt="image-20230709092043041"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709092150325.png" alt="image-20230709092150325"></p><p>关于结构与力  61个基本砖块（含反物质） 通过作用传播子连接起来 （光子是电磁相互作用子，胶子是强相互作用传播子，z+w是弱相互作用</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709092530855.png" alt="image-20230709092530855"></p><p>质量是什么 （希格斯粒子） 引力子</p><p>物理学大厦的基底</p><p>杨-米尔斯理论</p><p>统一弱电 </p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709093413901.png" alt="image-20230709093413901"></p><p>在基本粒子上是对称的，在宏观尺度上，是对称破缺的。晶体是对称破缺的产物</p><p>框架之外的东西 ：暗物质与暗能量</p><p>超弦-拓宽这张表格</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709093635774.png" alt="image-20230709093635774"></p><p>物理学是关于物质与物质的运动的问题（结构上是框架的搭建）</p><p>统计物理是关于运动的理论</p><p>&#x3D;&#x3D;密度泛函理论及其现在衍生出的凝聚态物理来源于混沌与无序，来源于无法精确求解，其全貌隐含着暗线，即统计物理、热力学等等。复杂系统的理论在做另一件事，不把复杂系统的理论应用到对凝聚态计算物理的研究中是完全错误的&#x3D;&#x3D;</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709094635217.png" alt="image-20230709094635217"></p><p>统计是统计 统计物理是物理的</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709094852376.png" alt="image-20230709094852376"></p><blockquote><p>很像一个分子动力学中的温度分布，服从右侧的分布 有了分布，统计就做完了。如何做这样一个统计分布呢（x-p)    是的！没有问题，服从正态分布，为什么和经验值有关系呢</p><p>能量的波动是否符合统计分布 应当符合</p></blockquote><blockquote><p> 是否可以构建一个结构信息的宏观变量</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709095340997.png" alt="image-20230709095340997"></p><p>N&#x3D;无穷，涨落一定为零</p><p>N有限时没有规律，但随着N增加，宏观变量就趋近常数，这就是涌现。</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709100133951.png" alt="image-20230709100133951"></p><blockquote><p>如何用到粒子跳跃上</p></blockquote><blockquote><p>&#x3D;&#x3D;粒子跳跃事件随时间的涨落，随着系统增加，单位时间内观察到的跳跃次数应该是稳定的，但是在小体系下，单位时间应该是有涨落的。单位时间的跳跃次数的分布是服从什么分布&#x3D;&#x3D;</p><p>跳跃次数的微观量是什么</p><p>当跳跃之间存在长程关联时，统计物理不可用？。短程关联可以归到统计物理</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709101641721.png" alt="image-20230709101641721"></p><p>莱维飞行和随机行走的分布函数是不同的。如果r2不是2Dt，那么就是有莱维飞行。</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709102923166.png" alt="image-20230709102923166"></p><p>漂亮的问题谁都会问，笨的，不是问题的问题问出来才有意思，做新的东西总有可能出错的。很喜欢统计物理的氛围</p><p>统计物理的数据是由动力学（经典动力学、量子动力学）产生的且受&#x3D;&#x3D;附加物理限制的&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709104239644.png" alt="image-20230709104239644"></p><p>解上面的式子得出不同的解</p><p>不同的系统状态分布</p><p>正则系综中，Es对应多个微观状态，</p><blockquote><p>如何解出不同系综的分布</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709104844506.png" alt="image-20230709104844506"></p><p>得到p之后，物理量A的系综平均值就得到了</p><blockquote><p>时间平均&#x3D;空间平均，也就是现在算长时间的原因，通过足够长的时间来消除涨落，是否能做到？布朗运动。涨落与扩散系数的线性度的关系。</p></blockquote><p>遍历似乎很重要</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709110342340.png" alt="image-20230709110342340"></p><p>热力学关系：热力学量之间的制约关系</p><p>热力学的更深层次的含义是统计物理</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230709110900149.png" alt="image-20230709110900149"></p><p>推论：温度不是一个恒量，这是N有限导致的。涨落是有限N下的行为。</p><p>能量的涨落是固定的,与N相关</p><blockquote><p>所有的量的涨落都是N的函数，所有的涨落来源于N</p><p>但是热力学量是没有涨落的，因为热力学对应大的系统</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709112701113.png" alt="image-20230709112701113"></p><p>刘维方程是动力学方程</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709113516869.png" alt="image-20230709113516869"></p><p>输运过程中动理学经常使用</p><p><img src="/./../%E5%9B%BE%E7%89%87/image-20230709113951506.png" alt="image-20230709113951506"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709114119297.png" alt="image-20230709114119297"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709114508765.png" alt="image-20230709114508765"></p><p>系综是麦克斯韦-玻尔兹曼统计得到的。考虑相互作用的气体</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709115020763.png" alt="image-20230709115020763"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230709115515557.png" alt="image-20230709115515557"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710090143790.png" alt="image-20230710090143790"></p><p>u和gamma空间的不同</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710091729907.png" alt="image-20230710091729907"></p><p>动力学 统计物理 热力学 递进关系 是有问题的 关于运动的理论 </p><p>统计物理是冒险、辛苦但是未来回报可能性大的</p><p>趋势是大团队、大工程、企业化</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710092834620.png" alt="image-20230710092834620"></p><p>基本问题！</p><p>统计物理的基本物理是动力学</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710093609412.png" alt="image-20230710093609412"></p><p>![image-20230710095441424](.&#x2F;..&#x2F;..&#x2F;图片&#x2F;image-20230710095441424.png</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710095503059.png" alt="image-20230710095503059"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710095619594.png" alt="image-20230710095619594"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710095651272.png" alt="image-20230710095651272"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710100031322.png" alt="image-20230710100031322"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710102310135.png" alt="image-20230710102310135"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230710110804265.png" alt="image-20230710110804265"></p><h1 id="2-纳米随机热力学的数学理论"><a href="#2-纳米随机热力学的数学理论" class="headerlink" title="2. 纳米随机热力学的数学理论"></a>2. 纳米随机热力学的数学理论</h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230711090029467.png" alt="image-20230711090029467"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230711090506672.png" alt="image-20230711090506672"></p><p>假设+逻辑推理  结论</p><p>真理 不是对或错，而是假设之下包含着这些对和错</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>画相图-计算可能的合成路径</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E7%94%BB%E7%9B%B8%E5%9B%BE-%E8%AE%A1%E7%AE%97%E5%90%88%E6%88%90%E8%B7%AF%E5%BE%84/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E7%94%BB%E7%9B%B8%E5%9B%BE-%E8%AE%A1%E7%AE%97%E5%90%88%E6%88%90%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-绘图脚本（相图、巨势相图）"><a href="#1-绘图脚本（相图、巨势相图）" class="headerlink" title="1.绘图脚本（相图、巨势相图）"></a>1.绘图脚本（相图、巨势相图）</h1><blockquote><p>使用material project数据库中的数据要求赝势和mp数据库一致，如果有磁性要求U值也一致。否则在MaterialsProjectCompatibility() 后会输出为none</p></blockquote><h2 id="1-相图-新的"><a href="#1-相图-新的" class="headerlink" title="1. 相图-新的"></a>1. 相图-新的</h2><h3 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h3><p>已经修正能量，注意关掉翻墙软件，需要安装新的API</p><p><a href="https://docs.materialsproject.org/methodology/materials-methodology/thermodynamic-stability/phase-diagrams-pds">https://docs.materialsproject.org/methodology/materials-methodology/thermodynamic-stability/phase-diagrams-pds</a></p><pre><code class="python">from mp_api.client import MPResterfrom pymatgen.core import compositionfrom pymatgen.io.vasp.outputs import Vasprunfrom pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntryfrom pymatgen.entries.compatibility import MaterialsProjectCompatibilitympr=MPRester(&quot;5BhZJctjosrFpkuE6qErpu85dT4gw4VZ&quot;)#entries = mpr.get_entries_in_chemsys(elements=[&quot;Li&quot;, &quot;Fe&quot;, &quot;O&quot;])#entries = mpr.materials.tasks.get_data_by_id(&quot;mp-2352&quot;)mp_entries = mpr.get_entries_in_chemsys(elements=[&quot;Na&quot;,&quot;Y&quot;,&quot;Si&quot;,&quot;O&quot;],additional_criteria=&#123;&quot;thermo_types&quot;: [&quot;GGA_GGA+U&quot;]&#125;) vasprun=Vasprun(&#39;vasprun.xml&#39;)entry_vasp = vasprun.get_computed_entry(inc_structure=True)compatibility = MaterialsProjectCompatibility()entry_from_vasp = compatibility.process_entry(entry_vasp)mp_entries.append(entry_from_vasp)pd=PhaseDiagram(mp_entries)stable_entries=list(pd.stable_entries)stable_entries.append(entry_from_vasp)pd2=PhaseDiagram(stable_entries)#print(stable_entries)print(stable_entries[-1])print(pd2.get_e_above_hull(stable_entries[-1]))plotter = PDPlotter(pd2)plotter.show()plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)###下面是拓展#可以看出四元相图中重合的线，关掉了颜色显示a = plotter.get_plot(fill=False)a.show()https://pymatgen.org/pymatgen.analysis.html#pymatgen.analysis.phase_diagram.PhaseDiagramprint(pd2.dim)print(pd2.qhull_entries) 给出hull上所有化合物print(pd2.qhull_data) 给出构建相图的数据，比实际相图维度少一维度，以三元A B C为例 知道A:B A:C那么B:C自然确定了，不需要增加维度print(pd2.all_entries_hulldata)   给出hull上的所有坐标和大小print(pd2.get_e_above_hull)  输出所有稳定的化合物print(pd2.computed_data) #包括facets(连接方式)  #simplexes(所有的形的坐标，三维相图里的形是二维的三角形，每个点都是坐标，坐标只有两个是因为只需要两个就能确定三角相图中一个点的位置) #all_entries(所有的化合物) #qhull_data(注意不能直接复制下来做相图，因为比实际多一行带2的，去掉这一行才可以。用于构建hull的数据，比实际相图维度少一维度，以三元A B C为例 知道A:B A:C那么B:C自然确定了，不需要增加) 多了一个1/3，1/3，2 多的应该是有用的，可能是用来做标定，实际上用不到，在算facets的时候没有考虑这一行。用自己下面的脚本才比较合适#确定的方法：1-x-y #material project自己画的图是顺时针坐标，给出了x和z，y没给出，需要1-x-z,但是origin是逆时针画图,需要双击画出来的图，点三元图，改成顺时针，然后双击图，调出图层属性界面，在显示部分，勾选输在坐标轴前面#dim(维度) #el_refs(hull的顶点)  #qhull_entries(用于构建hull/hull上的化合物)#print([entrya.composition.reduced_formula for entrya in pd2.qhull_entries])输出用于构建相图的简化的化学式#输出带某个化合物的组合，用于构建化合物相图import numpy as npprint(pd2.facets)  输出所有连接方式  每个数字与qhull.entries中的对应位置对应matrix2 = np.vstack(pd2.facets)rows_with_12 = matrix2[(matrix2 == 12).any(axis=1)]#绘制化合物相图from pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntry,CompoundPhaseDiagramfrom pymatgen.core import CompositionSiO2 = Composition(&quot;SiO2&quot;)Y2O3 = Composition(&quot;Y2O3&quot;)Na2O = Composition(&quot;Na2O&quot;)pd3=CompoundPhaseDiagram(stable_entries,[SiO2,Y2O3,Na2O])plotterb=PDPlotter(pd3)plotterb.show()#给出各个化合物的配比方式 注意是在stable_entries的基础上进行计算的，这样得到的都是稳定的#自动排除了那些不在面上的化合物，相当于一个提取，得到了转换后的化合物ppp,ddd=pd3.transform_entries(stable_entries,[SiO2,Y2O3,Na2O])print(ppp) #可以显示出实际的配分数#给出各个化合物的配比方式-更加直接一点import numpy as np#elements_fomula = sorted(&#123;els for e in ppp for els in e.composition.elements&#125;)#elements_fomula=list(elements_fomula)elements_fomula=pd3.elementsdata_fomula = np.array([[e.composition.get_atomic_fraction(el) for el in elements_fomula] for e in ppp])print(data_fomula)np.savetxt(&#39;fra.dat&#39;,data_fomula, delimiter=&#39;\t&#39;, fmt=&#39;%d&#39;)#data = np.array([e.composition.get_atomic_fraction(el) for el in elements] + [e.energy_per_atom] for e in min_entries])print(ppp)print([aa.composition for aa in ppp])</code></pre><h3 id="2-绘制三元-赝三元相图代码"><a href="#2-绘制三元-赝三元相图代码" class="headerlink" title="2. 绘制三元&#x2F;赝三元相图代码"></a>2. 绘制三元&#x2F;赝三元相图代码</h3><pre><code class="python">plotter = PDPlotter(pd2)plotter.show()plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)</code></pre><p>以Y-O为顶点和以Y-YSi为顶点，得到的Y5Si3的线段是不同的，赝三元相图的图像里线段不能直接比来获得比例</p><p><img src="/./../../%E5%9B%BE%E7%89%87/d82b7383013d9a8faa68b0a453108e3.jpg"></p><h3 id="3-化合物相图的输出"><a href="#3-化合物相图的输出" class="headerlink" title="3. 化合物相图的输出"></a>3. 化合物相图的输出</h3><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231208093545191.png" alt="image-20231208093545191"></p><p>输出的化合物相图的数据，以虚拟物种的方式出现，其中，上面是每个化合物，虚拟物种xf0、xh0、xg0后面的数字代表需要的组合</p><h3 id="4-pymatgen中的代码结构"><a href="#4-pymatgen中的代码结构" class="headerlink" title="4.pymatgen中的代码结构"></a>4.pymatgen中的代码结构</h3><h4 id="1-化学式相图"><a href="#1-化学式相图" class="headerlink" title="1.化学式相图"></a>1.化学式相图</h4><p>本质上是重构entry，把化合物变成单元的</p><pre><code class="python">class CompoundPhaseDiagram(PhaseDiagram):    #化学式相图的类是继承自phaseDiagram,继承的意思是子类可以使用父类的所有属性和方法    def __init__(self, entries, terminal_compositions, normalize_terminal_compositions=True):        self.original_entries = entries        self.terminal_compositions = terminal_compositions        self.normalize_terminals = normalize_terminal_compositions        p_entries, species_mapping = self.transform_entries(entries, terminal_compositions)        self.species_mapping = species_mapping        super().__init__(p_entries, elements=species_mapping.values())        #super()是用子类的这两个参数去实例化phasediagram 这两个参数分别对应虚拟化的化合物分数坐标和顶点的虚拟化物种</code></pre><h4 id="2-相图"><a href="#2-相图" class="headerlink" title="2. 相图"></a>2. 相图</h4><pre><code class="python">class PhaseDiagram(MSONable):    #phasediagram继承MSONable，这个类可以用来做json的数据输入输出    formation_energy_tol = 1e-11    numerical_tol = 1e-8    def __init__(        self,        entries: Sequence[PDEntry] | set[PDEntry],        elements: Sequence[Element] = (),        *,        computed_data: dict[str, Any] | None = None,    ) -&gt; None:        #computed_data接受一个字典或者none。如果提供的是一个字典，它可能包含了一些预先计算好的数据，如相图中的临界点、相边界等        #-none表示构造函数没有返回值        self.elements = elements        self.entries = entries        if computed_data is None:            computed_data = self._compute()            #计算得到相图的数据</code></pre><pre><code class="python">def _compute(self) -&gt; dict[str, Any]:        if self.elements == ():            self.elements = sorted(&#123;els for e in self.entries for els in e.elements&#125;)            #找出所有的元素，四种、三种、两种。。。        elements = list(self.elements)        dim = len(elements)        entries = sorted(self.entries, key=lambda e: e.composition.reduced_composition)        el_refs: dict[Element, PDEntry] = &#123;&#125;        min_entries: list[PDEntry] = []        all_entries: list[PDEntry] = []        for composition, group_iter in itertools.groupby(entries, key=lambda e: e.composition.reduced_composition):            group = list(group_iter)            min_entry = min(group, key=lambda e: e.energy_per_atom)            if composition.is_element:                el_refs[composition.elements[0]] = min_entry            min_entries.append(min_entry)            all_entries.extend(group)            #对entries进行分类，找到顶点、和各个组成中能量最低的entry        if missing := set(elements) - set(el_refs):            raise ValueError(f&quot;Missing terminal entries for elements &#123;sorted(map(str, missing))&#125;&quot;)        if extra := set(el_refs) - set(elements):            raise ValueError(f&quot;There are more terminal elements than dimensions: &#123;sorted(map(str, extra))&#125;&quot;)        data = np.array(            [[e.composition.get_atomic_fraction(el) for el in elements] + [e.energy_per_atom] for e in min_entries]        )        #用于绘图的坐标数据        #前三列是分数的坐标，最后一列是能量，后面dot一下就计算出来每个entry相对原点的形成能        # Use only entries with negative formation energy        vec = [el_refs[el].energy_per_atom for el in elements] + [-1]        #-1直接拼接在后面，点乘后相当于直接 -E        form_e = -np.dot(data, vec)        idx = np.where(form_e &lt; -PhaseDiagram.formation_energy_tol)[0].tolist()        #得到        # Add the elemental references        idx.extend([min_entries.index(el) for el in el_refs.values()])        #extend 把list2中的元素一个接一个添加到list1        #把min_entries对应顶点位置的坐标的索引增加到idx        qhull_entries = [min_entries[i] for i in idx]        #所有hull上的entries        qhull_data = data[idx][:, 1:]                # Add an extra point to enforce full dimensionality.        # This point will be present in all upper hull facets.        extra_point = np.zeros(dim) + 1 / dim        #创建一个一行三列的向量        extra_point[-1] = np.max(qhull_data) + 1        qhull_data = np.concatenate([qhull_data, [extra_point]], axis=0)        #增加了一行                 if dim == 1:            facets = [qhull_data.argmin(axis=0)]        else:            facets = get_facets(qhull_data)            final_facets = []            for facet in facets:                # Skip facets that include the extra point                if max(facet) == len(qhull_data) - 1:                    continue                    #去除增加的行的影响，不清楚为什么加一行，可能前面有用                m = qhull_data[facet]                m[:, -1] = 1                if abs(np.linalg.det(m)) &gt; 1e-14:                    final_facets.append(facet)            facets = final_facets        simplexes = [Simplex(qhull_data[f, :-1]) for f in facets]        #用于找到不同三角形的坐标        self.elements = elements        return &#123;            &quot;facets&quot;: facets,            &quot;simplexes&quot;: simplexes,            &quot;all_entries&quot;: all_entries,            &quot;qhull_data&quot;: qhull_data,            &quot;dim&quot;: dim,            # Dictionary with Element keys is not JSON-serializable            &quot;el_refs&quot;: list(el_refs.items()),            &quot;qhull_entries&quot;: qhull_entries,        &#125;</code></pre><p>computed_data</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231208101440132.png" alt="image-20231208101440132"></p><h2 id="2-老的，似乎不能用了-不能从materials-project数据库中提取数据了"><a href="#2-老的，似乎不能用了-不能从materials-project数据库中提取数据了" class="headerlink" title="2. 老的，似乎不能用了 (不能从materials project数据库中提取数据了)"></a>2. 老的，似乎不能用了 (不能从materials project数据库中提取数据了)</h2><pre><code class="python">from pymatgen.io.vasp.outputs import Vasprunimport pandas as pdfrom pymatgen.ext.matproj import MPResterfrom pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntryfrom pymatgen.entries.compatibility import MaterialsProjectCompatibilityvasprun=Vasprun(&#39;vasprun.xml&#39;)entry = vasprun.get_computed_entry(inc_structure=True)compatibility = MaterialsProjectCompatibility()entry = compatibility.process_entry(entry)a=MPRester(&#39;BhgyCJsKOOA3cRIi&#39;)mp_entries=a.get_entries_in_chemsys([&#39;K&#39;,&#39;Y&#39;,&#39;Si&#39;,&#39;O&#39;])mp_entries.append(entry)phd=PhaseDiagram(mp_entries)stable_entries=list(phd.stable_entries)stable_entries.append(entry)phd2=PhaseDiagram(stable_entries)#print(stable_entries)print(stable_entries[-1])print(phd2.get_e_above_hull(stable_entries[-1]))plotter = PDPlotter(phd2)plotter.show()</code></pre><h2 id="3-从现有数据的-dat文件读取然后绘制相图"><a href="#3-从现有数据的-dat文件读取然后绘制相图" class="headerlink" title="3. 从现有数据的.dat文件读取然后绘制相图"></a>3. 从现有数据的.dat文件读取然后绘制相图</h2><p>（&#x2F;work&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;1-system-MD&#x2F;2-Li5YSi4O12&#x2F;6phase&#x2F;LYSO）</p><pre><code class="python">from pymatgen.analysis.phase_diagram import *from pymatgen.core.periodic_table import Element, DummySpeciefrom pymatgen.core.composition import Compositionentries = []with open(&#39;lyso.dat&#39;) as fr :    for line in fr :      comp, ene = line.split(&#39;,&#39;)      entries.append(PDEntry(Composition(comp), float(ene)))pd = PhaseDiagram(entries)#stable_formulas = [ent.name for ent in pd.stable_entries]entry=PDEntry(composition=&#39;Li30Y6Si24O72&#39;,energy=-937.044768)stable_entries=list(pd.stable_entries)#print(pd.stable_entries)stable_entries.append(entry)phd=PhaseDiagram(stable_entries)#plotter=PDPlotter(phd,show_unstable=True)#plotter.show()print(stable_entries[-1])print(phd.get_e_above_hull(stable_entries[-1]))#for formula in stable_formulas:#        print (formula)#for e in entries:#        ehull = pd.get_e_above_hull(e)#        print (e.composition, ehull)#plotter = PDPlotter(pd)#plotter.show()#plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)#entries.append(PDEntry(Composition(&#39;Li2MgH15&#39;),float(3.1)))#pd.get_e_above_hull(entries[9])#pd.get_all_chempots(Composition(&#39;MgH16&#39;)) 一个化合物中所有元素的化学势#pd.get_chempot_range_map([Element(&#39;Li&#39;)])  每个化合物某种元素的化学势范围#get_composition_chempots(comp)print(phd.get_decomp_and_e_above_hull(stable_entries[-1]))</code></pre><h2 id="4-巨势相图"><a href="#4-巨势相图" class="headerlink" title="4. 巨势相图"></a>4. 巨势相图</h2><pre><code class="python">from pymatgen.io.vasp.outputs import Vasprunimport pandas as pdfrom pymatgen.ext.matproj import MPResterfrom pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntryfrom pymatgen.entries.compatibility import MaterialsProjectCompatibilityfrom pymatgen.analysis.phase_diagram import *from pymatgen.core.periodic_table import Element, DummySpeciefrom pymatgen.core.composition import Compositionvasprun=Vasprun(&#39;vasprun.xml&#39;)entry = vasprun.get_computed_entry(inc_structure=True)compatibility = MaterialsProjectCompatibility()entry = compatibility.process_entry(entry)a=MPRester(&#39;BhgyCJsKOOA3cRIi&#39;)mp_entries=a.get_entries_in_chemsys([&#39;Na&#39;,&#39;Y&#39;,&#39;Si&#39;,&#39;O&#39;])mp_entries.append(entry)phd=PhaseDiagram(mp_entries)li_entries = [e for e in mp_entries if e.composition.reduced_formula == &quot;Li&quot;]uli0 = min(li_entries, key=lambda e: e.energy_per_atom).energy_per_atomel_profile = phd.get_element_profile(Element(&quot;Li&quot;), mp_entries[-1].composition)for i, d in enumerate(el_profile):    voltage = -(d[&quot;chempot&quot;] - uli0)    print(&quot;Voltage: %s V&quot; % voltage)    print(d[&quot;reaction&quot;])    print(&quot;&quot;)</code></pre><p>新的</p><pre><code class="python">from mp_api.client import MPResterfrom pymatgen.core import compositionfrom pymatgen.io.vasp.outputs import Vasprunfrom pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntryfrom pymatgen.entries.compatibility import MaterialsProjectCompatibilityfrom pymatgen.core.periodic_table import Element, DummySpeciempr=MPRester(&quot;5BhZJctjosrFpkuE6qErpu85dT4gw4VZ&quot;)mp_entries = mpr.get_entries_in_chemsys(elements=[&quot;Na&quot;,&quot;Y&quot;,&quot;Si&quot;,&quot;O&quot;],additional_criteria=&#123;&quot;thermo_types&quot;: [&quot;GGA_GGA+U&quot;]&#125;)vasprun=Vasprun(&#39;Na.xml&#39;)entry_vasp = vasprun.get_computed_entry(inc_structure=True)compatibility = MaterialsProjectCompatibility()entry_from_vasp = compatibility.process_entry(entry_vasp)mp_entries.append(entry_from_vasp)phd=PhaseDiagram(mp_entries)na_entries = [e for e in mp_entries if e.composition.reduced_formula == &quot;Na&quot;]una0 = min(na_entries, key=lambda e: e.energy_per_atom).energy_per_atomprint(mp_entries[-1])el_profile = phd.get_element_profile(Element(&quot;Na&quot;), mp_entries[-1].composition)for i, d in enumerate(el_profile):    voltage = -(d[&quot;chempot&quot;] - una0)    print(&quot;Voltage: %s V&quot; % voltage)    print(d[&quot;reaction&quot;])    print(&quot;&quot;)</code></pre><h1 id="2-相图解释-（三元三角、四元四面体）"><a href="#2-相图解释-（三元三角、四元四面体）" class="headerlink" title="2. 相图解释 （三元三角、四元四面体）"></a>2. 相图解释 （三元三角、四元四面体）</h1><h2 id="1-相图的理解"><a href="#1-相图的理解" class="headerlink" title="1.相图的理解"></a>1.相图的理解</h2><p>x y z z </p><p>四面体只需要四个顶点</p><p>三维相图</p><p>&#x3D;&#x3D;逆时针&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231208204343051.png" alt="image-20231208204343051"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211650444.png" alt="image-20231206211650444"></p><p>#print([entrya.composition.reduced_formula for entrya in pd2.qhull_entries]) </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211706137.png" alt="image-20231206211706137"></p><p>#print(pd2.facets)  输出所有连接方式 (标号是上面的顺序，从0开始 )     pymatgen</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211658347.png" alt="image-20231206211658347"></p><p>四元</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213332475.png" alt="image-20231206213332475"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213336951.png" alt="image-20231206213336951"><br><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213344510.png" alt="image-20231206213344510"></p><p>目的是把块分成区域，每个区域不再能分配</p><p>三元相图是由一系列的小三元相图构图的，而小三元相图是由二元相图的边构成的。同理，四元相图由小四元四面体组成，而小四元四面体的边是二元相图，一个面是一个三元相图。</p><p>&#x3D;&#x3D;三元比二元多出来的特征在于可以有一些只能分解为三元的化合物，其他的稳定化合物完全可以以化合物为顶点做一个二元相图。而四元多出来的特征在于可以有一些只能分解为四个组分的化合物（在四面体中间）,要表示四元相图中的稳定结构，完全可以用三元相图、或者二元相图表示。&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207101533459.png" alt="image-20231207101533459"></p><h2 id="1-关于分解"><a href="#1-关于分解" class="headerlink" title="1.关于分解"></a>1.关于分解</h2><p>&#x3D;&#x3D;二元相图的横坐标是 y&#x2F;(x+y) ，y占据的百分数，二元的点本质上纵坐标都可以设置为在线上，只不过是能量的差别设置出来了高度，落在哪条线上就会分解为线的两端，三元落在哪个三角里就会分解为哪三个化合物，四元落在哪个四面体内就会分解为哪四个化合物&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207102045578.png" alt="image-20231207102045578"></p><p>E总是可以分解为C和D，当然也可以分解为A和D，但是一部分A和D可以生成更低的C，说明</p><p>E—A+D 并不完全，后面还有  A+D—–C+D，因此最终必然分解为C+D</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207102428536.png" alt="image-20231207102428536"></p><p>对于三元，F总能分解为A+B+D ，也可分解为A+B+C，但是A+B+C会合成D（因为D总是由A、B、C组成，道理和下面的解释一样），最终还是直接分解为D的能量最稳定。</p><p>为什么F总能分解为A+B+D? ： 因为F总能由A和H组成，而H总能由B+D组成，最终，F总能由A+B+D组成。</p><p>四元同理，四元的四面体内的不稳定化合物总可以先分解为三角形，再分解为线，再分解为点。</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207102751346.png" alt="image-20231207102751346"></p><h1 id="3-计算化合物的分解"><a href="#3-计算化合物的分解" class="headerlink" title="3. 计算化合物的分解"></a>3. 计算化合物的分解</h1><pre><code class="python">print(phd.get_decomp_and_e_above_hull(stable_entries[-1]))可以给出分解的路径，进而求出结合能（和e_above_hull是不一样的）也可以给出结合能，用里面的函数</code></pre><p>路径 &#x2F;work&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;1-system-MD&#x2F;2-Li5YSi4O12&#x2F;6phase&#x2F;LYSO</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231013111011468.png" alt="image-20231013111011468"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/a.jpg" alt="a"></p><h1 id="4-绘制相图（三元三角、四元四面体）"><a href="#4-绘制相图（三元三角、四元四面体）" class="headerlink" title="4.绘制相图（三元三角、四元四面体）"></a>4.绘制相图（三元三角、四元四面体）</h1><p><a href="https://www.originlab.com/doc/en/Origin-Help/3d-Tetrahedral">https://www.originlab.com/doc/en/Origin-Help/3d-Tetrahedral</a></p><p>x y z z </p><p>四面体只需要四个顶点</p><p>三维相图</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211650444.png" alt="image-20231206211650444"></p><p>#print([entrya.composition.reduced_formula for entrya in pd2.qhull_entries]) </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211706137.png" alt="image-20231206211706137"></p><p>#print(pd2.facets)  输出所有连接方式 (标号是上面的顺序，从0开始 )     pymatgen</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206211658347.png" alt="image-20231206211658347"></p><p>四元</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213332475.png" alt="image-20231206213332475"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213336951.png" alt="image-20231206213336951"><br><img src="/./../../%E5%9B%BE%E7%89%87/image-20231206213344510.png" alt="image-20231206213344510"></p><p>目的是把块分成区域，每个区域不再能分配</p><p>三元相图是由一系列的小三元相图构图的，而小三元相图是由二元相图的边构成的。同理，四元相图由小四元四面体组成，而小四元四面体的边是二元相图，一个面是一个三元相图。</p><p>&#x3D;&#x3D;三元比二元多出来的特征在于可以有一些只能分解为三元的化合物，其他的稳定化合物完全可以以化合物为顶点做一个二元相图。而四元多出来的特征在于可以有一些只能分解为四个组分的化合物（在四面体中间）,要表示四元相图中的稳定结构，完全可以用三元相图、或者二元相图表示。&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207101533459.png" alt="image-20231207101533459"></p><h1 id="5-计算可能的合成路径"><a href="#5-计算可能的合成路径" class="headerlink" title="5. 计算可能的合成路径"></a>5. 计算可能的合成路径</h1><pre><code class="python">from pymatgen.core import Compositionfrom sympy import symbols, Eq, solvefrom itertools import combinationsfrom mp_api.client import MPResterfrom pymatgen.io.vasp.outputs import Vasprunfrom pymatgen.analysis.phase_diagram import PhaseDiagram, PDPlotter, PDEntry,CompoundPhaseDiagramfrom pymatgen.entries.compatibility import MaterialsProjectCompatibilitydef solvechemical(entries,target_entry):    reduced_a = entries[0].composition.reduced_formula    reduced_b = entries[1].composition.reduced_formula    reduced_c = entries[2].composition.reduced_formula#     print(reduced_a,reduced_b,reduced_c)    reduced_aa = entries[0].composition    reduced_bb = entries[1].composition    reduced_cc = entries[2].composition    reduced_target = target_entry.composition    compounda, factora = reduced_aa.get_reduced_composition_and_factor()    compoundb, factorb = reduced_bb.get_reduced_composition_and_factor()    compoundc, factorc = reduced_cc.get_reduced_composition_and_factor()    reduced_compositiontarget, factortarget = reduced_target.get_reduced_composition_and_factor()    compound_a = Composition(reduced_a)    compound_b = Composition(reduced_b)    compound_c = Composition(reduced_c)    target_compound = Composition(target_entry.composition.reduced_formula)    x, y, z = symbols(&#39;x y z&#39;)    # 获取目标化合物所含元素    elements = target_compound.as_dict().keys()       #不能是通解的判断     # 为每个元素设置质量守恒方程    equations = []        for element in elements:        # 每个化合物中该元素的数量        eq = (            x * compound_a.get(element, 0) +            y * compound_b.get(element, 0) +            z * compound_c.get(element, 0) -            target_compound.get(element, 0)        )        equations.append(Eq(eq, 0))    solution = solve(equations, (x, y, z), dict = True)    # 判断并输出结果    if solution:        valid_solutions = []        for sol in solution:        # 检查解是否包含自由变量(通解）            has_free_symbols = any(val.free_symbols for val in sol.values())        # 检查解是否全部非负且为具体数值            if not has_free_symbols:                 is_valid = all(val.evalf() &gt;= 0 and val.is_number for val in sol.values())                if is_valid:                    valid_solutions.append(sol)        if valid_solutions:            coeffs = solution[0]            formation_energy = (target_entry.energy / factortarget - (coeffs[x] / factora * entries[0].energy + coeffs[y] / factorb * entries[1].energy + coeffs[z] / factorc * entries[2].energy))            results.append((f&quot;&#123;reduced_a&#125;, &#123;reduced_b&#125;, &#123;reduced_c&#125;&quot;, [value for value in solution[0].values()], formation_energy))            # print(reduced_a,reduced_b,reduced_c,end = &#39;,&#39;)            # print(entries[0].energy/factora,entries[1].energy/factorb,entries[2].energy/factorc, target_entry.energy / factortarget,  end = &#39;,&#39;)            # print(f&quot;可以生成目标化合物，配平系数为: &#123;solution&#125;&quot;)            # print(print([value for item in solution for value in item.values()]),end = &#39;,&#39;)            #print(([value for value in solution[0].values()]),end = &#39;,&#39;)            #entries = list(entries)            #entries.append(target_entry)            print(f&quot;目标化合物 &#123;target_entry.composition.reduced_formula&#125; 的形成能为: &#123;formation_energy:.3f&#125; eV&quot;)            #print(f&quot;&#123;formation_energy:.3f&#125; eV&quot;)    #    else:    #        print(&quot;无法通过这三个化合物生成目标化合物。&quot;)mpr=MPRester(&quot;5BhZJctjosrFpkuE6qErpu85dT4gw4VZ&quot;)mp_entries = mpr.get_entries_in_chemsys(elements=[&quot;K&quot;,&quot;Y&quot;,&quot;Si&quot;,&quot;O&quot;],additional_criteria=&#123;&quot;thermo_types&quot;: [&quot;GGA_GGA+U&quot;]&#125;) vasprun=Vasprun(&#39;vasprun.xml&#39;)vasprun2 = Vasprun(&#39;oqmd.xml&#39;)entry_vasp = vasprun.get_computed_entry(inc_structure=True)entry_vasp2 = vasprun2.get_computed_entry(inc_structure=True)compatibility = MaterialsProjectCompatibility()entry_from_vasp = compatibility.process_entry(entry_vasp)entry_from_vasp2 = compatibility.process_entry(entry_vasp2)mp_entries.append(entry_from_vasp)mp_entries.append(entry_from_vasp2)pd=PhaseDiagram(mp_entries)stable_entries=list(pd.stable_entries)print(len(stable_entries))entry_vasp_formula = entry_vasp.composition.reduced_formulastable_entries = [entry for entry in stable_entries if entry.composition.reduced_formula != entry_vasp_formula]print(len(stable_entries))results = []for entry_combo in combinations(stable_entries,3):    solvechemical(entry_combo,entry_from_vasp)results.sort(key=lambda x: x[2])for combo, coeffs, energy in results:    print(f&quot;&#123;combo&#125;, &#123;coeffs&#125;, &#123;energy:.3f&#125; eV&quot;)</code></pre><p>转换输出为latex格式</p><pre><code class="python">import redef read_and_convert(file_path):    with open(file_path, &#39;r&#39;, encoding=&#39;utf-16&#39;) as file:        lines = file.readlines()    latex_output = []    for line in lines:        # 去除空格和换行符        line = line.strip()        # 使用正则表达式匹配和提取数据        match = re.match(r&#39;([\w\d, ]+), \[([\d., ]+)\], (-?\d+\.\d+) eV&#39;, line)        if match:            compounds = match.group(1).split(&#39;, &#39;)            coefficients = list(map(float, match.group(2).split(&#39;, &#39;)))            energy = match.group(3)            # 构建LaTeX化学方程式            latex_equation = &#39;\\ce&#123;&#39;            for i, compound in enumerate(compounds):                coefficient = coefficients[i]                if coefficient != 1.0:                    latex_equation += f&#39;&#123;coefficient:.3g&#125; &#39;                latex_equation += compound + &#39; + &#39;            latex_equation = latex_equation.rstrip(&#39; + &#39;) + &#39;&#125; &amp; &#39; + energy + &#39; eV&#39; + &#39; \\\\&#39;            latex_output.append(latex_equation)    return latex_output# 读取文件并转换file_path = &#39;solve2.dat&#39;latex_equations = read_and_convert(file_path)# 打印转换后的LaTeX化学方程式for equation in latex_equations:    print(equation)</code></pre><h1 id="6-help-Pr-congwei"><a href="#6-help-Pr-congwei" class="headerlink" title="6. help Pr. congwei"></a>6. help Pr. congwei</h1><ol><li>画普通相图</li></ol><pre><code class="python">#usage: python pd.py PD.txtimport pandas as pdfrom pymatgen.core import Compositionfrom pymatgen.analysis.phase_diagram import PDEntry, PhaseDiagram, PDPlotterimport argparseif __name__ == &quot;__main__&quot;:    parser = argparse.ArgumentParser(description=&quot;Process phase diagram from input file.&quot;)    parser.add_argument(&#39;filename&#39;, type=str, help=&#39;Path to the input file&#39;)    args = parser.parse_args()    filename = args.filenamecolspecs = [    (0, 25),    # Name    (25, 42),   # Composition    (42, 46),   # Sym    (46, 61),   # Enthalpy    (61, 80),   # Volume    (80, 97),  # Density    (99, 116), # FormEnthalpy    (116, None) # Instability (到最后)]all_data = pd.read_fwf(filename, colspecs=colspecs,header=0)compositions = all_data[&#39;Composition&#39;]enthalpy = all_data[&#39;Enthalpy&#39;]entries = []for i in range(len(compositions)):    comp = Composition(compositions[i])    total_atoms = comp.num_atoms    total_energy = total_atoms * enthalpy[i]    entry = PDEntry(comp,total_energy)    entries.append(entry)phase_diagram = PhaseDiagram(entries)plotter = PDPlotter(phase_diagram,show_unstable = 1)plotter.show()#plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)</code></pre><ol start="2"><li><p>画化合物相图</p><pre><code class="python">#usage: python pd.py PD.txtimport pandas as pdfrom pymatgen.core import Compositionfrom pymatgen.analysis.phase_diagram import PDEntry, PhaseDiagram, PDPlotter,CompoundPhaseDiagramimport argparseif __name__ == &quot;__main__&quot;:    parser = argparse.ArgumentParser(description=&quot;Process phase diagram from input file.&quot;)    parser.add_argument(&#39;filename&#39;, type=str, help=&#39;Path to the input file&#39;)    args = parser.parse_args()    filename = args.filenamecolspecs = [    (0, 25),    # Name    (25, 42),   # Composition    (42, 46),   # Sym    (46, 61),   # Enthalpy    (61, 80),   # Volume    (80, 97),  # Density    (99, 116), # FormEnthalpy    (116, None) # Instability (到最后)]all_data = pd.read_fwf(filename, colspecs=colspecs,header=0)compositions = all_data[&#39;Composition&#39;]enthalpy = all_data[&#39;Enthalpy&#39;]entries = []for i in range(len(compositions)):    comp = Composition(compositions[i])    total_atoms = comp.num_atoms    total_energy = total_atoms * enthalpy[i]    entry = PDEntry(comp,total_energy)    entries.append(entry)phase_diagram = PhaseDiagram(entries)plotter = PDPlotter(phase_diagram,show_unstable = 1)#plotter.show()plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)aa = Composition(&quot;Li2O&quot;)bb = Composition(&quot;B2O3&quot;)cc = Composition(&quot;LiF&quot;)pd2=CompoundPhaseDiagram(entries,[aa,bb,cc])plotterb=PDPlotter(pd2)plotterb.write_image(&#39;pd2.png&#39;, image_format=&#39;png&#39;)#plotterb.show()print(pd2.qhull_data)#plotter.write_image(&#39;pd.png&#39;, image_format=&#39;png&#39;)</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux中的软件安装</title>
      <link href="/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/linux%E4%B8%AD%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/linux%E4%B8%AD%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-什么是linux系统中的环境"><a href="#1-什么是linux系统中的环境" class="headerlink" title="1. 什么是linux系统中的环境"></a>1. 什么是linux系统中的环境</h1><h1 id="2-linux中软件安装的含义"><a href="#2-linux中软件安装的含义" class="headerlink" title="2. linux中软件安装的含义"></a>2. linux中软件安装的含义</h1><p> <a href="https://www.cnblogs.com/kinsang/articles/6752079.html">https://www.cnblogs.com/kinsang/articles/6752079.html</a><br><a href="https://blog.csdn.net/topasstem8/article/details/7103546">https://blog.csdn.net/topasstem8/article/details/7103546</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>电池计算</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E7%94%B5%E6%B1%A0%E8%AE%A1%E7%AE%97/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E7%94%B5%E6%B1%A0%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-电池负极比容量计算"><a href="#1-电池负极比容量计算" class="headerlink" title="1.电池负极比容量计算"></a>1.<strong>电池负极比容量计算</strong></h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230510095231025.png" alt="image-20230510095231025"></p><p><strong>法拉第常数：96485 C&#x2F;mol</strong>  </p><p><strong>含义：1mol电子的带电量</strong> </p><p>*<em>6.02</em>10^23 * 1.6 <em>10^-19</em>*</p><h1 id="2-阿伦尼乌斯关系式辨析"><a href="#2-阿伦尼乌斯关系式辨析" class="headerlink" title="2. 阿伦尼乌斯关系式辨析"></a>2. 阿伦尼乌斯关系式辨析</h1><p>关于电导率和温度倒数的图像，目前有两种画法，分别是</p><p>$log(\sigma T)与\frac{1}{T}$和$log(\sigma)与1&#x2F;T$</p><p>根据公式</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525105911064.png" alt="image-20230525105911064"></p><p>绘制$log(\sigma T)与$$\frac{1}{T}$的关系是正确的</p><p>为什么一些计算用$log(\sigma)$与温度倒数仍能得到不错的结论呢</p><p>$log(\sigma T)&#x3D;log(\sigma )+log(T)$,相当于在log(σ)的基础上每个点加上log(T)项，而log(T)项，在几百k的温度下，变化幅度并不大，所以能够得到相近的活化能。</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525110449083.png" alt="image-20230525110449083"></p><p>由于更高温度log(T)带来的增幅更大， 所以log(σT)得到的活化能要比log(σ)更大</p><p>σ的值通常在1附近。</p><p>尤其对于实验，很难做特别大温度范围内的测量，通常温度幅度只有几十K，这样，使用log(σT)和log(σ)能够得到完全一致的活化能。</p><p>&#x3D;&#x3D;对于计算，由于温度变化幅度很大，因此必须要用log(σT)，对于实验，温度范围不大的话，而且与要探测的温度差距不大的话，无所谓了，当然，用log(σT)肯定是对的。&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525111543913.png" alt="image-20230525111543913"></p><p>以这篇文章（Adv. Funct. Mater. 2022, 32, 2206036）的黑色点为例，文中给的是log(σ),得到的值为</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525111713971.png" alt="image-20230525111713971"></p><p>使用数据重新作图后得到</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525111741409.png" alt="image-20230525111741409"></p><h5 id="Ea-0-4248-eV-σ300-2-58-10-5-S-cm"><a href="#Ea-0-4248-eV-σ300-2-58-10-5-S-cm" class="headerlink" title="Ea &#x3D; 0.4248 eV  σ300&#x3D;2.58*10^-5 S&#x2F;cm"></a>Ea &#x3D; 0.4248 eV  σ300&#x3D;2.58*10^-5 S&#x2F;cm</h5><ol><li>首次充放电、高倍率下的低容量、充放电曲线</li></ol><h1 id="3-关于扩散系数的尺寸效应"><a href="#3-关于扩散系数的尺寸效应" class="headerlink" title="3. 关于扩散系数的尺寸效应"></a>3. 关于扩散系数的尺寸效应</h1>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>电子能带理论</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%94%B5%E5%AD%90%E8%83%BD%E5%B8%A6%E7%90%86%E8%AE%BA/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%94%B5%E5%AD%90%E8%83%BD%E5%B8%A6%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>The Basics of Electronic Structure Theory for Periodic Systems</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习与主动学习</title>
      <link href="/2024/05/25/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%B8%BB%E5%8A%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/05/25/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E4%B8%BB%E5%8A%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-机器学习"><a href="#1-机器学习" class="headerlink" title="1.机器学习"></a>1.机器学习</h1><h2 id="1-安装-V3-版本"><a href="#1-安装-V3-版本" class="headerlink" title="1.安装:V3 版本"></a>1.安装:V3 版本</h2><p><strong>1.git clone -b v3 <a href="https://gitlab.com/Herbbb/torchdemo.git">https://gitlab.com/Herbbb/torchdemo.git</a></strong> ****</p><p><strong>2. source</strong> <strong>env_torchdemo</strong> <strong>(optional)</strong></p><p><strong>3.安装各种库,修改cmakelist&#x2F;prifix.~前几行</strong>  </p><p>  **completer:**<strong>编译器</strong> </p><p><strong>4.makedir build</strong> </p><p>  <strong>cd build</strong> </p><p>  <strong>cmake</strong>  **..&#x2F;**<strong>cmakelist</strong></p><p>  <strong>make</strong> </p><p><strong>5.编译和lammps的接口</strong></p><p>把lammps的文件包复制过来，然后sh ~.sh build 18 (18是主节点核数，可以通过lscps 查看cpus的值获得)</p><h2 id="2-训练势基本流程"><a href="#2-训练势基本流程" class="headerlink" title="2.训练势基本流程"></a>2.训练势基本流程</h2><p><strong>1.从OUTCAR构建训练集，xsf格式，可直接在xcrystal 打开</strong> </p><p>   <strong>sampleing.py</strong></p><ol start="2"><li><p><strong>修改inv2</strong></p><p><strong>traindatapath  &#x3D;  .&#x2F;train-set</strong>*</p><p><strong>batchsize    &#x3D;  1  和原子数相乘超过200</strong></p><p><strong>device     &#x3D;  cpu</strong> </p><p><strong>printstep    &#x3D;  100</strong></p><p><strong>hasattention  &#x3D;  false 加不加注意力</strong></p></li><li><p><strong>训练</strong></p><p><strong>export OMP_NUM_THREADS&#x3D;12 多线程</strong></p><p>   <strong>.&#x2F;<code>main.mp</code> –train inv2</strong>   (是main.mp而不是lam.mpi)</p></li><li><p><strong>测试（修改inv2的测试部分）</strong></p><p><strong>.&#x2F;main.mp –eval inv2   保证能量相差几个meV,力相差几十meV,输出的单位是eV</strong></p><p><strong><code>注意：线程和核，48核是虚拟核，实际只有24物理核，提交一个6线程任务就会占据6个核</code></strong></p><p><strong><code>训练机器学习势需要测试进程数，并不是越多越好，比如4远远好于48</code></strong></p><p><strong>注意二:楼下集群做训练的速度太慢,最好不要用楼下集群训练</strong></p></li><li><p><code>计算 （记得训练用的什么样的inv2计算就要用什么样子的inv2)</code>。否则会报错，无法运行</p></li><li><p>可以在训练过程中增加训练集，只要注意名字别和最开始的训练集重复</p></li></ol><h2 id="3-机器学习取样脚本"><a href="#3-机器学习取样脚本" class="headerlink" title="3.机器学习取样脚本"></a>3.机器学习取样脚本</h2><h3 id="1-按照目录来提取"><a href="#1-按照目录来提取" class="headerlink" title="1. 按照目录来提取"></a>1. 按照目录来提取</h3><pre><code class="python">import osimport sysimport timeimport scipy.stats as stimport numpy as npfrom sklearn.neighbors import KernelDensityfrom matplotlib import pyplotdef timer(func):    def wrapper(*args, **kwargs):        start_time = time.time()        result = func(*args, **kwargs)        end_time = time.time()        print(f&quot;Time elapsed: &#123;end_time - start_time:.4f&#125; seconds&quot;)        return result    return wrapperdef find_files(directory):    &quot;&quot;&quot;    递归查找一个目录下所有叫OUTCAR的文件，并返回这些文件的完整路径    &quot;&quot;&quot;    outcar_files = []  # 保存所有叫OUTCAR的文件的路径    for root, dirs, files in os.walk(directory):        for file in files:            if file == &quot;OUTCAR&quot;:                outcar_files.append(os.path.join(root, file))        for dir in dirs:            dir_outcar_files = find_files(os.path.join(root, dir))            outcar_files.extend(dir_outcar_files)        # 将子目录添加到 dirs 中，以便递归处理        dirs[:] = [d for d in dirs if os.path.isdir(os.path.join(root, d))]    outcar_files = list(set(outcar_files))    return outcar_files@timerdef read_vasp_xdatcar(file_path):    f = open(file=file_path)    f.readline()    f.readline()    lat = []    pos = []    # lattice    for _ in range(3):        lat.append(f.readline())    ele = f.readline()    npele = f.readline()    cnt = 0    tmp = None    while True:        line = f.readline()        if &quot;configuration&quot; in line:            cnt += 1            if tmp is not None:                pos.append(tmp)            tmp = []            continue        if not line:            pos.append(tmp)            break        tmp.append(line)    for conf_i in range(len(pos)):        for atom_i in range(len(pos[conf_i])):            pos[conf_i][atom_i] = pos[conf_i][atom_i].split()        pos[conf_i] = np.array(pos[conf_i]).astype(float)    ele = ele.split()    npele = npele.split()    npele = [int(i) for i in npele]    for i in range(len(lat)):        lat[i] = lat[i].split()    lat = np.array(lat).astype(float)    return cnt, ele, npele, lat, posdef topn(arr, n):    indices = np.argpartition(arr, -n)[-n:]    values = arr[indices]    sort_indices = np.argsort(values)[::-1]    return values[sort_indices], indices[sort_indices]def split_alp_num(string):    for i in range(len(string)):        if string[i].isdigit():            return [string[:i]], int(string[i:])def write2my(file_path, ene_i, lat_i, ele_i, coo_i, foc_i):    lat_i = lat_i.reshape(3, 3)    coo_i = coo_i.reshape(-1, 3)    foc_i = foc_i.reshape(-1, 3)    with open(file_path, &#39;w&#39;) as file:        file.write(f&quot;# total energy = &#123;ene_i&#125; eV\n\n&quot;)        file.write(&quot;CRYSTAL\n&quot;)        file.write(&quot;PRIMVEC\n&quot;)        for j in lat_i:            for k in j:                file.write(f&#39;&#123;k:20.8f&#125;&#39;)            file.write(&#39;\n&#39;)        file.write(&quot;PRIMCOORD\n&quot;)        file.write(f&quot;&#123;len(coo_i)&#125; 1\n&quot;)        for j in range(len(coo_i)):            file.write(f&#39;&#123;ele_i[j]:2&#125;&#39;)            # coo            for k in coo_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            # force            for k in foc_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            file.write(&quot;\n&quot;)    passdef direct2pos(lat, pos, direction=True):    &quot;&quot;&quot;    lat = [[Ax, Ay, Az],           [Bx, By, Bz],           [Cx, Cy, Cz]]    Pos = [n, 3]    :return: direct = [n, 3]    if direction=True    &quot;&quot;&quot;    if direction:        return pos @ lat    else:        return pos @ np.linalg.inv(lat)class MyDistrib(st.rv_continuous):    def __init__(self, prdf):        super().__init__()        self.prdf = prdf    def _pdf(self, x, *args):        return self.prdf.evaluate(x)class RejectSamp:    def __init__(self, ocr_name: str):        self.ocr_name = ocr_name  # &#123;XDATCAR path: OUTCAR path&#125;        self.rng_min = 0        self.rng_max = None        self.rng_grid = 10000        self.rng = None        self.rng_intv = None        self.pdf = None        self.sum_intv = 10        self.envelope = None        self.samples = None        pass    def sampling(self, num):        nframe, natom, ele, ene, lat, pos, foc = self._anls_ocr()        print(nframe)        print(natom)        # print(ele)        print(ene.shape)        print(lat.shape)        print(pos.shape)        print(foc.shape)        self.rng_max = nframe        self.rng = np.linspace(self.rng_min, self.rng_max, self.rng_grid)        self.rng_intv = self.rng[1] - self.rng[0]        sd = np.sum((pos[1:] - pos[:-1]) ** 2, (1, 2))        nintv = sd.size // self.sum_intv        sum_sd = sd[:nintv * self.sum_intv].reshape(nintv, self.sum_intv).sum(1)        sum_sd_body = np.copy(sum_sd)        sum_sd_body[:sum_sd.size // 20] = sum_sd.min()        topn_val, topn_idx = topn(sum_sd_body, 100)        x_train = topn_idx * self.sum_intv        distrib = KernelDensity(kernel=&quot;gaussian&quot;, bandwidth=int(0.003 * nframe)).fit(x_train[..., None])        self.pdf = lambda x: np.exp(distrib.score_samples(np.reshape(x, [-1, 1])))        self.envelope = self.pdf(self.rng).max()        cnt = 0        iters = 0        res = np.array([])        while cnt &lt; num:            u = np.random.uniform(self.rng_min, self.rng_max, num - cnt)            y = np.random.uniform(0, self.envelope, num - cnt)            pd = self.pdf(u)            res = np.append(res, u[pd &gt; y])            res = res.astype(int)            res = np.unique(res)            cnt = len(res)            iters += 1            print(f&quot;&#123;iters:&lt;3&#125;&#123;cnt:6&#125;&quot;)        print(&quot;Total iters: &quot;, iters)        self.samples = res        return self.samples.size, natom, ele, ene[self.samples], \            lat[self.samples], pos[self.samples], foc[self.samples]    def plot(self):        fig, ax = pyplot.subplots(figsize=(10, 6))        ax.hist(self.samples, bins=int(self.samples.size / 8), density=True, alpha=0.5)        ax.plot(self.rng, self.pdf(self.rng), &#39;r-&#39;, lw=1)        ax.plot(self.samples, -0.01 * self.envelope - 0.03 * self.envelope * np.random.random(self.samples.size), &quot;+k&quot;)        ax.set_ylim(-self.envelope * 0.05)        ax.set_title(self.ocr_name + &quot;  PDF&quot;)        return fig    @timer    def _anls_ocr(self):        pos_foc = []        ene = []        lat = []        ions_per = []        types = []        print(self.ocr_name)        with open(self.ocr_name, &#39;r&#39;) as file:            while True:                line = file.readline()                # eof break                if not line:                    break                # ions per type                #if &quot;POSCAR&quot; in line:                #    ions_per.append(line)                #    continue                if &quot;ions per type&quot; in line:                    ions_per.append(line)                if &quot;VRHFIN&quot; in line:                    types.append(line)                # lat                if &quot;BASIS-vectors&quot; in line:                    file.readline()                    file.readline()                    file.readline()                    file.readline()                    for i in range(3):                        line = file.readline()                        lat.append(line)                    continue                # pos &amp; force                if &quot;TOTAL-FORCE (eV/Angst)&quot; in line:                    line = file.readline()                    while True:                        line = file.readline()                        if not line:                            break                        if &quot;------&quot; in line:                            break                        pos_foc.append(line)                    continue                # ene                if &quot;energy  without entropy&quot; in line:                    ene.append(line)        ene = np.array([i.split(&#39;=&#39;)[1].split()[0] for i in ene]).astype(np.float64)        # lat = np.array([i.split() for i in lat]).astype(np.float64)[:, :3].reshape(-1, 3, 3)        lat = np.array([[float(i[4:][:12]), float(i[4:][12:25]), float(i[4:][25:38])] for i in lat]).astype(np.float64)[:, :3].reshape(-1, 3, 3)        # ele pretreatment        types = [i.split(&#39;=&#39;)[1].split(&#39;:&#39;)[0].rstrip() for i in types]        ions_per = ions_per[0].split()[-4:]        ele = sum([[i] * int(j) for i, j in zip(types, ions_per)], [])        pos_foc = np.array([i.split() for i in pos_foc]).astype(np.float64)        nframe = len(ene)        natom = len(ele)        pos = pos_foc[:, :3][:nframe * natom].reshape(nframe, natom, 3)[:nframe]        foc = pos_foc[:, 3:][:nframe * natom].reshape(nframe, natom, 3)[:nframe]        lat = lat[:nframe]        return nframe, natom, ele, ene, lat, pos, focif __name__ == &#39;__main__&#39;:    # ocr_files = find_files(&quot;/data/ljx/third/lizhao/LYSO/LYSO-src/old&quot;)#训练结构路径    ocr_files = [&quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/1fs/2&quot;,                 &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/1fs/4&quot;,                 &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/2fs/2&quot;,                 &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/2fs/4&quot;]    #ocr_files = [&quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/triple/1&quot;,    #             &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/triple/2&quot;] #训练集输出路径      out_path = &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/&quot;    if not os.path.exists(out_path):        os.mkdir(out_path)    out_data_path = os.path.join(out_path, &quot;eval-set&quot;)    if not os.path.exists(out_data_path):        os.mkdir(out_data_path)#每个数据取多少点，大概相乘在10000附近    smp_per_ocr = 1500    # mode = &#39;rand&#39;    mode = &#39;kde&#39;    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #    # Be careful when changing the code below    print(f&quot;total trajectories: &#123;len(ocr_files)&#125;&quot;)    if not os.path.exists(out_data_path):        os.mkdir(out_data_path)    xsf_tot_cnt = 0    if mode == &#39;kde&#39;:        for ocr_i in range(len(ocr_files)):            r = RejectSamp(ocr_files[ocr_i])            n_frame, n_atom, ele, ene, lat, pos, foc = r.sampling(smp_per_ocr)            fig = r.plot()            fig_path = os.path.join(out_path, str(ocr_i))            fig.savefig(fig_path)            for j in range(n_frame):                path_j = os.path.join(out_data_path, f&#39;structure&#123;str(smp_per_ocr * ocr_i + j).zfill(5)&#125;.xsf&#39;)                ene_j = ene[j]                lat_j = lat[j]                ele_j = ele                coo_j = pos[j]                foc_j = foc[j]                write2my(path_j, ene_j, lat_j, ele_j, coo_j, foc_j)                xsf_tot_cnt += 1</code></pre><h3 id="2-从单个目录下递归直接提取全部"><a href="#2-从单个目录下递归直接提取全部" class="headerlink" title="2. 从单个目录下递归直接提取全部"></a>2. 从单个目录下递归直接提取全部</h3><p><code>注意root_dir和write_dir的位置，其中root_dir放到要提取的当前目录最好，并且使用相对路径，这样提取的文件名称比较短</code></p><p><code>而write_dir则需要新建一个目录来存储提取的结构</code></p><pre><code class="python">import osfrom ase.io import readfrom ase import Atomsdef write2my(file_path, ene_i, lat_i, ele_i, coo_i, foc_i, vir_i=None):    lat_i = lat_i.reshape(3, 3)    coo_i = coo_i.reshape(-1, 3)    foc_i = foc_i.reshape(-1, 3)    with open(file_path, &#39;w&#39;) as file:        file.write(f&quot;# total energy = &#123;ene_i&#125; eV\n\n&quot;)        if vir_i is not None:            file.write(f&quot;VIRIAL\n&quot;)            for i in vir_i:                file.write(f&#39;&#123;i:20.8f&#125;&#39;)        file.write(&quot;\n&quot;)        file.write(&quot;CRYSTAL\n&quot;)        file.write(&quot;PRIMVEC\n&quot;)        for j in lat_i:            for k in j:                file.write(f&#39;&#123;k:20.8f&#125;&#39;)            file.write(&#39;\n&#39;)        file.write(&quot;PRIMCOORD\n&quot;)        file.write(f&quot;&#123;len(coo_i)&#125; 1\n&quot;)        for j in range(len(coo_i)):            file.write(f&#39;&#123;ele_i[j]:2&#125;&#39;)            # coo            for k in coo_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            # force            for k in foc_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            file.write(&quot;\n&quot;)    passdef read_from_ase_atoms(atoms: Atoms):    ene = atoms.get_potential_energy()    lat = atoms.get_cell()    pos = atoms.get_positions()    foc = atoms.get_forces()    try:        sts = atoms.get_stress()        xx, yy, zz, yz, xz, xy = - sts * atoms.get_volume()        vir = np.array(            [[xx, xy, xz],             [xy, yy, yz],             [xz, yz, zz]]).reshape(-1)    except:        vir = None    ele = atoms.get_chemical_symbols()    return ene, lat, pos, foc, vir, eledef find_files(directory, filename):    result = []    for root, dirs, files in os.walk(directory):        for file in files:            if file == filename:                result.append(os.path.join(root, file))    return resultif __name__ == &#39;__main__&#39;:    root_dir = &quot;./&quot;     outcar_dir = find_files(root_dir, &quot;OUTCAR&quot;)    write_dir = &quot;/work/home/xieyu/workplace/liz/2-Li-Y-Si-O-600K/B-升温/data_xsf&quot;    for i in outcar_dir:        xsf_head = &#39;_&#39;.join(i.split(&#39;.&#39;)[-1].split(&#39;/&#39;))        print(xsf_head)        datas = read(i, index=&quot;:&quot;)        for n, i in enumerate(datas):            ene, lat, pos, foc, vir, ele = read_from_ase_atoms(i)            write2my(                os.path.join(write_dir, f&quot;&#123;xsf_head&#125;_struct&#123;str(n).zfill(6)&#125;.xsf&quot;),                ene_i=ene,                lat_i=lat,                ele_i=ele,                coo_i=pos,                foc_i=foc,                vir_i=vir)</code></pre><h2 id="4-遇到的报错、问题"><a href="#4-遇到的报错、问题" class="headerlink" title="4.遇到的报错、问题"></a>4.遇到的报错、问题</h2><ol><li><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230518110402035.png" alt="image-20230518110402035"></p><p><strong>晶胞中某种原子的个数少，导致小的截断半径探索不到足够的数据，需要增加截断半径</strong></p><p><strong>解决方法：增加rcut和acut</strong></p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230518110457046.png" alt="image-20230518110457046"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230518110502110.png" alt="image-20230518110502110"></p><ol start="2"><li><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230518110515573.png" alt="image-20230518110515573"></p><p><strong>找师弟</strong></p></li><li><p><strong>取样脚本报错，原因是中文名称路径</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230518110605312.png" alt="image-20230518110605312"></p></li></ol><h2 id="5-机器学习训练增加对压力的训练"><a href="#5-机器学习训练增加对压力的训练" class="headerlink" title="5.机器学习训练增加对压力的训练"></a>5.机器学习训练增加对压力的训练</h2><ol><li>在从OUTCAR中提取出的</li><li>在inv2中vpref的值不能为0，可以设置为与epref相等。</li></ol><h2 id="6-inv2中的元素类型的顺序"><a href="#6-inv2中的元素类型的顺序" class="headerlink" title="6. inv2中的元素类型的顺序"></a>6. inv2中的元素类型的顺序</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20241030141805731.png" alt="image-20241030141805731"></p><p><strong>pair_coeff应该和初始的data.nso或者初始的POSCAR的原子顺序相同，而不是按照原子序数的大小变化</strong></p><h1 id="2-主动学习机器学习"><a href="#2-主动学习机器学习" class="headerlink" title="2. 主动学习机器学习"></a>2. 主动学习机器学习</h1><p>如果给主动学习一个很大的初始训练集，会降低主动学习的速度，原因是主动学习需要遍历很多的结构</p><p>初始训练集太少会导致一些较少的原子检测不到，会报错</p><h2 id="1-注意事项"><a href="#1-注意事项" class="headerlink" title="1.注意事项"></a>1.注意事项</h2><h3 id="1-老版本"><a href="#1-老版本" class="headerlink" title="1. 老版本"></a>1. 老版本</h3><h4 id="1-关于显卡"><a href="#1-关于显卡" class="headerlink" title="1 关于显卡"></a>1 关于显卡</h4><p>gtop查看显卡信息，<code>注意别把显存提爆</code>  占用显存大小和胞的大小有关，和数据集数量无关</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231022221759671.png" alt="image-20231022221759671"></p><h4 id="2-关于主动学习"><a href="#2-关于主动学习" class="headerlink" title="2 关于主动学习"></a>2 关于主动学习</h4><p>对每个主动学习任务，需要在集群处建立新的文件夹，来进行自洽计算，避免多个任务进行时发生‘哈希碰撞’</p><p>修改下面文件中的路径</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231023155810672.png" alt="image-20231023155810672"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231023155824015.png" alt="image-20231023155824015"></p><ol start="2"><li><p>cal.slurm里提任务的名称要不同，因为是依据任务名称来回收任务的</p></li><li><p>记得激活python3环境（不然不写新找到的数据集，现在修复了）</p></li><li><p>修改使用哪个卡<img src="/./../../%E5%9B%BE%E7%89%87/image-20231118163008730.png" alt="image-20231118163008730"></p><p>可以把多个任务提交到一块卡上面</p><p>如果是单独只训练需要把restart修改为false</p><p>不能把poscar放到fp里面，否则会反复lable 一个结构</p><p>任务输出的log文件要统一命名   3-md-log（lammps分子动力学输出）</p><p>2-train-log（训练输出）</p><p>4-select-log （选择输出）</p><p>vasp.log vasp输出</p><p>训练的圈数不需要太多 3000-5000</p><p>初始训练集的数目100左右</p><p>acnn的路径（sub-train.sh sub-select.sh)要正确</p><p>inv2 里rcut等</p><p>注意sub-md.sh和sub.slurm里面的任务名称不但不同任务要不同，而且要与原来集群上的任务名称不同</p><p>waiting remote jobs: 1  含义是有一个等待回收的任务</p><p>lr是学习率，学习率的值减小，说明模型的变化量减小</p></li><li><p>inv2中 select_thr 控制挑选结构的下限阈值。目的是挑选出结构差异性大的结构，增大sub-select.log中target的值（一个矩阵的行列式，不同行差异性越大行列式越大）。初期因为跑的少，很多相似结构，所以阈值要高点，不能什么都加进去，后期跑的多了，可以把阈值调低点，增加多样性，</p><p>现在推荐把select_thr设置为1.2</p></li></ol><h4 id="3-需要测试的事项"><a href="#3-需要测试的事项" class="headerlink" title="3.需要测试的事项"></a>3.需要测试的事项</h4><ol><li>初始数据集的大小多少更合适</li><li>训练的圈数需要随着主动学习次数的增加而变化，多少圈比较合适</li><li>小包跑多少算合理了</li><li>主动学习过程中，哪些是占资源多的，哪些是花费时间长的</li><li>nohup .&#x2F;sub-train.sh &gt; train.log 2&gt;&amp;1 &amp;</li><li>inv2 里卡的名称</li><li>in.lmp 里质量、名称</li><li>给一个data.nlso文件</li></ol><h4 id="4-训练方式-增强采样"><a href="#4-训练方式-增强采样" class="headerlink" title="4.训练方式-增强采样"></a>4.训练方式-增强采样</h4><p><code>先用小胞，小圈数  训练到一定程度后（小胞可以跑足够长时间），用大胞、大圈数</code>   目的是增加训练集</p><p><code>可以循环着提供大胞的扩胞方式</code></p><p>inv2 nbatch和savestep要联动修改</p><p>增加胞的大小应该可以减小代数</p><p>top -u lijx</p><p>跑升温过程训练，这样得到的势理论上可以跑不同的温度</p><p>增强采样：大晶胞、训练圈数增加、广的温度采样范围、长的模拟时间</p><h4 id="5-关于续算"><a href="#5-关于续算" class="headerlink" title="5. 关于续算"></a>5. 关于续算</h4><h5 id="1-没有跑到设置条件（没有跑足1ns…"><a href="#1-没有跑到设置条件（没有跑足1ns…" class="headerlink" title="1.没有跑到设置条件（没有跑足1ns…)"></a>1.没有跑到设置条件（没有跑足1ns…)</h5><ol><li><p>删除最后一代</p></li><li><p>在scheduling.sh里修改代数，不从0开始，而是输入刚刚删除的代的代号，这样，会自动从前一代读取最后的模型，进行训练。在提交任务后，新的一代内训练输出2-train.log中会出现提示（需要向下多翻）</p><p>例如，跑完是 28 29 30 ，那就删除30的文件夹，同时把scheduling.sh里改为30</p></li><li><p>提交任务应该注意 &gt;&gt; log 否则续算会把之前的log覆盖掉  nohup .&#x2F;scheduling.sh &gt;&gt; log 2&gt;&amp;1 &amp;</p></li><li><p>可以适当修改分子动力学里的晶胞尺寸、模拟时间、训练圈数和保存的步数、训练用到的卡</p></li></ol><h5 id="2-跑到预定条件，但是希望续算"><a href="#2-跑到预定条件，但是希望续算" class="headerlink" title="2.跑到预定条件，但是希望续算"></a>2.跑到预定条件，但是希望续算</h5><ol><li><p>正常训练结束后log会报没有输出oos的错误，可以通过看最后一代3md的输出log.lammps判断</p></li><li><p>不需要删除最后一代，只需要修改scheduling.sh为下一代开始，例如，出现了 28 29 30 那么scheduling.sh里修改为 31</p></li><li><p>需要把前一代的Ap_inv_*拷贝过来，因为没有select的步骤没有办法产生这些文件，但是分子动力学计算需要这些文件</p><p><code>Ap_inv_*用于主动学习中选择结构，如果用al的模式跑分子动力学，需要用到Ap_inv*来作为选择结构的标准，但是分子动力学过程并没有用到。用不用al跑出来的结果是一样的，差别是要不要获取结构</code></p><p><code>可以不用al，也就不需要Ap_inv</code></p></li><li><p>修改in.lmp里面的模拟晶胞尺寸、模拟时间、以及升温过程的温度（更广一些）、增加训练和保存的圈数、等等方式来增加采样  </p><p>还有修改 restart_lr &#x3D; 1e-4  学习率</p><p>学习率1e-7训练就差别不大了</p><p>inv2中 select_thr  调低 1.2</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231207153430496.png" alt="image-20231207153430496"></p><h4 id="6-批量化杀掉当前文件夹内后台的任务（不想继续跑的时候）"><a href="#6-批量化杀掉当前文件夹内后台的任务（不想继续跑的时候）" class="headerlink" title="6 批量化杀掉当前文件夹内后台的任务（不想继续跑的时候）"></a>6 批量化杀掉当前文件夹内后台的任务（不想继续跑的时候）</h4><pre><code class="shell"># 获取用户 lijx的所有进程 IDpgrep -u lijx &gt; lijx_processes.txt # 通过进程 ID 获取对应的进程所在目录while read -r pid; do    ls -l /proc/&quot;$pid&quot;/cwd 2&gt;/dev/null | grep -q &quot;/public/lijx/work/Na-X-Si-O/2-onthefly/3-gpu&quot; &amp;&amp; echo &quot;$      pid&quot;done &lt; lijx_processes.txt &gt; lijx_processes_in_test.txt# 通过进程 ID 杀死位于 /home/lijx/test 及其子目录下的所有进程while read -r pid; do    kill -9 &quot;$pid&quot;done &lt; lijx_processes_in_test.txt</code></pre><pre><code class="shell">for i in $(cat lijx_processes_in_test.txt);do llpid $i;done</code></pre><h2 id="2-集成化提任务方式"><a href="#2-集成化提任务方式" class="headerlink" title="2.集成化提任务方式"></a>2.集成化提任务方式</h2><p>四个文件  1-convert_outcar_xsf.py   2-convert_POSCAR_data.py   3-makepot.py    make_initial.sh</p><p>只需要配置make_initial.sh</p><pre><code class="shell">#需要的文件：POSCAR OUTCAR sub.slurm(vasp) sub-md.sh(lammps)#先切换到python3环境 conda activate #set vasp_systermvasp_folder=&#39;&quot;/work/home/liz/workspace/1-system-MD/5-Na-X-Si-O/md/1-Mo&quot;&#39;md_duty_name=&#39;md-Mo&#39;vasp_label_duty_name=&#39;vasp-Mo&#39;#set GPUGPU_number=0#set mdcat &gt; in.lmp &lt;&lt; lzhvariable        x index 1variable        y index 1variable        z index 1variable        ss equal 0.001variable        tdamp equal &quot;v_ss*100&quot;variable        dmsdx  equal   c_1[1]variable        dmsdy  equal   c_1[2]variable        dmsdz  equal   c_1[3]variable        dmsd   equal   c_1[4]variable        istep  equal   stepvariable        msdx   format  dmsdx  %16.8evariable        msdy   format  dmsdy  %16.8evariable        msdz   format  dmsdz  %16.8evariable        msd    format  dmsd   %16.8evariable        sstep  format  istep  %-10gunits           metalatom_style      atomicboundary        p p pread_data       ./data.nsomass            1 22.990    #importantmass            2 95.94mass            3 28.084mass            4 15.999replicate       \$x \$y \$zpair_style      acnn ./model/all alpair_coeff      * * Na   Mo   Si   O   #importantthermo          1thermo_style    custom step time temp press pe lx ly lz kethermo_modify   format 4 %20.15gcompute         1 all msd com yesdump            out  all custom 100 A.lammpstrj id element xu yu zu fx fy fzdump_modify     out  element 1   2   3   4dump_modify     out  format 1 %4ddump_modify     out  format 2 %4sdump_modify     out  format float %16.8fvelocity        all create 800.0 8728timestep        \$&#123;ss&#125;fix             1 all nvt temp 800 800 \$&#123;tdamp&#125;fix             2 all print 1 &quot;\$&#123;sstep&#125; \$&#123;msdx&#125; \$&#123;msdy&#125; \$&#123;msdz&#125; \$&#123;msd&#125;&quot; screen no file msd.datrun             1000000lzh#not always need changesvasp_ip=&#39;&quot;liz@59.72.114.246&quot;&#39;vasp_port=&#39;&quot;2222&quot;&#39;command_line=&#39;&quot;slurm&quot;&#39;# set vasp_inputvasp_pot_PBE_Path=&#39;&quot;/public/lijx/work/Na-X-Si-O/pot-makepot/potpaw_PBE/&quot;&#39;cat &gt; INCAR &lt;&lt; liz SYSTEM = Na-X-Si-OALGO = NormalISYM = 0LREAL =AutoPREC = NormalEDIFF = 1e-5ENCUT = 400NELMIN = 4NELM = 500IBRION = -1ISIF = 2ISMEAR = 0SIGMA = 0.05NPAR = 6LH5 = .TRUE.lizcat &gt; KPOINTS &lt;&lt; lizhK-Spacing Value to Generate K-Mesh: 0.060Gamma 1   1   1 0.0  0.0  0.0lizhsed -i &quot;s|^base_pseudo_path.*|base_pseudo_path = $vasp_pot_PBE_Path|&quot; 3-makepot.pymv ../POSCAR ../resource/fpmv ../sub.slurm ../resource/fpmv ../sub-md.sh ../resource/mdmv ./INCAR ../resource/fpmv ./KPOINTS ../resource/fpmv ./in.lmp ../resource/mdmv ../OUTCAR ../resource/init_dtcp ./1-convert_outcar_xsf.py ../resource/init_dtcp ./2-convert_POSCAR_data.py ../resource/fpcp ./3-makepot.py ../resource/fpcd ../resource/init_dt/python 1-convert_outcar_xsf.py waitrm OUTCARmv eval-set/* ./cd ../fppython 2-convert_POSCAR_data.py POSCAR data.nsowaitmv data.nso ../mdpython 3-makepot.py rm POSCARwaitif [ &quot;$command_line&quot;=&quot;slurm&quot; ]; then    sed -i &quot;s|^#SBATCH  --job-name.*|#SBATCH  --job-name=$vasp_label_duty_name|&quot; sub.slurmelif [ &quot;$command_line&quot; = &quot;PBS&quot; ]; then    sed -i &quot;s|^#PBS -N|#PBS -N $vasp_label_duty_name|&quot; sub.slurmelse    echo &quot;Command line is not &#39;slurm&#39; or &#39;PBS. Run another command.&quot;ficd ../mdif [ &quot;$command_line&quot;=&quot;slurm&quot; ]; then    sed -i &quot;s|^#SBATCH  --job-name.*|#SBATCH  --job-name=$md_duty_name|&quot; sub-md.shelif [ &quot;$command_line&quot; = &quot;PBS&quot; ]; then    sed -i &quot;s|^#PBS -N|#PBS -N $md_duty_name|&quot; sub-md.shelse    echo &quot;Command line is not &#39;slurm&#39; or &#39;PBS. Run another command.&quot;ficd ..sed -i &quot;9s|.*|remote_work_place=$vasp_folder|&quot; iter_scheduling_remote.shsed -i &quot;s|^remote_ip=.*|remote_ip=$vasp_ip|&quot; iter_scheduling_remote.shsed -i &quot;s|^remote_port=.*|remote_port=$vasp_port|&quot; iter_scheduling_remote.shsed -i &quot;s|^task_sys=.*|task_sys=$command_line|&quot; iter_scheduling_remote.shsed -i &quot;s|^device.*|device          =   cuda:$GPU_number|&quot; inv2</code></pre><p>1-</p><pre><code class="python">import osimport sysimport timeimport scipy.stats as stimport numpy as npfrom sklearn.neighbors import KernelDensityfrom matplotlib import pyplotdef timer(func):    def wrapper(*args, **kwargs):        start_time = time.time()        result = func(*args, **kwargs)        end_time = time.time()        print(f&quot;Time elapsed: &#123;end_time - start_time:.4f&#125; seconds&quot;)        return result    return wrapperdef find_files(directory):    &quot;&quot;&quot;    递归查找一个目录下所有叫OUTCAR的文件，并返回这些文件的完整路径    &quot;&quot;&quot;    outcar_files = []  # 保存所有叫OUTCAR的文件的路径    for root, dirs, files in os.walk(directory):        for file in files:            if file == &quot;OUTCAR&quot;:                outcar_files.append(os.path.join(root, file))        for dir in dirs:            dir_outcar_files = find_files(os.path.join(root, dir))            outcar_files.extend(dir_outcar_files)        # 将子目录添加到 dirs 中，以便递归处理        dirs[:] = [d for d in dirs if os.path.isdir(os.path.join(root, d))]    outcar_files = list(set(outcar_files))    return outcar_files@timerdef read_vasp_xdatcar(file_path):    f = open(file=file_path)    f.readline()    f.readline()    lat = []    pos = []    # lattice    for _ in range(3):        lat.append(f.readline())    ele = f.readline()    npele = f.readline()    cnt = 0    tmp = None    while True:        line = f.readline()        if &quot;configuration&quot; in line:            cnt += 1            if tmp is not None:                pos.append(tmp)            tmp = []            continue        if not line:            pos.append(tmp)            break        tmp.append(line)    for conf_i in range(len(pos)):        for atom_i in range(len(pos[conf_i])):            pos[conf_i][atom_i] = pos[conf_i][atom_i].split()        pos[conf_i] = np.array(pos[conf_i]).astype(float)    ele = ele.split()    npele = npele.split()    npele = [int(i) for i in npele]    for i in range(len(lat)):        lat[i] = lat[i].split()    lat = np.array(lat).astype(float)    return cnt, ele, npele, lat, posdef topn(arr, n):    indices = np.argpartition(arr, -n)[-n:]    values = arr[indices]    sort_indices = np.argsort(values)[::-1]    return values[sort_indices], indices[sort_indices]def split_alp_num(string):    for i in range(len(string)):        if string[i].isdigit():            return [string[:i]], int(string[i:])def write2my(file_path, ene_i, lat_i, ele_i, coo_i, foc_i):    lat_i = lat_i.reshape(3, 3)    coo_i = coo_i.reshape(-1, 3)    foc_i = foc_i.reshape(-1, 3)    with open(file_path, &#39;w&#39;) as file:        file.write(f&quot;# total energy = &#123;ene_i&#125; eV\n\n&quot;)        file.write(&quot;CRYSTAL\n&quot;)        file.write(&quot;PRIMVEC\n&quot;)        for j in lat_i:            for k in j:                file.write(f&#39;&#123;k:20.8f&#125;&#39;)            file.write(&#39;\n&#39;)        file.write(&quot;PRIMCOORD\n&quot;)        file.write(f&quot;&#123;len(coo_i)&#125; 1\n&quot;)        for j in range(len(coo_i)):            file.write(f&#39;&#123;ele_i[j]:2&#125;&#39;)            # coo            for k in coo_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            # force            for k in foc_i[j]:                file.write(f&quot;&#123;k:20.8f&#125;&quot;)            file.write(&quot;\n&quot;)    passdef direct2pos(lat, pos, direction=True):    &quot;&quot;&quot;    lat = [[Ax, Ay, Az],           [Bx, By, Bz],           [Cx, Cy, Cz]]    Pos = [n, 3]    :return: direct = [n, 3]    if direction=True    &quot;&quot;&quot;    if direction:        return pos @ lat    else:        return pos @ np.linalg.inv(lat)class MyDistrib(st.rv_continuous):    def __init__(self, prdf):        super().__init__()        self.prdf = prdf    def _pdf(self, x, *args):        return self.prdf.evaluate(x)class RejectSamp:    def __init__(self, ocr_name: str):        self.ocr_name = ocr_name  # &#123;XDATCAR path: OUTCAR path&#125;        self.rng_min = 0        self.rng_max = None        self.rng_grid = 10000        self.rng = None        self.rng_intv = None        self.pdf = None        self.sum_intv = 10        self.envelope = None        self.samples = None        pass    def sampling(self, num):        nframe, natom, ele, ene, lat, pos, foc = self._anls_ocr()        print(nframe)        print(natom)        # print(ele)        print(ene.shape)        print(lat.shape)        print(pos.shape)        print(foc.shape)        self.rng_max = nframe        self.rng = np.linspace(self.rng_min, self.rng_max, self.rng_grid)        self.rng_intv = self.rng[1] - self.rng[0]        sd = np.sum((pos[1:] - pos[:-1]) ** 2, (1, 2))        nintv = sd.size // self.sum_intv        sum_sd = sd[:nintv * self.sum_intv].reshape(nintv, self.sum_intv).sum(1)        sum_sd_body = np.copy(sum_sd)        sum_sd_body[:sum_sd.size // 20] = sum_sd.min()        topn_val, topn_idx = topn(sum_sd_body, 100)        x_train = topn_idx * self.sum_intv        distrib = KernelDensity(kernel=&quot;gaussian&quot;, bandwidth=int(0.003 * nframe)).fit(x_train[..., None])        self.pdf = lambda x: np.exp(distrib.score_samples(np.reshape(x, [-1, 1])))        self.envelope = self.pdf(self.rng).max()        cnt = 0        iters = 0        res = np.array([])        while cnt &lt; num:            u = np.random.uniform(self.rng_min, self.rng_max, num - cnt)            y = np.random.uniform(0, self.envelope, num - cnt)            pd = self.pdf(u)            res = np.append(res, u[pd &gt; y])            res = res.astype(int)            res = np.unique(res)            cnt = len(res)            iters += 1            print(f&quot;&#123;iters:&lt;3&#125;&#123;cnt:6&#125;&quot;)        print(&quot;Total iters: &quot;, iters)        self.samples = res        return self.samples.size, natom, ele, ene[self.samples], \            lat[self.samples], pos[self.samples], foc[self.samples]    def plot(self):        fig, ax = pyplot.subplots(figsize=(10, 6))        ax.hist(self.samples, bins=int(self.samples.size / 8), density=True, alpha=0.5)        ax.plot(self.rng, self.pdf(self.rng), &#39;r-&#39;, lw=1)        ax.plot(self.samples, -0.01 * self.envelope - 0.03 * self.envelope * np.random.random(self.samples.size), &quot;+k&quot;)        ax.set_ylim(-self.envelope * 0.05)        ax.set_title(self.ocr_name + &quot;  PDF&quot;)        return fig    @timer    def _anls_ocr(self):        pos_foc = []        ene = []        lat = []        ions_per = []        types = []        print(self.ocr_name)        with open(self.ocr_name, &#39;r&#39;) as file:            while True:                line = file.readline()                # eof break                if not line:                    break                # ions per type                #if &quot;POSCAR&quot; in line:                #    ions_per.append(line)                #    continue                if &quot;ions per type&quot; in line:                    ions_per.append(line)                if &quot;VRHFIN&quot; in line:                    types.append(line)                # lat                if &quot;BASIS-vectors&quot; in line:                    file.readline()                    file.readline()                    file.readline()                    file.readline()                    for i in range(3):                        line = file.readline()                        lat.append(line)                    continue                # pos &amp; force                if &quot;TOTAL-FORCE (eV/Angst)&quot; in line:                    line = file.readline()                    while True:                        line = file.readline()                        if not line:                            break                        if &quot;------&quot; in line:                            break                        pos_foc.append(line)                    continue                # ene                if &quot;energy  without entropy&quot; in line:                    ene.append(line)        ene = np.array([i.split(&#39;=&#39;)[1].split()[0] for i in ene]).astype(np.float64)        # lat = np.array([i.split() for i in lat]).astype(np.float64)[:, :3].reshape(-1, 3, 3)        lat = np.array([[float(i[4:][:12]), float(i[4:][12:25]), float(i[4:][25:38])] for i in lat]).astype(np.float64)[:, :3].reshape(-1, 3, 3)        # ele pretreatment        types = [i.split(&#39;=&#39;)[1].split(&#39;:&#39;)[0].rstrip() for i in types]        ions_per = ions_per[0].split()[-4:]        ele = sum([[i] * int(j) for i, j in zip(types, ions_per)], [])        pos_foc = np.array([i.split() for i in pos_foc]).astype(np.float64)        nframe = len(ene)        natom = len(ele)        pos = pos_foc[:, :3][:nframe * natom].reshape(nframe, natom, 3)[:nframe]        foc = pos_foc[:, 3:][:nframe * natom].reshape(nframe, natom, 3)[:nframe]        lat = lat[:nframe]        return nframe, natom, ele, ene, lat, pos, focif __name__ == &#39;__main__&#39;:    # ocr_files = find_files(&quot;/data/ljx/third/lizhao/LYSO/LYSO-src/old&quot;)#训练结构路径    ocr_files = [&quot;./OUTCAR&quot;]    #ocr_files = [&quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/triple/1&quot;,    #             &quot;/work/home/liz/workspace/1-system-MD/3-K5YSi4O12/9-1-lammps/6-train-NNP/outcar/triple/2&quot;] #训练集输出路径      out_path = &quot;./&quot;    if not os.path.exists(out_path):        os.mkdir(out_path)    out_data_path = os.path.join(out_path, &quot;eval-set&quot;)    if not os.path.exists(out_data_path):        os.mkdir(out_data_path)#每个数据取多少点，大概相乘在10000附近    smp_per_ocr = 50    # mode = &#39;rand&#39;    mode = &#39;kde&#39;    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #    # Be careful when changing the code below    print(f&quot;total trajectories: &#123;len(ocr_files)&#125;&quot;)    if not os.path.exists(out_data_path):        os.mkdir(out_data_path)    xsf_tot_cnt = 0    if mode == &#39;kde&#39;:        for ocr_i in range(len(ocr_files)):            r = RejectSamp(ocr_files[ocr_i])            n_frame, n_atom, ele, ene, lat, pos, foc = r.sampling(smp_per_ocr)            fig = r.plot()            fig_path = os.path.join(out_path, str(ocr_i))            fig.savefig(fig_path)            for j in range(n_frame):                path_j = os.path.join(out_data_path, f&#39;structure&#123;str(smp_per_ocr * ocr_i + j).zfill(5)&#125;.xsf&#39;)                ene_j = ene[j]                lat_j = lat[j]                ele_j = ele                coo_j = pos[j]                foc_j = foc[j]                write2my(path_j, ene_j, lat_j, ele_j, coo_j, foc_j)                xsf_tot_cnt += 1</code></pre><p>2-</p><pre><code class="python"># convert VASP OUTCAT to lammps .data (atomic)## usage:# python &quot;this file&quot; OUTCAR.input data.output## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ###import numpy as npfrom sys import argvdef anls_poscar(file_name: str):    with open(file_name, &#39;r&#39;) as f:        lines = f.readlines()    bloom_factor = float(lines[1])    lat = np.array([i.split() for i in lines[2: 5]]).astype(float)    lat = bloom_factor * lat    ele_and_num = lines[5][:-1] + &quot;:&quot; + lines[6][:-1]    pos_d = None    if (lines[7][0] == &#39;d&#39;) or (lines[7][0] == &#39;D&#39;):        # direct coord.        pos_d = np.array([i.split() for i in lines[8:]]).astype(float)    elif (lines[7][0] == &#39;c&#39;) or (lines[7][0] == &#39;C&#39;):        # cartesian        pos_c = np.array([i.split() for i in lines[8:]]).astype(float)        pos_d = direct2pos(lat, pos_c, False)    return lat, pos_d, ele_and_numdef direct2pos(lat, pos, direction=True):    &quot;&quot;&quot;    lat = [[Ax, Ay, Az],           [Bx, By, Bz],           [Cx, Cy, Cz]]    Pos = [n, 3]    :return: if True:  return cart   = [n, 3]             if False: return direct = [n, 3]    &quot;&quot;&quot;    if direction:        return pos @ lat    else:        return pos @ np.linalg.inv(lat)def clip_ny_norm(x):    return x / np.linalg.norm(x)def cart2lams(lat):    &quot;&quot;&quot;    vasp (POSCAR) Coordinate System:    O = [[ax, ay, az],         [bx, by, bz],         [cx, cy, cz]]    :return:    lammps Coordinate System:    O&#39; = [[xhi - xlo,  0,  0],          [xy, yhi - ylo,  0],          [xz, yz, zhi - zlo]]    &quot;&quot;&quot;    ax = (lat[0] ** 2).sum() ** 0.5    a_hat = clip_ny_norm(lat[0])    bx = (lat[1] * a_hat).sum()    by = np.linalg.norm(np.cross(a_hat, lat[1]))    cx = (lat[2] * a_hat).sum()    cy = (lat[2] * np.cross(clip_ny_norm(np.cross(lat[0], lat[1])), a_hat)).sum()    cz = np.abs((lat[2] * clip_ny_norm(np.cross(lat[0], lat[1]))).sum())    new = np.array([        [ax, 0, 0],        [bx, by, 0],        [cx, cy, cz]    ])    return newdef write_lmp_atomic_data(filename, lmp_lat, pos_c, strr):    new_coo = pos_c    Z_of_type = strr.split(&#39;:&#39;)[0].split()    n_type = strr.split(&#39;:&#39;)[1].split()    new_ele = [[i] * int(n_type[i - 1]) for i in range(1, len(n_type) + 1)]    new_ele = sum(new_ele, [])    # write    with open(filename, &quot;w&quot;) as f:        f.writelines(&quot;%s (written by ARES-NNP)\n\n&quot; % str(filename + strr))        f.writelines(&quot;%i    atoms\n&quot; % len(new_coo))        f.writelines(&quot;%i    atom types\n&quot; % len(Z_of_type))        f.writelines(&quot;0.0    %.17f  xlo xhi\n&quot; % lmp_lat[0][0])        f.writelines(&quot;0.0    %.17f  ylo yhi\n&quot; % lmp_lat[1][1])        f.writelines(&quot;0.0    %.17f  zlo zhi\n&quot; % lmp_lat[2][2])        f.writelines(            &quot;    %18.12f    %18.12f    %18.12f  xy xz yz\n\n\n&quot; % (lmp_lat[1][0], lmp_lat[2][0], lmp_lat[2][1]))        f.writelines(&quot;Atoms\n\n&quot;)        index_list = np.arange(1, len(new_coo) + 1)        for i, ele, coo in zip(index_list, new_ele, new_coo):            f.writelines(&quot;&#123;0:&gt;6&#125; &#123;1:&gt;3&#125; &#123;2:20.12f&#125; &#123;3:20.12f&#125; &#123;4:20.12f&#125;\n&quot;.format(i, ele, coo[0], coo[1], coo[2]))if __name__ == &#39;__main__&#39;:    filename = argv[2]    lat, pos, strr = anls_poscar(argv[1])    crs_para = np.linalg.norm(lat, axis=1)    exg = np.argsort(crs_para)[::-1]    lat = lat[exg, :]    pos = pos[:, exg]    lmp_lat = cart2lams(lat)    inv = np.linalg.inv(lat) @ lmp_lat    pos_c = direct2pos(lat, pos, True) @ inv    write_lmp_atomic_data(filename, lmp_lat, pos_c, strr)</code></pre><p>3-</p><pre><code class="python"># 字典：元素对应的赝势文件路径base_pseudo_path = &quot;/public/lijx/work/Na-X-Si-O/pot-makepot/potpaw_PBE/&quot;pseudo_paths = &#123;    &#39;H&#39;: &#39;H/POTCAR&#39;,    &#39;Li&#39;: &#39;Li_sv/POTCAR&#39;,    &#39;Be&#39;: &#39;Be_sv/POTCAR&#39;,    &#39;B&#39;: &#39;B/POTCAR&#39;,    &#39;C&#39;: &#39;C/POTCAR&#39;,    &#39;N&#39;: &#39;N/POTCAR&#39;,    &#39;O&#39;: &#39;O/POTCAR&#39;,    &#39;F&#39;: &#39;F/POTCAR&#39;,    &#39;Ne&#39;: &#39;Ne/POTCAR&#39;,    &#39;Na&#39;: &#39;Na_pv/POTCAR&#39;,    &#39;Mg&#39;: &#39;Mg_pv/POTCAR&#39;,    &#39;Al&#39;: &#39;Al/POTCAR&#39;,    &#39;Si&#39;: &#39;Si/POTCAR&#39;,    &#39;P&#39;: &#39;P/POTCAR&#39;,    &#39;S&#39;: &#39;S/POTCAR&#39;,    &#39;Cl&#39;: &#39;Cl/POTCAR&#39;,    &#39;K&#39;: &#39;K_sv/POTCAR&#39;,    &#39;Ca&#39;: &#39;Ca_sv/POTCAR&#39;,    &#39;Sc&#39;: &#39;Sc_sv/POTCAR&#39;,    &#39;Ti&#39;: &#39;Ti_pv/POTCAR&#39;,    &#39;V&#39;: &#39;V_pv/POTCAR&#39;,    &#39;Cr&#39;: &#39;Cr_pv/POTCAR&#39;,    &#39;Mn&#39;: &#39;Mn_pv/POTCAR&#39;,    &#39;Fe&#39;: &#39;Fe_pv/POTCAR&#39;,    &#39;Co&#39;: &#39;Co/POTCAR&#39;,    &#39;Ni&#39;: &#39;Ni_pv/POTCAR&#39;,    &#39;Cu&#39;: &#39;Cu_pv/POTCAR&#39;,    &#39;Zn&#39;: &#39;Zn/POTCAR&#39;,    &#39;Ga&#39;: &#39;Ga_d/POTCAR&#39;,    &#39;Ge&#39;: &#39;Ge_d/POTCAR&#39;,    &#39;As&#39;: &#39;As/POTCAR&#39;,    &#39;Se&#39;: &#39;Se/POTCAR&#39;,    &#39;Br&#39;: &#39;Br/POTCAR&#39;,    &#39;Kr&#39;: &#39;Kr/POTCAR&#39;,    &#39;Rb&#39;: &#39;Rb_sv/POTCAR&#39;,    &#39;Sr&#39;: &#39;Sr_sv/POTCAR&#39;,    &#39;Y&#39;: &#39;Y_sv/POTCAR&#39;,    &#39;Zr&#39;: &#39;Zr_sv/POTCAR&#39;,    &#39;Nb&#39;: &#39;Nb_pv/POTCAR&#39;,    &#39;Mo&#39;: &#39;Mo_pv/POTCAR&#39;,    &#39;Tc&#39;: &#39;Tc_pv/POTCAR&#39;,    &#39;Ru&#39;: &#39;Ru_pv/POTCAR&#39;,    &#39;Rh&#39;: &#39;Rh_pv/POTCAR&#39;,    &#39;Pd&#39;: &#39;Pd/POTCAR&#39;,    &#39;Ag&#39;: &#39;Ag/POTCAR&#39;,    &#39;Cd&#39;: &#39;Cd/POTCAR&#39;,    &#39;In&#39;: &#39;In_d/POTCAR&#39;,    &#39;Sn&#39;: &#39;Sn_d/POTCAR&#39;,    &#39;Sb&#39;: &#39;Sb/POTCAR&#39;,    &#39;Te&#39;: &#39;Te/POTCAR&#39;,    &#39;I&#39;: &#39;I/POTCAR&#39;,    &#39;Xe&#39;: &#39;Xe/POTCAR&#39;,    &#39;Cs&#39;: &#39;Cs_sv/POTCAR&#39;,    &#39;Ba&#39;: &#39;Ba_sv/POTCAR&#39;,    &#39;La&#39;: &#39;La/POTCAR&#39;,    &#39;Ce&#39;: &#39;Ce_3/POTCAR&#39;,    &#39;Pr&#39;: &#39;Pr_3/POTCAR&#39;,    &#39;Nd&#39;: &#39;Nd_3/POTCAR&#39;,    &#39;Pm&#39;: &#39;Pm_3/POTCAR&#39;,    &#39;Sm&#39;: &#39;Sm_3/POTCAR&#39;,    &#39;Eu&#39;: &#39;Eu_3/POTCAR&#39;,    &#39;Gd&#39;: &#39;Gd_3/POTCAR&#39;,    &#39;Tb&#39;: &#39;Tb_3/POTCAR&#39;,    &#39;Dy&#39;: &#39;Dy_3/POTCAR&#39;,    &#39;Ho&#39;: &#39;Ho_3/POTCAR&#39;,    &#39;Er&#39;: &#39;Er_3/POTCAR&#39;,    &#39;Tm&#39;: &#39;Tm_3/POTCAR&#39;,    &#39;Yb&#39;: &#39;Yb_2/POTCAR&#39;,    &#39;Lu&#39;: &#39;Lu_3/POTCAR&#39;,    &#39;Hf&#39;: &#39;Hf_pv/POTCAR&#39;,    &#39;Ta&#39;: &#39;Ta_pv/POTCAR&#39;,    &#39;W&#39;: &#39;W_pv/POTCAR&#39;,    &#39;Re&#39;: &#39;Re_pv/POTCAR&#39;,    &#39;Os&#39;: &#39;Os_pv/POTCAR&#39;,    &#39;Ir&#39;: &#39;Ir/POTCAR&#39;,    &#39;Pt&#39;: &#39;Pt/POTCAR&#39;,    &#39;Au&#39;: &#39;Au/POTCAR&#39;,    &#39;Hg&#39;: &#39;Hg/POTCAR&#39;,    &#39;Tl&#39;: &#39;Tl_d/POTCAR&#39;,    &#39;Pb&#39;: &#39;Pb_d/POTCAR&#39;,    &#39;Bi&#39;: &#39;Bi/POTCAR&#39;,    &#39;Th&#39;: &#39;Th/POTCAR&#39;,    &#39;Pa&#39;: &#39;Pa/POTCAR&#39;,    &#39;U&#39;: &#39;U/POTCAR&#39;,    &#39;Np&#39;: &#39;Np/POTCAR&#39;,    &#39;Pu&#39;: &#39;Pu/POTCAR&#39;,# 添加其他元素和对应的赝势路径&#125;for element, relative_path in pseudo_paths.items():    full_path = f&quot;&#123;base_pseudo_path&#125;&#123;relative_path&#125;&quot;    pseudo_paths[element] = full_path# 读取 POSCAR 文件def read_poscar(poscar_path):      with open(poscar_path, &#39;r&#39;) as f:          lines = f.readlines()          elements = lines[5].split()        periodic_table_order = [&#39;H&#39;, &#39;He&#39;, &#39;Li&#39;, &#39;Be&#39;, &#39;B&#39;, &#39;C&#39;, &#39;N&#39;, &#39;O&#39;, &#39;F&#39;, &#39;Ne&#39;,&#39;Na&#39;, &#39;Mg&#39;, &#39;Al&#39;, &#39;Si&#39;, &#39;P&#39;, &#39;S&#39;, &#39;Cl&#39;, &#39;Ar&#39;,&#39;K&#39;,&#39;Ca&#39;, &#39;Sc&#39;, &#39;Ti&#39;, &#39;V&#39;, &#39;Cr&#39;, &#39;Mn&#39;, &#39;Fe&#39;, &#39;Co&#39;,&#39;Ni&#39;, &#39;Cu&#39;, &#39;Zn&#39;,&#39;Ga&#39;, &#39;Ge&#39;, &#39;As&#39;, &#39;Se&#39;, &#39;Br&#39;, &#39;Kr&#39;, &#39;Rb&#39;, &#39;Sr&#39;, &#39;Y&#39;, &#39;Zr&#39;, &#39;Nb&#39;,&#39;Mo&#39;, &#39;Tc&#39;, &#39;Ru&#39;, &#39;Rh&#39;, &#39;Pd&#39;, &#39;Ag&#39;, &#39;Cd&#39;, &#39;In&#39;, &#39;Sn&#39;, &#39;Sb&#39;, &#39;Te&#39;,&#39;I&#39;, &#39;Xe&#39;, &#39;Cs&#39;, &#39;Ba&#39;, &#39;La&#39;, &#39;Ce&#39;, &#39;Pr&#39;, &#39;Nd&#39;, &#39;Pm&#39;, &#39;Sm&#39;, &#39;Eu&#39;,&#39;Gd&#39;, &#39;Tb&#39;, &#39;Dy&#39;, &#39;Ho&#39;, &#39;Er&#39;, &#39;Tm&#39;, &#39;Yb&#39;, &#39;Lu&#39;, &#39;Hf&#39;, &#39;Ta&#39;, &#39;W&#39;,&#39;Re&#39;, &#39;Os&#39;, &#39;Ir&#39;, &#39;Pt&#39;, &#39;Au&#39;, &#39;Hg&#39;, &#39;Tl&#39;, &#39;Pb&#39;, &#39;Bi&#39;, &#39;Po&#39;,&#39;At&#39;,&#39;Rn&#39;,&#39;Fr&#39;,&#39;Ra&#39;,&#39;Ac&#39;,&#39;Th&#39;, &#39;Pa&#39;,&#39;U&#39;, &#39;Np&#39;, &#39;Pu&#39;, &#39;Am&#39;, &#39;Cm&#39;, &#39;Bk&#39;, &#39;Cf&#39;, &#39;Es&#39;, &#39;Fm&#39;, &#39;Md&#39;, &#39;No&#39;, &#39;Lr&#39;]        sorted_elements = sorted(elements, key=lambda x: periodic_table_order.index(x))        return sorted_elements# 创建大的 POTCAR 文件def create_big_potcar(elements, pseudo_paths, output_path):    with open(output_path, &#39;w&#39;) as f_out:        for element in elements:            if element in pseudo_paths:                pseudo_path = pseudo_paths[element]                with open(pseudo_path, &#39;r&#39;) as f_pseudo:                    f_out.write(f_pseudo.read())            else:                print(f&quot;赝势文件不存在或未定义：&#123;element&#125;&quot;)def copypot(elments,pseudo_paths):    import os     for element in elements:        output_path2 = &quot;POT-&quot;+element        if element in pseudo_paths:            pseudo_path = pseudo_paths[element]            with open(output_path2, &#39;w&#39;) as f_out:                with open(pseudo_path, &#39;r&#39;) as f_pseudo:                    f_out.write(f_pseudo.read())        else:            print(f&quot;赝势文件不存在或未定义：&#123;element&#125;&quot;)            if __name__ == &quot;__main__&quot;:    poscar_path = &quot;POSCAR&quot;  # 输入文件名    output_potcar_path = &quot;POTCAR&quot;  # 输出的大 POTCAR 文件名    elements = read_poscar(poscar_path)    create_big_potcar(elements, pseudo_paths, output_potcar_path)    copypot(elements,pseudo_paths)    print(&quot;大的 POTCAR 文件已创建&quot;)</code></pre><p>nohup .&#x2F;scheduling.sh &gt; log 2&gt;&amp;1 &amp;</p><h2 id="3-华为新版本"><a href="#3-华为新版本" class="headerlink" title="3. 华为新版本"></a>3. 华为新版本</h2><h4 id="1-变化"><a href="#1-变化" class="headerlink" title="1.变化"></a>1.变化</h4><p>增加了server.sh </p><p>改变了iter_scheduling_remote.sh 现在，这两个都不需要做改变可以直接复制</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231227085340259.png" alt="image-20231227085340259"></p><h4 id="2-技巧"><a href="#2-技巧" class="headerlink" title="2. 技巧"></a>2. 技巧</h4><h5 id="1-各个文件夹含义"><a href="#1-各个文件夹含义" class="headerlink" title="1.各个文件夹含义"></a>1.各个文件夹含义</h5><p>pre-select  :主动学习最后一步训练inv2里用的是train_dt，之前步用的看上去是pre-select，但实际上运行时用的也是train_dt</p><p>train_dt</p><p>非主动学习训练：只需要把主动学习inv2的restart改为false，不能删掉，记得更改inv2中cuda的编号，只申请了一张卡</p><p>如果一直训练出的只能跑几步，可以尝试修改select_thr      &#x3D;   2.0 为1.2</p><h2 id="4-主动学习能量、力误差"><a href="#4-主动学习能量、力误差" class="headerlink" title="4. 主动学习能量、力误差"></a>4. 主动学习能量、力误差</h2><blockquote><p>主动学习训练势过程中要求能量和力的误差不能太大，因此需要注意监控能量、力的误差</p></blockquote><p>存在的一种可能是，主动学习的能量和力误差太大，但是可以正常跑完主动学习的过程（如111胞 1ns)。这时候，由于主动学习的误差很大，因此不能认为跑出的1ns结果是合理的。</p><p>目前的版本中还不能设置在能量和力达到一个标准时自动停止，因此需要多注意能量和力</p><blockquote><p>提升训练精度的方法</p></blockquote><ul><li>学习率和训练圈数是重要的可设置的参数，通过增加训练圈数，可以有效地提高训练的精度（降低能量和力的误差）</li><li>清洗数据，可能存在某个误差值很大的结构，导致整体训练效果变差，把这个结构删除掉，能够有效降低误差</li></ul><p><img src="/./../../%E5%9B%BE%E7%89%87/19340802d41eb56259054c6d35d962b.png" alt="19340802d41eb56259054c6d35d962b"></p><h2 id="5-主动学习-minima-hopping"><a href="#5-主动学习-minima-hopping" class="headerlink" title="5. 主动学习+ minima_hopping"></a>5. 主动学习+ minima_hopping</h2><h3 id="1-minima-hopping使用方法"><a href="#1-minima-hopping使用方法" class="headerlink" title="1. minima_hopping使用方法"></a>1. minima_hopping使用方法</h3><p>minimaohopping是在ase中使用的一种采样算法，相比普通的md，采样更有效，这在华为机器<code>liz/2-Na-X-Si-O/2_NaXSiO_big_model/1_one_element/05_Sb_mini</code>  中得到了充分的验证。</p><p>使用minimahopping需改动的地方：</p><ul><li><code>resource/md</code> 文件夹中的data.nso 改为data.vasp，data.vasp的文件内容格式为POSCAR</li><li><code>resource/md</code> 文件夹中增加minima_hopping.py，用于进行minima_hopping模拟，可直接copy，需要修改脚本内的元素类型</li><li><code>resource/md</code>  文件夹中的sub-md.sh需要改变，从提交md变为提交mini</li><li><code>resource</code> 文件夹中的iter_scheduling_remote.sh 有一点改变，可直接copy</li></ul><p><code>sub-md.sh,iter_scheduling_remote.sh, mimima_hopping.py </code>可直接从华为机器<code>/liz/2-Na-X-Si-O/2_NaXSiO_big_model/1_one_element/05_Sb_mini/resource</code> 路径下复制到对应位置，minima_hopping.py需要修改元素类型</p><h1 id="6-经验总结"><a href="#6-经验总结" class="headerlink" title="6. 经验总结"></a>6. 经验总结</h1><h2 id="关于训练集"><a href="#关于训练集" class="headerlink" title="关于训练集"></a>关于训练集</h2><blockquote><ul><li>需要用高精度的第一性原理数据来进行势的训练</li><li>结构优化过程中的结构不能用来进行势的训练，因为计算的能量不准确</li><li>不同ENCUT和k点密度的结构不能用来训练同一个势</li></ul></blockquote><ol><li>升温过程 </li><li>增加压力点</li><li>NPT系综</li><li>meta-dynamics</li><li>minim</li><li>AIMD加大步长</li><li>添加拉伸剪切数据集</li></ol><h2 id="关于训练一个效果好的势"><a href="#关于训练一个效果好的势" class="headerlink" title="关于训练一个效果好的势"></a>关于训练一个效果好的势</h2><ol><li><strong>机器学习计算高温比低温更难，因此高温的数据集很重要</strong></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152709890.png" alt="image-20240814152709890"></p><ol start="2"><li><strong>训练圈数多的要好于少，尽管大小圈数的精度可能相同</strong></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152845687.png" alt="image-20240814152845687"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152857344.png" alt="image-20240814152857344"></p><ol start="3"><li><strong>高精度数据集比低精度好，高精度的数据集训练的势更好</strong></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152919374.png" alt="image-20240814152919374"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152928535.png" alt="image-20240814152928535"></p><ol start="4"><li><strong>主动学习的势要比普通训练更优</strong></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152528733.png" alt="image-20240814152528733"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814152459575.png" alt="image-20240814152459575"></p><ol start="5"><li><strong>如果不算压强，带不带力的计算结果变化并不大</strong></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814153029267.png" alt="image-20240814153029267"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240814153038885.png" alt="image-20240814153038885"></p><h2 id="关于训练势的误差"><a href="#关于训练势的误差" class="headerlink" title="关于训练势的误差"></a>关于训练势的误差</h2><p>1. </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240819104207502.png" alt="image-20240819104207502"></p><p>能量的误差不在线上是没问题的，因为机器学习框架中会加一个常数项，现在学习率还是太高，导致这个常数项比较高。通过<strong>降低学习率</strong>可以解决这个问题（手动降低或者训练足够长的时间自动降低）</p><ol start="2"><li>一个结构对应着1个能量，但是对应着3*原子数个力，所以一个结构的能量偏差大，对应的是许多个力的偏差大</li></ol><h1 id="7-代码理解"><a href="#7-代码理解" class="headerlink" title="7. 代码理解"></a>7. 代码理解</h1><p>Ap_*由sub-select根据现有的结构产生，和训练势过程和分子动力学过程无关。</p><p>主动学习和普通机器学习的区别</p><ul><li>训练势时是从上一个势开始训练，增加新的数据集，重置学习率等</li><li>跑分子动力学时in.lmp添加al，并且使用由select.sh生成的Ap_*,用来监控并终止分子动力学，产生oos</li></ul><p>sub-select.sh需要在GPU上跑，不然会报错</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240810162052521.png" alt="image-20240810162052521"></p><p>acnn -grade 用Ap_*产生某一个结构的grade，如果grade值高于某一个数，就可以加到oos中</p><p>主动学习停掉的情况</p><ol><li>grade值大于3且小于八累计了50个结构</li><li>grade值大于8</li></ol><h2 id="主动学习的两次select"><a href="#主动学习的两次select" class="headerlink" title="主动学习的两次select"></a>主动学习的两次select</h2><p>第一次是md过程中select不能判断的结构，第二次select是产生oos后对相似oos结构的一个去重，然后选择grade值相对大一些的结构（张开一个maxvol空间，选取边缘）</p><p>第一次是用现有的Ap_inv ，第二次是新产生一批Ap_inv   </p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>晶格振动</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%99%B6%E6%A0%BC%E6%8C%AF%E5%8A%A8/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%99%B6%E6%A0%BC%E6%8C%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-晶格振动和晶体热学性质"><a href="#1-晶格振动和晶体热学性质" class="headerlink" title="1.晶格振动和晶体热学性质"></a>1.晶格振动和晶体热学性质</h1><p><a href="https://zhuanlan.zhihu.com/p/206648238">黄昆的《固体物理学》的第五章：晶格振动和晶体热学性质 - 知乎 (zhihu.com)</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100521027.png" alt="image-20230529100521027"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100531454.png" alt="image-20230529100531454"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100544548.png" alt="image-20230529100544548"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100605166.png" alt="image-20230529100605166"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100618229.png" alt="image-20230529100618229"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100629669.png" alt="image-20230529100629669"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100641715.png" alt="image-20230529100641715"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100652763.png" alt="image-20230529100652763"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100703279.png" alt="image-20230529100703279"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100711059.png" alt="image-20230529100711059"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529100719044.png" alt="image-20230529100719044"></p><h1 id="2-简正坐标-声子"><a href="#2-简正坐标-声子" class="headerlink" title="2.简正坐标 声子"></a>2.简正坐标 声子</h1><p><a href="https://zhuanlan.zhihu.com/p/462245774">固体物理：2.3 谐振子能量 声子 - 知乎 (zhihu.com)</a></p><h2 id="1-广义坐标"><a href="#1-广义坐标" class="headerlink" title="1. 广义坐标"></a>1. 广义坐标</h2><p>​      1.   广义坐标就是在处理多物体的体系时，把整个体系看成一个物体，把多个物体（包括N自由度）的运动看成一个物体的不同部分在N维空间内的运动。但是区别于单个物体，一个体系物体内部的各部分的质量是不同的</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619193505887.png" alt="image-20230619193505887"></p><p> 对于一个物体的能量，也可以按照自由度拆分为各个分能量</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619193703700.png" alt="image-20230619193703700"></p><ol start="2"><li><p>原子链中格波的表达式</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619193855965.png" alt="image-20230619193855965"></p></li></ol><p>​          每个独立格波，都是一维单原子链的运动。体系的运动，就是多个格波的叠加</p><p>​           分运动的叠加是矢量叠加，需要给各个运动乘上对应方向的单位矢量</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194110896.png" alt="image-20230619194110896"></p><ol start="3"><li>什么是坐标系：坐标系只不过是一种描述方式，只要找到两两不平行的一组向量，就能作为坐标系</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194244393.png" alt="image-20230619194244393"></p><p>​                                 其中，$k&#x3D;m\frac{2\pi}{Na}, m&#x3D;1-N$ 对应N个独立格波</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194602615.png" alt="image-20230619194602615"></p><p>这样，可以把一个格波中所有原子的坐标改写为（把振动作为基本坐标）</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194755465.png" alt="image-20230619194755465"></p><p>也就是只沿着第一个方向有分量。看成是整个个体的振动</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194905667.png" alt="image-20230619194905667"></p><h2 id="2-声子"><a href="#2-声子" class="headerlink" title="2. 声子"></a>2. 声子</h2><p>&#x3D;&#x3D;引入简正坐标就是为了引入不同简正模式的叠加&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619194950360.png" alt="image-20230619194950360"></p><p>经典理论中，谐振子的能量包括动能和势能</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195025489.png" alt="image-20230619195025489"></p><p>量子力学中，谐振子的能量为</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195119335.png" alt="image-20230619195119335"></p><p>声子就是一个个的能量单元</p><h2 id="3-玻色爱因斯坦分布"><a href="#3-玻色爱因斯坦分布" class="headerlink" title="3. 玻色爱因斯坦分布"></a>3. 玻色爱因斯坦分布</h2><p>晶体中的振动总能就是所有独立格波能量的累加，原子坐标就看成n个简正坐标的叠加</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195401810.png" alt="image-20230619195401810"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195419417.png" alt="image-20230619195419417"></p><p>每个格波都对应着一定数量的声子</p><p>温度升高，所有格波的声子数都增加，温度下降，声子数减小，这也符合温度越大能量越高的判断</p><p>一个独立格波的平均能量就变成</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195549761.png" alt="image-20230619195549761"></p><p>T&#x3D;0 K时，声子树趋近于零，但是格波的能量不为零，存在零点能 <img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195651927.png" alt="image-20230619195651927"></p><p>当温度很高时</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195709149.png" alt="image-20230619195709149"></p><p>这个时候一个格波的能量和温度T成正比</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195742758.png" alt="image-20230619195742758"></p><p>可以用来解决热容得问题，三维单原子链中有3N个独立格波</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619195834864.png" alt="image-20230619195834864"></p><h1 id="3-态密度"><a href="#3-态密度" class="headerlink" title="3. 态密度"></a>3. 态密度</h1><p>独立格波的总数&#x3D;总的自由度数&#x3D;维数*原子数&#x3D;原胞数*维数*单个原胞内的原子个数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619200644243.png" alt="image-20230619200644243"></p><p>绘制一张图，横坐标是频率，纵坐标是对应的能量</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619200814442.png" alt="image-20230619200814442"></p><p>要计算总能，只需要对w积分，但是这里把无穷变为积分还需要打个补丁，考虑落在w-dw范围内的模式数是多少，也就是模式密度</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619200933075.png" alt="image-20230619200933075"></p><p>给模式密度积分，就能得到独立格波总数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619201218235.png" alt="image-20230619201218235"></p><p>g(w)横坐标是w，纵坐标是不同的模式数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619201342762.png" alt="image-20230619201342762"></p><p>g(w)的值有些地方密集，有些地方分散每一处的模式密度都不同。模式密度处处不同，但是模式对应的波矢是均匀分布的。</p><p>&#x3D;&#x3D;波矢空间的密度分布&#x3D;&#x3D;</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619201601839.png" alt="image-20230619201601839"></p><p>仿照g(w),可以定义一个单位波矢空间间隔内的振动模式数量，称为波矢密度</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619201740595.png" alt="image-20230619201740595"></p><p>可以得到p(k)是一个常数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619201941371.png" alt="image-20230619201941371"></p><p>联系两个式子</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202130428.png" alt="image-20230619202130428"></p><p>例如</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202200090.png" alt="image-20230619202200090"></p><p>下面可以计算格波的总能量</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202349749.png" alt="image-20230619202349749"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202409453.png" alt="image-20230619202409453"></p><p>色散关系很重要</p><h1 id="4-晶格热容"><a href="#4-晶格热容" class="headerlink" title="4. 晶格热容"></a>4. 晶格热容</h1><p>计算固体的热容，主要需要求声子的总能量。总能量等于各格波的能量叠加</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202604994.png" alt="image-20230619202604994"></p><p>确定态密度最关键的是知道色散关系</p><p>杜隆-波提 </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202930486.png" alt="image-20230619202930486"></p><p>爱因斯坦模型直接定义有3N个谐振子（考虑了分布，有温度的效应）</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619202848068.png" alt="image-20230619202848068"></p><p>德拜模型，考虑了线性的色散关系 w&#x3D;cK  （连续介质弹性波）</p><h1 id="5-固体物理-from-simon"><a href="#5-固体物理-from-simon" class="headerlink" title="5 固体物理 from simon"></a>5 固体物理 from simon</h1><ul><li>非简谐性质：非抛物线形状的势能曲线</li></ul><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240514150953237.png" alt="image-20240514150953237"></p><p>热膨胀：在温度升高时，x$<em>{max}$ 要大于x$</em>{min}$ ，导致原子间距离的平均值向右侧移动，晶格体积膨胀。平衡位置是能量最小值，但是不是原子振动的平均值（在小振动时由于是抛物线，所以相等，但是在高温下，不再是抛物线形状</p><p>&#x3D;&#x3D;热膨胀本身对应着非简谐性&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>处理分数占据结构</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E5%A4%84%E7%90%86%E5%88%86%E6%95%B0%E5%8D%A0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/%E5%A4%84%E7%90%86%E5%88%86%E6%95%B0%E5%8D%A0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-pymatgen检验相同结构"><a href="#1-pymatgen检验相同结构" class="headerlink" title="1.pymatgen检验相同结构"></a>1.pymatgen检验相同结构</h1><p>fcc、bcc等对应着特殊空间群里特定位置的占据</p><h2 id="1-一次性检验"><a href="#1-一次性检验" class="headerlink" title="1.一次性检验"></a>1.一次性检验</h2><pre><code class="python">import os from pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;./&#39;for i in range(1000):    filename = &quot;&#123;&#125;.vasp&quot;.format(i)    if not os.path.exists(os.path.join(dir,filename)):        continue    print(filename)    structure = Structure.from_file(filename)    structure.remove_species(&quot;O&quot;)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)</code></pre><h2 id="2-逐个检验"><a href="#2-逐个检验" class="headerlink" title="2.逐个检验"></a>2.逐个检验</h2><pre><code class="python">import numpy as npimport sys,os,timefrom pymatgen.core import Structurefrom pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()all_str = []for i in range(1,100000):    file = f&#39;&#123;i&#125;.vasp&#39;    if not os.path.exists(file):       continue    print(file)    strua = Structure.from_file(file)    match_found = False    for str in all_str:        if matcher.fit(strua,str):           match_found = True           break    if not match_found:        all_str.append(strua)        print(&#39;%d structures&#39; % len(all_str))from pymatgen.io.vasp.inputs import Poscarn = 0for strua in all_str:    Vasp_Str = Poscar(strua)    n +=1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)</code></pre><h2 id="3-检验两个结构"><a href="#3-检验两个结构" class="headerlink" title="3. 检验两个结构"></a>3. 检验两个结构</h2><pre><code class="python">import numpy as npimport sys,os,timefrom pymatgen.core import Structurefrom pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()aa = Structure.from_file(&#39;16.vasp&#39;)bb = Structure.from_file(&#39;4199.vasp&#39;)matcher.fit(aa,bb)</code></pre><h1 id="2-pymatgen-enumeration"><a href="#2-pymatgen-enumeration" class="headerlink" title="2. pymatgen-enumeration"></a>2. pymatgen-enumeration</h1><pre><code class="python">from pymatgen.core import Structurefrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerfrom pymatgen.transformations.advanced_transformations import EnumerateStructureTransformationfrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom pymatgen.analysis.bond_valence import BVAnalyzerstructure = Structure.from_file(&quot;a.cif&quot;)data = &#123;&quot;Na&quot;:1, &quot;Y&quot;:3, &quot;Si&quot;:4,&quot;O&quot;:-2,&quot;Al&quot;:3,&quot;K&quot;:1&#125;analyzer = SpacegroupAnalyzer(structure)prim_cell = analyzer.find_primitive()prim_cell.add_oxidation_state_by_element(data)#print(prim_cell)enum = EnumerateStructureTransformation()enumerated = enum.apply_transformation(prim_cell, 100)structures = [d[&quot;structure&quot;] for d in enumerated]print(&quot;%d structures returned.&quot; % len(structures))from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in structures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%d.vasp&#39;%n)#from pymatgen.io.cif import CifWriter#n = 0#for Cry_Str in structures:#    n = n + 1#    cif_filename = f&quot;&#123;n&#125;.cif&quot;#    cif_writer = CifWriter(Cry_Str)#    cif_writer.write_file(cif_filename)   #energy= [d[&quot;energy&quot;] for d in enumerated]#fl = open(&#39;energy.dat&#39;,&#39;w&#39;)#fl.writelines(str(energy))#data = &#123;&quot;K&quot;:1, &quot;O&quot;:-2, &quot;Fe&quot;:2,&quot;Ti&quot;:4.25,&quot;Mn&quot;:3.75&#125;#abc=[]#for i in range(1,101):#    m = Structure.from_file(&#39;%d.vasp&#39;%i)#    m.add_oxidation_state_by_element(data)#    energy = EwaldElectrostaticModel().get_energy(m)#    abc.append(energy)#f2 = open(&#39;energy2.dat&#39;,&#39;w&#39;)#f2.writelines(str(abc))with open(&#39;energy.dat&#39;, &#39;w&#39;) as f:    for item in abc:        f.write(str(item) + &#39;\n&#39;)#strcturelist2.sort(key = EwaldElectrostaticModel().get_energy)</code></pre><h1 id="3-pymatgen-orderdisorder"><a href="#3-pymatgen-orderdisorder" class="headerlink" title="3. pymatgen-orderdisorder"></a>3. pymatgen-orderdisorder</h1><pre><code class="python">import osfrom pymatgen.io.cif import CifParser, CifWriterfrom pymatgen.transformations.standard_transformations import SubstitutionTransformation, OrderDisorderedStructureTransformation, SupercellTransformationfrom pymatgen.core import Structurefrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerfrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom pymatgen.transformations.advanced_transformations import EnumerateStructureTransformationfrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstructure = Structure.from_file(&quot;a.cif&quot;)data = &#123;&quot;Ni&quot;:2, &quot;Co&quot;:3, &quot;S&quot;:-2,&quot;Se&quot;:-2&#125;analyzer = SpacegroupAnalyzer(structure)prim_cell = analyzer.find_primitive()prim_cell.add_oxidation_state_by_element(data)print(prim_cell)order = OrderDisorderedStructureTransformation()standard_structures=order.apply_transformation(prim_cell,return_ranked_list=1000)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d[&quot;structure&quot;] for d in standard_structures]) #这应该是个字典，把字典中的structure关键字提出来组&gt;成列表,groups里只剩下结构了#structures = [d[&quot;structure&quot;] for d in standard_structures]#print(&quot;%d structures returned.&quot; % len(structures))#from pymatgen.io.vasp.inputs import Poscar#n = 0#for Cry_Str in structures:    #print(Cry_Str)#    Vasp_Str = Poscar(Cry_Str)#    n = n+1#    Vasp_Str.write_file(&#39;%d.vasp&#39;%n)groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%d.vasp&#39;%n)#产生等差数列 for i in range(len(groups))#提取出列举时计算的能量 energy = [x(&#39;energy&#39;) for x in standard_structures]#验证同一类群下的结构静电能相等#suoyoua = [x for x in groups[0]]#for cry in suoyoua:#   energy = EwaldElectrostaticModel().get_energy(cry)#  print(energy)#验证输出的顺序是按照能量升序进行的#suoyou1 = [x[0] for x in groups]#for cry in suoyou1:#    energy = EwaldElectrostaticModel().get_energy(cry)#    print(energy)</code></pre><h1 id="4-计算静电能"><a href="#4-计算静电能" class="headerlink" title="4.计算静电能"></a>4.计算静电能</h1><pre><code class="python">import osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.inputs import Poscarfrom pymatgen.analysis.energy_models import EwaldElectrostaticModelabc=[]data = &#123;&quot;Ca&quot;:-6, &quot;H&quot;:1&#125;for i in range(1,5034):    m = Structure.from_file(&#39;%d.vasp&#39;%i)    m.add_oxidation_state_by_element(data)    energy = EwaldElectrostaticModel().get_energy(m)    abc.append(energy)with open(&#39;energy.dat&#39;, &#39;w&#39;) as f:    for item in abc:        f.write(str(item) + &#39;\n&#39;)    </code></pre><h1 id="5-sqs"><a href="#5-sqs" class="headerlink" title="5. sqs"></a>5. sqs</h1><h2 id="1-前处理"><a href="#1-前处理" class="headerlink" title="1.前处理"></a>1.前处理</h2><h3 id="1-转换rndstr格式的结构"><a href="#1-转换rndstr格式的结构" class="headerlink" title="1. 转换rndstr格式的结构"></a><strong>1. 转换rndstr格式的结构</strong></h3><pre><code class="python">from pymatgen.core import Structurestructure = Structure.from_file(&quot;a.cif&quot;)structure.to(filename=&#39;rndstr.in&#39;)</code></pre><h3 id="2-提交多个ip的任务"><a href="#2-提交多个ip的任务" class="headerlink" title="2.提交多个ip的任务"></a><strong>2.提交多个ip的任务</strong></h3><pre><code class="shell">for i in $(seq 1 1 20)docat &gt; sqs_$i.slurm &lt;&lt; liz#!/bin/sh#SBATCH -J analyze#SBATCH -p xieyu#SBATCH -N 1#SBATCH -n 1#SBATCH -w c0406source activate lizmcsqs -n=36 -ip=$ilizsbatch sqs_$i.slurmdone#grep Objective_function bestcorr*.out|sort -n</code></pre><h2 id="2-后处理"><a href="#2-后处理" class="headerlink" title="2. 后处理"></a>2. 后处理</h2><h3 id="1-提取bestcorr"><a href="#1-提取bestcorr" class="headerlink" title="1. 提取bestcorr"></a><strong>1. 提取bestcorr</strong></h3><pre><code class="shell">for i in $(seq 1 1 12)dotail -n 1 bestcorr.out &gt;&gt; corr.datdone</code></pre><h3 id="2-对多任务ip产生的best-out文件处理"><a href="#2-对多任务ip产生的best-out文件处理" class="headerlink" title="2.对多任务ip产生的best.out文件处理"></a><strong>2.对多任务ip产生的best.out文件处理</strong></h3><p>&#x3D;&#x3D;<strong>注意，数字前的空格会对结构在vesta中的显示产生影响</strong>&#x3D;&#x3D; </p><blockquote><p><strong>sqs2poscar文件在 同步空间&#x2F;计算脚本&#x2F;sqs处</strong></p></blockquote><pre><code class="shell">for i in $(seq 1 1 12)do ./sqs2poscar bestsqs$i.outmv bestsqs$i.out-POSCAR $i.vaspsed -i &#39;2s/.*/1/&#39; $i.vaspsed -i &#39;3s/-10\.57524/ -10.57524/&#39; $i.vaspdone </code></pre><h3 id="3-检验相同的结构"><a href="#3-检验相同的结构" class="headerlink" title="3. 检验相同的结构"></a><strong>3. 检验相同的结构</strong></h3><pre><code class="python">import osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []for i in range(1,13):    filename = &quot;&#123;&#125;.vasp&quot;.format(i)    print(filename)    structure = Structure.from_file(filename)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])  #这应该是个字典，把字典中的structure关键字提出来组成列表,groups里只剩下结构了#structures = [d[&quot;structure&quot;] for d in standard_structures]#print(&quot;%d structures returned.&quot; % len(structures))#from pymatgen.io.vasp.inputs import Poscar#n = 0#for Cry_Str in structures:    #print(Cry_Str)#    Vasp_Str = Poscar(Cry_Str)#    n = n+1#    Vasp_Str.write_file(&#39;%d.vasp&#39;%n)print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)#产生等差数列 for i in range(len(groups))#提取出列举时计算的能量 energy = [x(&#39;energy&#39;) for x in standard_structures]#验证同一类群下的结构静电能相等#suoyoua = [x for x in groups[0]]#for cry in suoyoua:#   energy = EwaldElectrostaticModel().get_energy(cry)#  print(energy)#验证输出的顺序是按照能量升序进行的#suoyou1 = [x[0] for x in groups]#for cry in suoyou1:#    energy = EwaldElectrostaticModel().get_energy(cry)#    print(energy)</code></pre><h1 id="6-暴力枚举"><a href="#6-暴力枚举" class="headerlink" title="6.暴力枚举"></a>6.暴力枚举</h1><h2 id="1-枚举脚本"><a href="#1-枚举脚本" class="headerlink" title="1.枚举脚本"></a>1.枚举脚本</h2><p>在替换多种元素时，可以只替换一种元素，然后在生成的poscar中直接修改元素种类和个数</p><pre><code class="python">#!/usr/bin/python2#Change the format of crystal structure#python Str_Format.py infile outfiletry:    from pymatgen.core.structure          import IStructure, Structure    from pymatgen.io.vasp.inputs          import Poscarexcept:    print (&#39;You should install pymatgen first.&#39;)    exit(0)from monty.io import zopenimport randomimport sys,os,timeimport numpy as npdef readvasp(infile):    with zopen(infile, &quot;rt&quot;) as f:        contents = f.read()    Cry_Str = IStructure.from_str(contents, fmt=&quot;poscar&quot;)    lattice = Cry_Str.lattice    species = [ x.species.elements[0] for x in Cry_Str.sites ]    coords  = [ x.coords for x in Cry_Str.sites ]    Cry_Str = Structure(lattice,species,coords,coords_are_cartesian=True)    return Cry_Strdef replace(Cry_Str, replace_list, outfile):    natom = len(Cry_Str.sites)    for ele in replace_list:        for i in ele[0]:            Cry_Str.replace(i,ele[1])    Cry_Str.sort()    Vasp_Str = Poscar(Cry_Str)    Vasp_Str.write_file(outfile)    returnif __name__ == &#39;__main__&#39;:    instr = &#39;a.vasp&#39;    Cry_Str = readvasp(instr)    #modify    Cry_Str.make_supercell([1,1,1])    for i in range(10):        Cry_tp = Cry_Str.copy()        re_index = np.arange(28,82)        np.random.shuffle(re_index)        re_index1 = re_index[:3]        re_index2 = re_index[7:9]        replace_list = [ [re_index1, &#39;B&#39;],[re_index2,&#39;O&#39;] ]        tmp = &#39;%d.vasp&#39;%i        replace(Cry_tp, replace_list, tmp)</code></pre><h2 id="2-多任务脚本-检验相同结构"><a href="#2-多任务脚本-检验相同结构" class="headerlink" title="2. 多任务脚本 检验相同结构"></a>2. 多任务脚本 检验相同结构</h2><pre><code class="shell">for i in $(seq 0 1000 25000)do cat &gt; job_$i.sh &lt;&lt; liz#!/bin/sh#SBATCH -J liz#SBATCH -p xieyu#SBATCH -N 1#SBATCH -n 1#SBATCH -w c0607source activate lizpython jianyan_$i.pylizcat &gt; jianyan_$i.py &lt;&lt; lizimport osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;/work/home/liz/workspace/D-LuNH-sqs/2-Lu-25电子/1-暴力破解/3-zuhe&#39;for i in range($i,$((i+1000))):    filename = &quot;&#123;&#125;.vasp&quot;.format(i)    if not os.path.exists(os.path.join(dir,filename)):        continue    print(filename)    structure = Structure.from_file(filename)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = $ifor Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)lizsbatch job_$i.shdone</code></pre><h2 id="3-改良版"><a href="#3-改良版" class="headerlink" title="3.改良版"></a>3.改良版</h2><h3 id="1-限定最小距离"><a href="#1-限定最小距离" class="headerlink" title="1.限定最小距离"></a>1.限定最小距离</h3><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurestrua = Structure.from_file(&quot;a.vasp&quot;)#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#a_frac_coords=strua.sites[re_index1[0]].frac_coords#b_frac_coords=strua.sites[re_index1[1]].frac_coords#c_frac_coords=strua.sites[re_index1[2]].frac_coords#arr1=a_frac_coords-b_frac_coords#arr1[arr1 &gt;= 0.5] = 1#arr1[arr1 &lt;= -0.5] = -1#arr1[np.logical_and(arr1 &gt; -0.5, arr1 &lt; 0.5)] = 0#print(arr1)#strua.sites[re_index1[1]].frac_coords +=arr1#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#diff1=np.sqrt(np.dot(strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords,strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords))#if diff1&lt;3#print(strua.sites[re_index1[1]].frac_coords)#h2=a_frac_coords-c_frac_coords#h3=b_frac_coords-c_frac_coords#lattice = strua.lattice#lattice_matrix =np.array(lattice.matrix)#coords  = [ x.coords for x in strua.sites ]#矩阵乘法 np.dot(A,B)#矩阵改变维数 A.reshape(1,3)#sites从0开始#np.dot(a,a)求平方和#strua.sites[0].coords 输出笛卡尔坐标 .frac_coords分数坐标#print(np.sqrt(np.dot(strua.sites[70].coords-strua.sites[71].coords,strua.sites[70].coords-strua.sites[71].coords)))#求两个原子的距离for i in range(20):    Cry_tp = strua.copy()    re_index = np.arange(27,82)    np.random.shuffle(re_index)    re_index1 = re_index[:3]    replace_list = [ [re_index1, &#39;N&#39;] ]    if Cry_tp.get_distance(re_index1[0],re_index1[1])&lt;3.6 or Cry_tp.get_distance(re_index1[0],re_index1[2])&lt;3.6 or Cry_tp.get_distance(re_index1[1],re_index1[2])&lt;3.6:        continue    for ele in replace_list:        for j in ele[0]:            Cry_tp.replace(j,ele[1])    Cry_tp.sort()    Vasp_Str = Poscar(Cry_tp)    Vasp_Str.write_file(&#39;%d.vasp&#39;%i)</code></pre><h3 id="2-限定最小距离且保证替代发生在不同的位置"><a href="#2-限定最小距离且保证替代发生在不同的位置" class="headerlink" title="2.限定最小距离且保证替代发生在不同的位置"></a>2.限定最小距离且保证替代发生在不同的位置</h3><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurestrua = Structure.from_file(&quot;a.vasp&quot;)#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#a_frac_coords=strua.sites[re_index1[0]].frac_coords#b_frac_coords=strua.sites[re_index1[1]].frac_coords#c_frac_coords=strua.sites[re_index1[2]].frac_coords#arr1=a_frac_coords-b_frac_coords#arr1[arr1 &gt;= 0.5] = 1#arr1[arr1 &lt;= -0.5] = -1#arr1[np.logical_and(arr1 &gt; -0.5, arr1 &lt; 0.5)] = 0#print(arr1)#strua.sites[re_index1[1]].frac_coords +=arr1#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#diff1=np.sqrt(np.dot(strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords,strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords))#if diff1&lt;3#print(strua.sites[re_index1[1]].frac_coords)#h2=a_frac_coords-c_frac_coords#h3=b_frac_coords-c_frac_coords#lattice = strua.lattice#lattice_matrix =np.array(lattice.matrix)#coords  = [ x.coords for x in strua.sites ]#矩阵乘法 np.dot(A,B)#矩阵改变维数 A.reshape(1,3)#sites从0开始#np.dot(a,a)求平方和#strua.sites[0].coords 输出笛卡尔坐标 .frac_coords分数坐标#print(np.sqrt(np.dot(strua.sites[70].coords-strua.sites[71].coords,strua.sites[70].coords-strua.sites[71].coords)))#求两个原子的距离for i in range(20):    Cry_tp = strua.copy()    re_index = np.arange(27,108)    np.random.shuffle(re_index)    re_index1 = re_index[:3]    if all(27&lt;= num &lt;=53 for num in re_index1):        continue    if all(54&lt;= num &lt;=107 for num in re_index1):        continue    replace_list = [ [re_index1, &#39;N&#39;] ]    if Cry_tp.get_distance(re_index1[0],re_index1[1])&lt;3.6 or Cry_tp.get_distance(re_index1[0],re_index1[2])&lt;3.6 or Cry_tp.get_distance(re_index1[1],re_index1[2])&lt;3.6:        continue    for ele in replace_list:        for j in ele[0]:            Cry_tp.replace(j,ele[1])    Cry_tp.sort()    Vasp_Str = Poscar(Cry_tp)    Vasp_Str.write_file(&#39;%d.vasp&#39;%i)</code></pre><h3 id="3-限定空间群"><a href="#3-限定空间群" class="headerlink" title="3.限定空间群"></a>3.限定空间群</h3><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerfrom pymatgen.analysis.structure_matcher import StructureMatcherstrua = Structure.from_file(&quot;a.vasp&quot;)#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#a_frac_coords=strua.sites[re_index1[0]].frac_coords#b_frac_coords=strua.sites[re_index1[1]].frac_coords#c_frac_coords=strua.sites[re_index1[2]].frac_coords#arr1=a_frac_coords-b_frac_coords#arr1[arr1 &gt;= 0.5] = 1#arr1[arr1 &lt;= -0.5] = -1#arr1[np.logical_and(arr1 &gt; -0.5, arr1 &lt; 0.5)] = 0#print(arr1)#strua.sites[re_index1[1]].frac_coords +=arr1#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#diff1=np.sqrt(np.dot(strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords,strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords))#if diff1&lt;3#print(strua.sites[re_index1[1]].frac_coords)#h2=a_frac_coords-c_frac_coords#h3=b_frac_coords-c_frac_coords#lattice = strua.lattice#lattice_matrix =np.array(lattice.matrix)#coords  = [ x.coords for x in strua.sites ]#矩阵乘法 np.dot(A,B)#矩阵改变维数 A.reshape(1,3)#sites从0开始#np.dot(a,a)求平方和#strua.sites[0].coords 输出笛卡尔坐标 .frac_coords分数坐标#print(np.sqrt(np.dot(strua.sites[70].coords-strua.sites[71].coords,strua.sites[70].coords-strua.sites[71].coords)))#求两个原子的距离total_structure=[]for i in range(200000):    Cry_tp = strua.copy()    re_index = np.arange(0,96)    np.random.shuffle(re_index)    re_index1 = re_index[:4]    Cry_tp.remove_sites(re_index1)    a=SpacegroupAnalyzer(Cry_tp).get_space_group_number()    if a&lt;= 140:      continue    print(i)    print(a)    Vasp_Str = Poscar(Cry_tp)    Vasp_Str.write_file(&#39;%d.vasp&#39;%i)    total_structure.append(Cry_tp)matcher = StructureMatcher()groups = matcher.group_structures([d for d in total_structure])groupstructures = [x[0] for x in groups]from pymatgen.io.vasp.inputs import Poscarn = 10001for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)</code></pre><h3 id="4-多任务做改良版"><a href="#4-多任务做改良版" class="headerlink" title="4.多任务做改良版"></a>4.多任务做改良版</h3><pre><code class="shell">for i in $(seq 1 100 10100)docat &gt; baoli_$i.py &lt;&lt; lizfrom pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerfrom pymatgen.analysis.structure_matcher import StructureMatcherstrua = Structure.from_file(&quot;a.vasp&quot;)#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#a_frac_coords=strua.sites[re_index1[0]].frac_coords#b_frac_coords=strua.sites[re_index1[1]].frac_coords#c_frac_coords=strua.sites[re_index1[2]].frac_coords#arr1=a_frac_coords-b_frac_coords#arr1[arr1 &gt;= 0.5] = 1#arr1[arr1 &lt;= -0.5] = -1#arr1[np.logical_and(arr1 &gt; -0.5, arr1 &lt; 0.5)] = 0#print(arr1)#strua.sites[re_index1[1]].frac_coords +=arr1#print(strua.sites[re_index1[1]])#print(strua.get_distance(re_index1[0],re_index1[1]))#diff1=np.sqrt(np.dot(strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords,strua.sites[re_index1[0]].coords-strua.sites[re_index1[1]].coords))#if diff1&lt;3#print(strua.sites[re_index1[1]].frac_coords)#h2=a_frac_coords-c_frac_coords#h3=b_frac_coords-c_frac_coords#lattice = strua.lattice#lattice_matrix =np.array(lattice.matrix)#coords  = [ x.coords for x in strua.sites ]#矩阵乘法 np.dot(A,B)#矩阵改变维数 A.reshape(1,3)#sites从0开始#np.dot(a,a)求平方和#strua.sites[0].coords 输出笛卡尔坐标 .frac_coords分数坐标#print(np.sqrt(np.dot(strua.sites[70].coords-strua.sites[71].coords,strua.sites[70].coords-strua.sites[71].coords)))#求两个原子的距离total_structure=[]for i in range(20000):    Cry_tp = strua.copy()    re_index = np.arange(0,96)    np.random.shuffle(re_index)    re_index1 = re_index[:4]    Cry_tp.remove_sites(re_index2)    a=SpacegroupAnalyzer(Cry_tp).get_space_group_number()    if a&lt;= 140:      continue    print(i)    print(a)    Vasp_Str = Poscar(Cry_tp)    Vasp_Str.write_file(&#39;%d.vasp&#39;%i)    total_structure.append(Cry_tp)matcher = StructureMatcher()groups = matcher.group_structures([d for d in total_structure])groupstructures = [x[0] for x in groups]from pymatgen.io.vasp.inputs import Poscarn = $((i))for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)lizdone</code></pre><h2 id="4-使用枚举方法处理蓝钻结构"><a href="#4-使用枚举方法处理蓝钻结构" class="headerlink" title="4.使用枚举方法处理蓝钻结构"></a>4.使用枚举方法处理蓝钻结构</h2><blockquote><ol><li>这是第一次系统使用暴力枚举法产生结构，其中，由于pymatgen用于计算ewald加和的程序太慢，使用了组内ARES中用于计算ewald能量的脚本ewalds.x</li><li>一共有两种方式产生，一种是完全随机的，另一种相当于对整个分子的替代（使用了pymatgen中找原子附近其他原子的功能</li><li>脚本、流程都经过了反复的改进</li></ol></blockquote><h3 id="1-完全随机的方法（完全解放双手了）"><a href="#1-完全随机的方法（完全解放双手了）" class="headerlink" title="1.完全随机的方法（完全解放双手了）"></a>1.完全随机的方法（完全解放双手了）</h3><blockquote><ol><li>一共需要四个文件</li></ol><p>a.vasp </p><p>multitask.sh</p><p>ewalds.x </p><p>changeatom.py:用于产生随机的结构</p><p>以及一个后处理文件</p><p>get-all.sh</p><p>2.分为三级别目录</p><p>一级： 1-21</p><p>二级： 1-48</p><p>三级： 1-random  2-low ；其中 1-random是随机产生的结构，并计算了静电能，2-low是能量最低的前30个结构以及对应的能量</p><ol start="3"><li>通过设置不同的价态，可以得到不同种原子靠近或者远离的结构</li></ol></blockquote><p>流程(产生1000万个随机结构）：</p><h4 id="1-提任务"><a href="#1-提任务" class="headerlink" title="1. 提任务"></a>1. 提任务</h4><p><code>for i in $(seq 1 1 10);do mkdir $i;cp a.vasp ewalds.x multitask.sh changeatom.py $i;cd $i; ./multitask.sh ;cd ..;done</code></p><h4 id="2-changeatom-py"><a href="#2-changeatom-py" class="headerlink" title="2. changeatom.py"></a>2. <code>changeatom.py</code></h4><p>需要更改的地方是产生结构的数量、以及替换的种类和位置</p><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelstrua = Structure.from_file(&quot;a.vasp&quot;)#需要考虑for i in range(10000):    print(i)    Cry_tp = strua.copy()    re_index = np.arange(0,512)    np.random.shuffle(re_index)    re_index1 = re_index[:7]    re_index2 = re_index[7:9]    replace_list = [ [re_index1, &#39;B&#39;],[re_index2,&#39;O&#39;] ]    for ele in replace_list:        for j in ele[0]:            Cry_tp.replace(j,ele[1])    Cry_tp.sort()    Vasp_Str = Poscar(Cry_tp)    Vasp_Str.write_file(&#39;%d.vasp&#39;%i)</code></pre><h4 id="3-multitask-sh-做一些文件夹-，提交产生结构的任务，提交计算ewald能量的任务"><a href="#3-multitask-sh-做一些文件夹-，提交产生结构的任务，提交计算ewald能量的任务" class="headerlink" title="3. multitask.sh :做一些文件夹 ，提交产生结构的任务，提交计算ewald能量的任务"></a>3. <code>multitask.sh</code> :做一些文件夹 ，提交产生结构的任务，提交计算ewald能量的任务</h4><p>需要注意的是，使用ewalds.x需要先source环境</p><pre><code class="shell">for i in $(seq 1 1 48)domkdir $icd $imkdir 1-random 2-lowcd ..cp changeatom.py $i/1-randomcp ewalds.x $i/1-randomcp a.vasp $i/1-randomcd $i/1-randomcat &gt; job.slurm &lt;&lt; liz#!/bin/sh#SBATCH  --job-name=opt #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyu#SBATCH  --nodes=1#SBATCH  --ntasks=1#SBATCH  --cpus-per-task=1source activate lizpython changeatom.py &gt; log 2&gt;&amp;1lizsbatch job.slurmcd ..cd ..donesleep 1mfor i in $(seq 1 1 48)docd $i/1-randomcat &gt; ewaldenergy.slurm &lt;&lt;liz2#!/bin/sh#SBATCH  --job-name=opt #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyu#SBATCH  --nodes=1#SBATCH  --ntasks=1#SBATCH  --cpus-per-task=1source /work/env/intel2020for j in \$(seq 0 1 9999);doecho -n \$j.vasp &gt;&gt; energy.dat./ewalds.x \$j.vasp 3 5 -2 &gt;&gt; energy.datdonesort -k3n energy.dat &gt; ewaldenergy.dathead -n 30 ewaldenergy.dat &gt; ../2-low/ewaldenergy.dathead -n 30 ewaldenergy.dat | awk &#39;&#123;print \$1&#125;&#39; | while read -r line; docp &quot;\$line&quot; ../2-low/doneliz2sbatch ewaldenergy.slurmcd ..cd ..done</code></pre><h4 id="4-后处理文件-get-all-sh-提取能量最低的结构"><a href="#4-后处理文件-get-all-sh-提取能量最低的结构" class="headerlink" title="4. 后处理文件 get-all.sh   提取能量最低的结构"></a>4. 后处理文件 <code>get-all.sh </code>  提取能量最低的结构</h4><pre><code class="shell">rm all-sorted.datfor i in $(seq 1 1 21)docd $ifor j in $(seq 1 1 48)docd $jcd 2-low#awk -v var=&quot;$j&quot; &#39;&#123; $1 = var &quot; &quot; $1 &#125; 1&#39; ewaldenergy.dat &gt; data.datawk -v var=&quot;$i&quot; -v var2=&quot;$j&quot; &#39;&#123; $1 = var &quot; &quot;  var2 &quot; &quot; $1 &#125; 1&#39; ewaldenergy.dat &gt; data.datcat data.dat &gt;&gt; ../../data.datrm data.datcd ..cd ..donecd ..donefor h in $(seq 1 1 21)docat $h/data.dat &gt;&gt; ./all.datrm $h/data.datdonesort -k5n all.dat  &gt; all-sorted.datrm all.datecho &#39;sucess1&#39;# 设置计数器count=1rm -r allmkdir all# 读取包含三列信息的文件head -n 100 all-sorted.dat | while read -r line; do  # 提取大目录、小目录和文件名  directory=$(echo &quot;$line&quot; | awk &#39;&#123;print $1&#125;&#39;)  subdirectory=$(echo &quot;$line&quot; | awk &#39;&#123;print $2&#125;&#39;)  filename=$(echo &quot;$line&quot; | awk &#39;&#123;print $3&#125;&#39;)  # 构建目标文件名  target_filename=&quot;$&#123;count&#125;_$&#123;directory&#125;_$&#123;subdirectory&#125;_$&#123;filename&#125;.vasp&quot;  # 复制文件到当前目录并重命名  cp &quot;$&#123;directory&#125;/$&#123;subdirectory&#125;/2-low/$&#123;filename&#125;&quot; &quot;./all/$&#123;target_filename&#125;&quot;  # 增加计数器  ((count++))doneecho &#39;sucess2&#39;</code></pre><h3 id="2-替换为B-3O和B-4O构型的方法（还需要手动做一些流程）"><a href="#2-替换为B-3O和B-4O构型的方法（还需要手动做一些流程）" class="headerlink" title="2. 替换为B_3O和B_4O构型的方法（还需要手动做一些流程）"></a>2. 替换为B_3O和B_4O构型的方法（还需要手动做一些流程）</h3><blockquote><ol><li>替换为特定构型的方法利用了pymatgen中寻找相邻原子的方法，基本的流程是</li></ol><p>  先随机找两个可能替换氧原子的位置</p><p>  检验氧原子的距离是否符合要求（在本例中设定两个氧原子不要靠的太近，以免产生O-B-O键</p><p>  查找两个位置附近的原子的位置</p><p>  替换附近原子为B</p><p>  检验相同结构</p><p>  计算静电能</p><ol start="2"><li>另一套流程是：(下文的流程)</li></ol><p>  先随机替换氧的位置</p><p>  检验氧原子距离</p><p>  检验氧的相同结构</p><p>  替换B</p><p>  检验相同结构</p><p>  计算静电能</p><p>  这样流程的好处是可以大大减少产生结构的数量，缺点是不能把算能量的步骤集成</p><ol start="3"><li>值得注意的一点是，在这次的产生结构的脚本中，是可以枚举O的所有可能情况的，所以最终结果是枚举的</li></ol></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612211658194.png" alt="image-20230612211658194"></p><h4 id="1-枚举氧的位置"><a href="#1-枚举氧的位置" class="headerlink" title="1. 枚举氧的位置"></a>1. 枚举氧的位置</h4><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsstrua = Structure.from_file(&quot;a.vasp&quot;)hh=np.arange(512)combinations_list1 = list(combinations(hh, 2))print(len(combinations_list1))combinations_array1 = np.array(combinations_list1)numberbb = 0numberaa = 0for ar in combinations_array1:    ara=strua.copy()    numberbb +=1    print(numberbb)    if ara.get_distance(ar[0],ar[1])&gt;11 or ara.get_distance(ar[0],ar[1])&lt;3:        continue    numberaa +=1    replace_list = [[ar,&#39;O&#39;] ]    for ele in replace_list:        for j in ele[0]:            ara.replace(j,ele[1])    ara.sort()    Vasp_Str = Poscar(ara)    Vasp_Str.write_file(&#39;%d.vasp&#39;% numberaa)    </code></pre><h4 id="2-检验相同的结构"><a href="#2-检验相同的结构" class="headerlink" title="2. 检验相同的结构"></a>2. 检验相同的结构</h4><p>需要多次分批次检验，否则太慢了，有一个多任务脚本和一个py脚本</p><p>在不同文件夹中多次进行多脚本计算，会比较方便</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230612172111471.png" alt="image-20230612172111471"></p><p><code>cp  ../*new.vasp ./1-first</code></p><p>第一次检验</p><pre><code class="shell">for i in $(seq 0 1000 130000)docat &gt; job_$i.sh &lt;&lt; liz#!/bin/sh#SBATCH  --job-name=opt #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyu#SBATCH  --nodes=1#SBATCH  --ntasks=1#SBATCH  --cpus-per-task=1source activate lizpython jianyan_$i.py &gt;&gt; jianyan_$i.dat 2&gt;&amp;1lizcat &gt; jianyan_$i.py &lt;&lt; lizimport osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/3-B3O-B4O/4-xinzuo/1-替换O/1-str&#39;for j in range($i,$((i+1000))):    filename = &quot;&#123;&#125;.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = $ifor Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)lizsbatch job_$i.shdone</code></pre><p>第二次检验</p><pre><code class="python">for i in $(seq 0 10000 130000)docat &gt; job_$i.sh &lt;&lt; liz#!/bin/sh#SBATCH  --job-name=opt #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyu#SBATCH  --nodes=1#SBATCH  --ntasks=1#SBATCH  --cpus-per-task=1source activate lizpython jianyan_$i.py &gt;&gt; jianyan_$i.dat 2&gt;&amp;1lizcat &gt; jianyan_$i.py &lt;&lt; lizimport osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/3-B3O-B4O/4-xinzuo/2-去除相同结构/1-first&#39;for j in range($i,$((i+11000))):    filename = &quot;&#123;&#125;new.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = $ifor Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)lizsbatch job_$i.shdone      </code></pre><p>最后一步的检验</p><pre><code class="python">import osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/3-B3O-B4O/4-xinzuo/2-去除相同结构/2-new&#39;for j in range(124000):    filename = &quot;&#123;&#125;new.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)        </code></pre><h4 id="3-替换B原子"><a href="#3-替换B原子" class="headerlink" title="3. 替换B原子"></a>3. 替换B原子</h4><blockquote><p>先替换B4，再替换B3</p></blockquote><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsdir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/3-B3O-B4O/4-xinzuo/2-去除相同结构/2-new&#39;counter = 0for j in range(124000):    filename = &quot;&#123;&#125;new.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    o_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;O&quot;]    o_array = np.array(o_indices)    ara=structure.copy()    list1=ara.get_neighbors(ara[o_array[0]], r=2.0)    list2=ara.get_neighbors(ara[o_array[1]], r=2.0)    list1index=np.array([site.index for site in list1])    list2index=np.array([site.index for site in list2])    replace_list = [ [list1index, &#39;B&#39;] ]    for ele in replace_list:        for j in ele[0]:            ara.replace(j,ele[1])    combinations_list = list(combinations(list2index, 3))    combinations_array = np.array(combinations_list)    for br in combinations_array:        counter += 1        brb=ara.copy()        replace_listara = [ [br, &#39;B&#39;] ]        for ele in replace_listara:           for j in ele[0]:                 brb.replace(j,ele[1])        brb.sort()        Vasp_Str = Poscar(brb)        Vasp_Str.write_file(&#39;%d.vasp&#39;% counter)        print(counter)</code></pre><h4 id="4-再次检验相同结构"><a href="#4-再次检验相同结构" class="headerlink" title="4. 再次检验相同结构"></a>4. 再次检验相同结构</h4><pre><code class="python">import osfrom pymatgen.core import Structurefrom pymatgen.io.vasp.sets import batch_write_input, MPRelaxSetfrom pymatgen.io.vasp.inputs import Poscarstandard_structures= []dir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/3-B3O-B4O/4-xinzuo/3-替换B&#39;for j in range(500):    filename = &quot;&#123;&#125;.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    standard_structures.append(structure)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]  # 将嵌套列表的每个列表的第一个元素提取出来做成一个新列表from pymatgen.io.vasp.inputs import Poscarn = 0for Cry_Str in groupstructures:    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)</code></pre><h4 id="5-计算能量，整理结构"><a href="#5-计算能量，整理结构" class="headerlink" title="5. 计算能量，整理结构"></a>5. 计算能量，整理结构</h4><pre><code class="shell">rm energy.datfor i in $(seq 1 1 99);do echo -n $&#123;i&#125;new.vasp &gt;&gt; energy.dat./ewalds.x ../4-去除相同结构/$&#123;i&#125;new.vasp -1 0 2 &gt;&gt; energy.datdonesort -k3n energy.dat  &gt; sorted.datmkdir strcd strcount=1head -n 100 ../sorted.dat |while read -r line;dofilename=$(echo &quot;$line&quot; | awk &#39;&#123;print $1&#125;&#39;)target_filename=$&#123;count&#125;.vaspcp ../../4-去除相同结构/$&#123;filename&#125; ./$&#123;target_filename&#125;count=$((count+ 1))donecd ..</code></pre><h3 id="3-替换为B-2O和B-3O的方法"><a href="#3-替换为B-2O和B-3O的方法" class="headerlink" title="3. 替换为B_2O和B_3O的方法"></a>3. 替换为B_2O和B_3O的方法</h3><h4 id="1-枚举氧的结构和其他步骤"><a href="#1-枚举氧的结构和其他步骤" class="headerlink" title="1.枚举氧的结构和其他步骤"></a>1.枚举氧的结构和其他步骤</h4><h4 id="2-1-替换B原子-联合取代、完全枚举"><a href="#2-1-替换B原子-联合取代、完全枚举" class="headerlink" title="2-1. 替换B原子(联合取代、完全枚举)"></a>2-1. 替换B原子(联合取代、完全枚举)</h4><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsdir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/1-512-B-7-O-2/3-B2O-B3O/1-O-结构&#39;counter = 0filename = &quot;1new.vasp&quot;filepath = os.path.join(dir, filename)print(filename)structure = Structure.from_file(filepath)o_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;O&quot;]o_array = np.array(o_indices)c_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;C&quot;]c_array = np.array(c_indices)ara=structure.copy()list1=ara.get_neighbors(ara[o_array[0]], r=2.0)list2=ara.get_neighbors(ara[o_array[1]], r=2.0)list1index=np.array([site.index for site in list1])list2index=np.array([site.index for site in list2])combined_array = np.concatenate((list1index, list2index))c_array2 = np.setdiff1d(c_array, combined_array)combinations_list1 = list(combinations(list1index, 2))combinations_list2 = list(combinations(list2index, 3))combinations_list3 = list(combinations(c_array2, 2))array1 = np.array(combinations_list1)array2 = np.array(combinations_list2)array3 = np.array(combinations_list3)print(array3.shape)print(len(array1))print(len(array2))print(len(array3))for i in range(len(array1)):    for j in range(len(array2)):        for k in range(len(array3)):            brb = ara.copy()            counter += 1           # print(array1[i])           # print(array2[j])           # print(array3[k])            combined_array33=np.concatenate((array1[i], array2[j], array3[k]))            replace_listara = [ [combined_array33, &#39;B&#39;] ]            for ele in replace_listara:                for m in ele[0]:                   brb.replace(m,ele[1])            brb.sort()            Vasp_Str = Poscar(brb)            Vasp_Str.write_file(&#39;%d.vasp&#39;% counter)            print(counter)</code></pre><h4 id="2-2-先分类再替代"><a href="#2-2-先分类再替代" class="headerlink" title="2-2 先分类再替代"></a>2-2 先分类再替代</h4><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsdir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/1-512-B-7-O-2/3-B2O-B3O/1-O-结构&#39;counter = 0filename = &quot;1new.vasp&quot;filepath = os.path.join(dir, filename)print(filename)structure = Structure.from_file(filepath)o_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;O&quot;]o_array = np.array(o_indices)c_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;C&quot;]c_array = np.array(c_indices)ara=structure.copy()list1=ara.get_neighbors(ara[o_array[0]], r=2.0)list2=ara.get_neighbors(ara[o_array[1]], r=2.0)list1index=np.array([site.index for site in list1])list2index=np.array([site.index for site in list2])combined_array = np.concatenate((list1index, list2index))print(combined_array)c_array2 = np.setdiff1d(c_array, combined_array)combinations_list1 = list(combinations(list1index, 2))combinations_list2 = list(combinations(list2index, 3))combinations_list3 = list(combinations(c_array2, 2))array1 = np.array(combinations_list1)array2 = np.array(combinations_list2)array3 = np.array(combinations_list3)print(array3.shape)print(len(array1))print(len(array2))print(len(array3))standard_structures=[]for i in range(len(array1)):    for j in range(len(array2)):#        for k in range(len(array3)):            brb = ara.copy()           # print(array1[i])           # print(array2[j])           # print(array3[k])            combined_array33=np.concatenate((array1[i], array2[j]))#            print(combined_array33)            replace_listara = [ [combined_array33, &#39;B&#39;] ]            for ele in replace_listara:                for m in ele[0]:                   brb.replace(m,ele[1])            standard_structures.append(brb)from pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()groups = matcher.group_structures([d for d in standard_structures])print(len(groups))groupstructures = [x[0] for x in groups]for straaa in groupstructures:    for k in range(len(array3)):        copy2=straaa.copy()        counter += 1        replace_listara = [ [array3[k], &#39;B&#39;] ]        for ele in replace_listara:            for m in ele[0]:                copy2.replace(m,ele[1])        copy2.sort()        Vasp_Str = Poscar(copy2)        Vasp_Str.write_file(&#39;%d.vasp&#39;% counter)        print(counter)</code></pre><h4 id="2-3-每个结构随机取样特定数目的结构"><a href="#2-3-每个结构随机取样特定数目的结构" class="headerlink" title="2-3 每个结构随机取样特定数目的结构"></a>2-3 每个结构随机取样特定数目的结构</h4><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsdir=&#39;/work/home/liz/workspace/3-temporary-duty/2-blue/4-zhengshi/1-512-B-7-O-2/3-B2O-B3O/1-O-结构&#39;counter = 0for j in range(100):    filename = &quot;&#123;&#125;new.vasp&quot;.format(j)    filepath = os.path.join(dir, filename)    if not os.path.exists(filepath):        continue    print(filename)    structure = Structure.from_file(filepath)    o_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;O&quot;]    o_array = np.array(o_indices)    c_indices = [i for i, site in enumerate(structure) if site.specie.name == &quot;C&quot;]    c_array = np.array(c_indices)    ara=structure.copy()    list1=ara.get_neighbors(ara[o_array[0]], r=2.0)    list2=ara.get_neighbors(ara[o_array[1]], r=2.0)    list1index=np.array([site.index for site in list1])    list2index=np.array([site.index for site in list2])    combined_array = np.concatenate((list1index, list2index))    c_array2 = np.setdiff1d(c_array, combined_array)    combinations_list1 = list(combinations(list1index, 2))    combinations_list2 = list(combinations(list2index, 3))    combinations_list3 = list(combinations(c_array2, 2))    array1 = np.array(combinations_list1)    array2 = np.array(combinations_list2)    array3 = np.array(combinations_list3)    arr1=np.arange(len(array1))    arr2=np.arange(len(array2))    arr3=np.arange(len(array3))    for ww in range(5000):        np.random.shuffle(arr1)        np.random.shuffle(arr2)        np.random.shuffle(arr3)        brb = ara.copy()        counter += 1        combined_array33=np.concatenate((array1[arr1[1]], array2[arr2[1]], array3[arr3[1]]))        replace_listara = [ [combined_array33, &#39;B&#39;] ]        for ele in replace_listara:            for m in ele[0]:               brb.replace(m,ele[1])        brb.sort()        Vasp_Str = Poscar(brb)        Vasp_Str.write_file(&#39;%d.vasp&#39;% counter)        print(counter)</code></pre><h3 id="4-枚举-迭代器进行工作"><a href="#4-枚举-迭代器进行工作" class="headerlink" title="4.枚举+迭代器进行工作"></a>4.枚举+迭代器进行工作</h3><blockquote><p>可以是可以，但是现在太慢了，问题出在挨个去对比结构相似性，一个可行的方案是不断地细分到不同的结构特征集合，用结构特征做一个初筛</p></blockquote><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsimport itertoolsfrom pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()strua = Structure.from_file(&quot;a.vasp&quot;)hh=np.arange(16,112)combinations_generator = itertools.combinations(hh, 6)numberbb = 0numberaa = 0all_structure=[]for ar in combinations_generator:    ara=strua.copy()    numberbb +=1    print(numberbb)    remove_list = list(ar)    ara.remove_sites(remove_list)    ara.sort()    match_found =False    for aa in all_structure:        if matcher.fit(ara,aa):            match_found = True            break    if not match_found:        all_structure.append(ara)        print(&quot;%d structures &quot; %len(all_structure))        bb=0for aa in all_structure:        bb +=1    Vasp_Str = Poscar(aa)    Vasp_Str.write_file(&#39;%d.vasp&#39;% bb)    </code></pre><h3 id="5-枚举-使用静电能作为哈希值而不是fit"><a href="#5-枚举-使用静电能作为哈希值而不是fit" class="headerlink" title="5.枚举-使用静电能作为哈希值而不是fit"></a>5.枚举-使用静电能作为哈希值而不是fit</h3><blockquote><p>这一方法验证错误，因为两个不同的结构可能具有相同的静电能</p></blockquote><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsimport itertoolsfrom pymatgen.analysis.structure_matcher import StructureMatcherstrua = Structure.from_file(&quot;a.vasp&quot;)hh = np.arange(16, 112)combinations_generator = itertools.combinations(hh, 6)data = &#123;&quot;Ca&quot;:6, &quot;H&quot;:-1&#125;structure_dict = &#123;&#125;  # 用于存储已处理的结构strua.add_oxidation_state_by_element(data)print(strua)aaa= 0for ar in combinations_generator:    aaa +=1    print(aaa)    ara = strua.copy()    remove_list = list(ar)    ara.remove_sites(remove_list)    ara.sort()        # 计算结构的哈希值作为字典的键    ara_hash = EwaldElectrostaticModel().get_energy(ara)        # 使用字典进行匹配检查    if ara_hash not in structure_dict:        structure_dict[ara_hash] = ara        print(&quot;New structure added! Total structures: %d&quot; % len(structure_dict))        for Cry_Str in structure_dict.values():    #print(Cry_Str)    Vasp_Str = Poscar(Cry_Str)    n = n+1    Vasp_Str.write_file(&#39;%d.vasp&#39;%n)        </code></pre><h3 id="6-可以分步骤来做，先替换四个，再替换两个-！"><a href="#6-可以分步骤来做，先替换四个，再替换两个-！" class="headerlink" title="6. 可以分步骤来做，先替换四个，再替换两个 ！"></a>6. 可以分步骤来做，先替换四个，再替换两个 ！</h3><p>先替换1个，再替换一个，再替换一个，再，，，，这样一定是可以做的</p><p>从上往下试，直到能够使用程序做了就停止（95–92），如果从下往上试（92—95）会面临文件数太多的困难</p><h2 id="5-检验"><a href="#5-检验" class="headerlink" title="5.检验"></a>5.检验</h2><h3 id="1-逐个检验相似性"><a href="#1-逐个检验相似性" class="headerlink" title="1. 逐个检验相似性"></a>1. 逐个检验相似性</h3><pre><code class="python">import numpy as npimport sys,os,timefrom pymatgen.core import Structurefrom pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()all_str = []for i in range(1,100000):    file = f&#39;&#123;i&#125;.vasp&#39;    if not os.path.exists(file):       continue    print(file)    strua = Structure.from_file(file)    match_found = False    for str in all_str:        if matcher.fit(strua,str):           match_found = True           break    if not match_found:        all_str.append(strua)        print(&#39;%d structures&#39; % len(all_str))from pymatgen.io.vasp.inputs import Poscarn = 0for strua in all_str:    Vasp_Str = Poscar(strua)    n +=1    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%n)</code></pre><h3 id="2-检验两个结构"><a href="#2-检验两个结构" class="headerlink" title="2. 检验两个结构"></a>2. 检验两个结构</h3><pre><code class="python">import numpy as npimport sys,os,timefrom pymatgen.core import Structurefrom pymatgen.analysis.structure_matcher import StructureMatchermatcher = StructureMatcher()aa = Structure.from_file(&#39;16.vasp&#39;)bb = Structure.from_file(&#39;4199.vasp&#39;)matcher.fit(aa,bb)</code></pre><h1 id="7-找出缺失的原子"><a href="#7-找出缺失的原子" class="headerlink" title="7.找出缺失的原子"></a>7.找出缺失的原子</h1><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom itertools import combinationsstru_b=Structure.from_file(filename=&#39;supercell.vasp&#39;)frac_coords_b=stru_b.frac_coords.tolist()normalized_coords_b = [[x % 1 for x in coord] for coord in frac_coords_b]set2 = set(map(tuple, normalized_coords_b))for i in range(1, 1000001):    file = f&#39;&#123;i&#125;.vasp&#39;    stru_a=Structure.from_file(file)    # 检查文件是否存在    if not os.path.exists(file):        continue    frac_coords_a=stru_a.frac_coords.tolist()    normalized_coords_a = [[x % 1 for x in coord] for coord in frac_coords_a]    set1 = set(map(tuple, normalized_coords_a))    result= [list(i) for i in set2.difference(set1)]    print(result)    atom_indices=[]    for coord in result:        try:            index = normalized_coords_b.index(coord)            atom_indices.append(index)        except ValueError:          # 如果找不到匹配的坐标，可以添加一个标记，如-1，以表示未匹配的坐标            atom_indices.append(-1)    close_atom_pairs = []    combinations_of_missing_atoms = combinations(atom_indices, 2)    threshold_distance = 7    for pair in combinations_of_missing_atoms:        distance = stru_b.get_distance(pair[0], pair[1])        if distance &lt; threshold_distance:            close_atom_pairs.append(pair)    # 如果 close_atom_pairs 列表不为空，则表示存在距离小于阈值的原子对    if close_atom_pairs:        print(&quot;存在距离小于阈值的原子对：&quot;)        print(len(close_atom_pairs))    else:        print(&quot;不存在距离小于阈值的原子对。&quot;)</code></pre><h1 id="7-处理CaH6的333倍胞的问题（将324个H中的14个扣掉-可以枚举的方法"><a href="#7-处理CaH6的333倍胞的问题（将324个H中的14个扣掉-可以枚举的方法" class="headerlink" title="7. 处理CaH6的333倍胞的问题（将324个H中的14个扣掉-可以枚举的方法"></a>7. 处理CaH6的333倍胞的问题（将324个H中的14个扣掉-可以枚举的方法</h1><p>&#x3D;&#x3D;&#x2F;work&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;3-temporary-duty&#x2F;3-zwb&#x2F;6-333&#x2F;1-kou3&#x2F;2&#x2F;1-2&#x2F;ee.py&#x3D;&#x3D;</p><pre><code class="python">from pymatgen.core.structure import IStructure, Structurefrom pymatgen.io.vasp.inputs import Poscarfrom monty.io import zopenimport randomimport sys,os,timeimport numpy as npfrom pymatgen.core import Structurefrom pymatgen.analysis.energy_models import EwaldElectrostaticModelfrom itertools import combinationsstrua = Structure.from_file(&quot;a.vasp&quot;)H_indice = [i for i, site in enumerate(strua) if site.species_string == &quot;H&quot;]H_indices=np.array(H_indice)distanceall=strua.distance_matrixdistance=distanceall[H_indices][:,H_indices]print(distance.shape)print(distance)N = distance.shape[0]two_dim_matrix = np.zeros((N, N), dtype=int)for i in range(N):    for j in range(N):        dist1 = distance[i][j]        if dist1 &lt;= 3.6:            two_dim_matrix[i][j] = 0        else:            two_dim_matrix[i][j] = 1allnumber = 0matching_columns = np.where(two_dim_matrix[0, 1:] == 1)[0]matching_columns = matching_columns  + 1print(matching_columns)for j in matching_columns:    print(j)    matching_columns2=np.where(two_dim_matrix[j, j+1:] == 1)[0]    matching_columns2 = matching_columns2 + j + 1    matching_columns2 = np.intersect1d(matching_columns2,matching_columns)   # print(len(matching_columns2))    for jj in matching_columns2:        matching_columns3=np.where(two_dim_matrix[jj, jj+1:] == 1)[0]        matching_columns3 = matching_columns3 + jj + 1        matching_columns3 = np.intersect1d(matching_columns2,matching_columns3)      #  print(len(matching_columns3))        for jjj in matching_columns3:            matching_columns4=np.where(two_dim_matrix[jjj, jjj+1:] == 1)[0]            matching_columns4 = matching_columns4 + jjj + 1            matching_columns4 = np.intersect1d(matching_columns3,matching_columns4)           # print(len(matching_columns4))            for jjjj in matching_columns4:                matching_columnsddd=np.where(two_dim_matrix[jjjj, jjjj+1:] == 1)[0]                matching_columnsddd = matching_columnsddd + jjjj + 1                matching_columnsddd = np.intersect1d(matching_columns4,matching_columnsddd)               # print(len(matching_columnsddd))                for gg in matching_columnsddd:                    matching_columns5=np.where(two_dim_matrix[gg, gg+1:] == 1)[0]                    matching_columns5 = matching_columns5 + gg + 1                    matching_columns5 = np.intersect1d(matching_columnsddd,matching_columns5)                   # print(len(matching_columns5))                    for ggg in matching_columns5:                        matching_columns6=np.where(two_dim_matrix[ggg, ggg+1:] == 1)[0]                        matching_columns6 = matching_columns6 + ggg + 1                        matching_columns6 = np.intersect1d(matching_columns5,matching_columns6)                       # print(len(matching_columns6))                        for gggg in matching_columns6:                            matching_columns7=np.where(two_dim_matrix[gggg, gggg+1:] == 1)[0]                            matching_columns7 = matching_columns7 + gggg + 1                            matching_columns7 = np.intersect1d(matching_columns6,matching_columns7)                           # print(len(matching_columns7))                            for dd in matching_columns7:                                matching_columns8=np.where(two_dim_matrix[dd, dd+1:] == 1)[0]                                matching_columns8 = matching_columns8 + dd + 1                                matching_columns8 = np.intersect1d(matching_columns7,matching_columns8)                               # print(len(matching_columns8))                                for ddd in matching_columns8:                                    matching_columns9=np.where(two_dim_matrix[ddd, ddd+1:] == 1)[0]                                    matching_columns9 = matching_columns9 + ddd + 1                                    matching_columns9 = np.intersect1d(matching_columns8,matching_columns9)                                   # print(len(matching_columns9))                                    for dddd in matching_columns9:                                        matching_columns10=np.where(two_dim_matrix[dddd, dddd+1:] == 1)[0]                                        matching_columns10 = matching_columns10 + dddd + 1                                        matching_columns10 = np.intersect1d(matching_columns9,matching_columns10)                                       # print(len(matching_columns10))                                        for ww in matching_columns10:                                            matching_columns11=np.where(two_dim_matrix[ww, ww+1:] == 1)[0]                                            matching_columns11 = matching_columns11 + ww + 1                                            matching_columns11 = np.intersect1d(matching_columns10,matching_columns11)                                           # print(len(matching_columns11))                                            for www in matching_columns11:                                                matching_columns12=np.where(two_dim_matrix[www, www+1:] == 1)[0]                                                matching_columns12 = matching_columns12 + www + 1                                                matching_columns12 = np.intersect1d(matching_columns11,matching_columns12)                                               # print(len(matching_columns12))                                                for wwww in matching_columns12:                                                    matching_columns13=np.where(two_dim_matrix[wwww, wwww+1:] == 1)[0]                                                    matching_columns13 = matching_columns13 + wwww + 1                                                    listaaa=[0,j,jj,jjj,jjjj,gg,ggg,gggg,dd,ddd,dddd,ww,www,wwww]                                                   # print(listaaa)                                                    allnumber += 1                                                    #print(allnumber)                                                   # print(listaaa)                                                    if allnumber % 100000 == 0:                                                       print(allnumber)                                                       print(listaaa)                                                       listbbb= H_indices[listaaa]                                                       print(listbbb)                                                       ara=strua.copy()                                                       for ele in listbbb:                                                           ara.replace(ele,&#39;O&#39;)                                                       ara.sort()                                                       Vasp_Str = Poscar(ara)                                                       Vasp_Str.write_file(&#39;%d.vasp&#39;% allnumber)                                                        #                                                   for wwwww in matching_columns14:#                                                        matching_columns15=np.where(two_dim_matrix[wwwww, wwwww+1:] == 1)[0] #                                                       matching_columns15 = matching_columns15 + wwwww + 1</code></pre><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231028104117829.png" alt="image-20231028104117829"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231028104128748.png" alt="image-20231028104128748"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231028104147185.png" alt="image-20231028104147185"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231028113559666.png" alt="image-20231028113559666"></p>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>分子动力学理解及可利用的计算</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6%E7%90%86%E8%A7%A3%E5%8F%8A%E5%8F%AF%E5%88%A9%E7%94%A8%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6%E7%90%86%E8%A7%A3%E5%8F%8A%E5%8F%AF%E5%88%A9%E7%94%A8%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-分子动力学本身的理论"><a href="#1-分子动力学本身的理论" class="headerlink" title="1.分子动力学本身的理论"></a>1.分子动力学本身的理论</h1><h2 id="1-关于温度波动与smass值"><a href="#1-关于温度波动与smass值" class="headerlink" title="1. 关于温度波动与smass值"></a>1. 关于温度波动与smass值</h2><blockquote><p><strong><a href="http://staff.ustc.edu.cn/~zqj/posts/NVT-MD/">http://staff.ustc.edu.cn/~zqj/posts/NVT-MD/</a></strong></p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230531161007404.png" alt="image-20230531161007404"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230710142226751.png" alt="image-20230710142226751"></p><p>ceder的关于smass为0的文章 ：</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/86e5ae008edff6b274b7507f556f30f.png" alt="86e5ae008edff6b274b7507f556f30f"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/a29986e6075d43d8479b176c47a30ea.png" alt="a29986e6075d43d8479b176c47a30ea"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/0bee3b31f14b240bb64deebfbe3d9ab.png" alt="0bee3b31f14b240bb64deebfbe3d9ab"></p><h1 id="2-理论理解"><a href="#2-理论理解" class="headerlink" title="2. 理论理解"></a>2. 理论理解</h1><p>参考文献：</p><p> <a href="https://mp.weixin.qq.com/s?__biz=MzkyODI1MDkzMQ==&mid=2247483732&idx=1&sn=dcf54d4949081f3f373e83e94e41926c&chksm=c21aec08f56d651ea88b5bbc7b88dc871d0bea4a4c76a1b54229715ef318512810915d921b62&scene=21#wechat_redirect">第一性原理计算能量，我们忽略了什么？ (qq.com)</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzkyODI1MDkzMQ==&mid=2247483745&idx=1&sn=6d778b432d19423188077b703dd2dca1&chksm=c21aec3df56d652bc30408adaed234b6d1cc0bc7c23bfc816251ab5775cbbb999b6c8ab76cdb&scene=21#wechat_redirect">声子零点振动能（ZPE）和吉布斯自由能的理论推导及VASP计算实操（一） (qq.com)</a></p><h2 id="1-能量的区分"><a href="#1-能量的区分" class="headerlink" title="1.能量的区分"></a>1.能量的区分</h2><blockquote><p><a href="https://mp.weixin.qq.com/s/wg2cKE9KDRvCXM4f-1RrtA">https://mp.weixin.qq.com/s/wg2cKE9KDRvCXM4f-1RrtA</a></p></blockquote><ol><li>能量分为体系的内能U、焓H、吉布斯自由能G</li></ol><p>其中</p><p>$G&#x3D;U+PV-TS$</p><p>$H&#x3D;U+PV$</p><ol start="2"><li><p>内能等于</p><p>$U&#x3D;E_{electron}+ZPE$</p><blockquote><p>其中，E_electron是电子总能，ZPE是声子的零点振动能</p><p>&#x3D;&#x3D;vasp中，使用grep withoutentropy OUTCAR得到的能量就只是电子总能&#x3D;&#x3D;</p><p>因为第一性原理计算没有温度，所以不包括体系的动能项</p></blockquote><p>零点振动能对于较轻元素的体系（H He Li)的体系需要考虑，对于较重的元素，ZPE远远小于E_electron，通常不考虑</p></li><li><p>讨论吉布斯自由能</p><p>吉布斯自由能中有熵</p><p>$S&#x3D;S_k+S_{vib}+S_{elec}$</p></li></ol><p>其中S_k是构型熵，S_vib是振动熵（一般温度下贡献较小，第一性原理计算中未考虑），S_elec是电子熵</p><h2 id="2-声子振动能和振动熵、零点振动能"><a href="#2-声子振动能和振动熵、零点振动能" class="headerlink" title="2. 声子振动能和振动熵、零点振动能"></a>2. 声子振动能和振动熵、零点振动能</h2><blockquote><p><a href="https://mp.weixin.qq.com/s/Eq9Iug3tnkCy5eFXaBLAFQ">https://mp.weixin.qq.com/s/Eq9Iug3tnkCy5eFXaBLAFQ</a></p></blockquote><blockquote><p>声子作为准粒子来看，借助玻尔兹曼分布和准粒子的概念</p></blockquote><ol><li><p>一个材料体系，可以看作是由声子和电子组成，材料体系的总能是电子总能与声子总能之和</p><p>电子总能包括电子间相互作用能，原子核对电子的作用，范德华相互作用（均包括在grep without OUTCAR）中，和电子熵对总能的贡献（未包括）</p><p>第一性原理计算不能包括振动的能量</p><p>声子总能包括声子内能（振动能）和振动熵的贡献，零点振动能是声子总能的一部分（从下面的推导中可见）。第一性原理计算通常只能计算出声子的本征振动模（振动频率），而声子的ZPE和吉布斯自由能需要结合统计力学处理得到。</p></li><li><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529093355268.png" alt="image-20230529093355268"></p></li></ol><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529093446648.png" alt="image-20230529093446648"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529093557533.png" alt="image-20230529093557533"></p><h2 id="3-vasp计算声子振动能和振动熵"><a href="#3-vasp计算声子振动能和振动熵" class="headerlink" title="3.vasp计算声子振动能和振动熵"></a>3.vasp计算声子振动能和振动熵</h2><blockquote><p>vasp可以直接计算出材料的振动熵</p><p><a href="https://mp.weixin.qq.com/s/2uJtj6wEKAAqYwAMgvTi1A">https://mp.weixin.qq.com/s/2uJtj6wEKAAqYwAMgvTi1A</a></p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094334669.png" alt="image-20230529094334669"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094401003.png" alt="image-20230529094401003"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094511167.png" alt="image-20230529094511167"></p><h2 id="4-构型熵的计算"><a href="#4-构型熵的计算" class="headerlink" title="4. 构型熵的计算"></a>4. 构型熵的计算</h2><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094748544.png" alt="image-20230529094748544"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094820635.png" alt="image-20230529094820635"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529094857420.png" alt="image-20230529094857420"></p><h1 id="3-可以利用的计算"><a href="#3-可以利用的计算" class="headerlink" title="3.可以利用的计算"></a>3.可以利用的计算</h1><h2 id="1-振动熵"><a href="#1-振动熵" class="headerlink" title="1. 振动熵"></a>1. 振动熵</h2><blockquote><p>Influence of Lattice Dynamics on Na+ Transport in the Solid Electrolyte Na3PS4−xSex</p><p>How Chemical Composition Alone Can Predict Vibrational Free Energies and Entropies of Solids</p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529085044405.png" alt="image-20230529085044405"></p><h2 id="2-声子带心（phonon-band-center-标识平均振动频率"><a href="#2-声子带心（phonon-band-center-标识平均振动频率" class="headerlink" title="2.声子带心（phonon band center) (标识平均振动频率)"></a>2.声子带心（phonon band center) (标识平均振动频率)</h2><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529085819657.png" alt="image-20230529085819657"></p><h2 id="3-配分声子DOS和总声子DOS-速度自关联函数的的傅里叶变换"><a href="#3-配分声子DOS和总声子DOS-速度自关联函数的的傅里叶变换" class="headerlink" title="3. 配分声子DOS和总声子DOS -速度自关联函数的的傅里叶变换"></a>3. 配分声子DOS和总声子DOS -速度自关联函数的的傅里叶变换</h2><blockquote><p>Extreme phonon anharmonicity underpins superionic diffusion and ultralow thermal conductivity in argyrodite Ag8SnSe6</p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230529090207571.png" alt="image-20230529090207571"></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VDOS and band center</title>
      <link href="/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/VDOS%20and%20band%20center/"/>
      <url>/2024/05/25/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/VDOS%20and%20band%20center/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-定义"><a href="#1-定义" class="headerlink" title="1. 定义"></a>1. 定义</h1><blockquote><p>VDOS : vibrational density of states , 定义了单位振动模式范围内的模式数量</p></blockquote><blockquote><p>band center :定义了平均振动模式的强度</p><p>来源：Accurate description of ion migration in solid-state ion conductors from machine-learning molecular dynamics</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240513103609076.png" alt="image-20240513103609076"></p><h1 id="2-优点"><a href="#2-优点" class="headerlink" title="2.优点"></a>2.优点</h1><p>室温AIMD模拟的VDOS包括非谐和温度效应，反映了正负离子耦合动力学，通常在传统声子计算中不特别考虑非谐效应时不包括</p><h1 id="3-计算方法"><a href="#3-计算方法" class="headerlink" title="3. 计算方法"></a>3. 计算方法</h1><ol><li><p>VDOS</p><p>分子动力学中速度自相关函数的傅里叶变换</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240513103224551.png" alt="image-20240513103224551"></p><ol start="2"><li><p>band center</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240513103302607.png" alt="image-20240513103302607"></p></li></ol><h1 id="4-应用"><a href="#4-应用" class="headerlink" title="4. 应用"></a>4. 应用</h1><ol><li>通过固定或者不限制离子振动来考虑阴阳离子耦合效应</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240513161744874.png" alt="image-20240513161744874"></p><p>阴阳离子耦合效应增加了低频和高频，降低了中频的模式</p><p>2. </p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>元素价态</title>
      <link href="/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/%E5%85%83%E7%B4%A0%E4%BB%B7%E6%80%81/"/>
      <url>/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/%E5%85%83%E7%B4%A0%E4%BB%B7%E6%80%81/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230822111337455.png" alt="image-20230822111337455"></p><p>掺杂、替换 </p><ol><li><p>同价态掺杂、&#x3D;&#x3D;改变离子半径-改变晶体形貌-改变势垒    改变离子质量-改变晶格振动-改变跳跃几率-改变MNR&#x3D;&#x3D;</p></li><li><p>同价态替换    改变离子半径-改变晶体形貌-改变势垒    改变离子质量-改变晶格振动-改变跳跃几率-改变MNR</p></li><li><p>不同价态掺杂  &#x3D;&#x3D;改变迁移离子的浓度&#x3D;&#x3D;、改变质量、改变离子半径</p></li><li><p>电子结构角度：成键与极化、软硬酸碱</p><p>价态与配位应该与原材料相匹配，不能原来是四价4配位，改成5价六配位，可以改成5价4配位</p><p>先同价替换找单元素最高，在单元素最高基础上掺杂、替换</p><p>掺杂的比例应该控制得当，比如按照一定的数列规则</p></li></ol><blockquote><p>Si (0.26) </p><p>同价替换  找最合适的尺寸  Ti (0.42) Hf(0.58)  Zr(0.59)  Ge(0.39) Cr(0.41)  Mn(0.39)  Co(0.4)  Sn (0.55) Pb(0.65) Te(0.66)</p><p>同价掺杂   </p><p>异价掺杂  3价（增加离子浓度） Fe(0.49) B(0.11) Al(0.39) Ga(0.47) In(0.62)</p><p>​                  5价  (降低离子浓度)   V (0.46) Nb(0.48)  Cr(0.345)  Mo(0.46)  Mn(0.33)   P(0.17) As(0.335)</p></blockquote><blockquote><p>Y (3)  0.9  </p><p>同价替换 La(1.032) Ce(1.01)  Pr(0.99) Nd(0.983) Pm(0.97)Eu(0.947) Sm(0.958)Gd(0.938)Tb(0.923)   Dy(0.912) Ho(0.901)   Er (0.89) Tm(0.88)  Yb(0.868) Sc (0.745)  Lu(0.861)  Ti(0.67)  V(0.64) Nb(0.72)  Ta(0.72)  Cr(0.615)  Mo(0.69)  Mn(0.58)  Fe(0.55)  Ru(0.68)  Co(0.61)  Rh(0.665) Ir(0.68)  Ni(0.6)  Pd(0.76)  Cu(0.54)  B(0.27)  Al(0.535)  Ga(0.62) In(0.8)  N(0.16) P(0.44)  Sb(0.76) Bi(1.03) </p><p>文献中已有的实验数据，其中比Y低的元素包括 Er Lu Sc Fe Tm</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/aa.jpg" alt="aa"></p><blockquote><p>同价掺杂    </p><p>异价掺杂   2价 Mg(0.72)  Ca(1) Sr(1.18)  Ba(1.35)  Ti(0.86)  V(0.79)   Cr(0.73)  Mn(0.67 0.83)  Fe(0.61 0.78)  Co(0.65 0.75)  Ni(0.69)  Pd(0.86)  Pt(0.8)  Cu(0.73)  Zn(0.74)  Cd(0.95)  Ge(0.73)  Pb(1.19) </p><p>​                   4价   Ti(0.605)  Zr(0.72)  Hf(0.71)  V(0.58) Nb(0.68)  Ta(0.68)  Cr(0.55) Mo(0.65) W(0.66)  Mn(0.53)  Re(0.63)  Fe(0.585) Ru(0.62)  Os(0.63)  Co(0.53)  Rh(0.6)  Ir(0.625)  Ni(0.48)  Pd(0.615)  Pt(0.625)  Ge(0.53) Si(0.4)  C(0.16) Sn(0.69) Pb(0.775)  S(0.37)  Se(0.5)  Te(0.97) </p></blockquote><p>&#x3D;&#x3D;要搞清楚掺杂、替换本质在做什么，改变了什么&#x3D;&#x3D;</p><p>**Si (0.26) **</p><p>&#x3D;&#x3D;<strong>同价替换 &#x2F;掺杂</strong>&#x3D;&#x3D;</p><p><strong>Ti (0.42) Hf(0.58)  Zr(0.59)  Ge(0.39) Cr(0.41)  Mn(0.39)  Co(0.4)  Sn (0.55) Pb(0.65) Te(0.66)</strong></p><p>&#x3D;&#x3D;<strong>异价掺杂</strong>&#x3D;&#x3D;   <strong>3价（增加离子浓度） Fe(0.49) B(0.11) Al(0.39) Ga(0.47) In(0.62)</strong></p><p>​                  <strong>5价  (降低离子浓度)   V (0.46) Nb(0.48)  Cr(0.345)  Mo(0.46)  Mn(0.33)   P(0.17) As(0.335)</strong></p><p>**Y  0.9  **</p><p>&#x3D;&#x3D;<strong>同价替换&#x2F;掺杂</strong>&#x3D;&#x3D;</p><p>**La(1.032) Ce(1.01)  Pr(0.99) Nd(0.983) Pm(0.97)Eu(0.947) Sm(0.958)Gd(0.938)Tb(0.923)   Dy(0.912) Ho(0.901)   Er (0.89) Tm(0.88)  Yb(0.868) Sc (0.745)  Lu(0.861)  Ti(0.67)  V(0.64) Nb(0.72)  Ta(0.72)  Cr(0.615)  Mo(0.69)  Mn(0.58)  Fe(0.55)  Ru(0.68)  Co(0.61)  Rh(0.665) Ir(0.68)  Ni(0.6)  Pd(0.76)  Cu(0.54)  B(0.27)  Al(0.535)  Ga(0.62) In(0.8)  N(0.16) P(0.44)  Sb(0.76) Bi(1.03) **</p><p>&#x3D;&#x3D;<strong>异价掺杂</strong>&#x3D;&#x3D;   **2价 Mg(0.72)  Ca(1) Sr(1.18)  Ba(1.35)  Ti(0.86)  V(0.79)   Cr(0.73)  Mn(0.67 0.83)  Fe(0.61 0.78)  Co(0.65 0.75)  Ni(0.69)  Pd(0.86)  Pt(0.8)  Cu(0.73)  Zn(0.74)  Cd(0.95)  Ge(0.73)  Pb(1.19) **</p><p>​                  <strong>4价   Ti(0.605)  Zr(0.72)  Hf(0.71)  V(0.58) Nb(0.68)  Ta(0.68)  Cr(0.55) Mo(0.65) W(0.66)  Mn(0.53)  Re(0.63)</strong>  **Fe(0.585) Ru(0.62)  Os(0.63)  Co(0.53)  Rh(0.6)  Ir(0.625)  Ni(0.48)  Pd(0.615)  Pt(0.625)  Ge(0.53) Si(0.4)  C(0.16) Sn(0.69) Pb(0.775)  S(0.37)  Se(0.5)  Te(0.97) **</p><h1 id="2-运动模式"><a href="#2-运动模式" class="headerlink" title="2.运动模式"></a>2.运动模式</h1><p>在沿着c轴方向的一个通道中，有两个稳定的位置，呈长条状</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231009163427080.png" alt="image-20231009163427080"></p><p>长条就像是树的枝干，延伸出连接不同水平方向位置的枝条</p><p>neb的计算结果显示，在树木的同一长条内的运动更容易，但是在不同长条间的运动更加困难</p><p>沿着c轴通道的运动，需要跨过SiO4组成的不同的环，需要跨过两个正对的SiO4四面体的区域，带来大的势垒，增加Y位置的尺寸，确实会拓宽通道</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231009165744856.png" alt="image-20231009165744856"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231009170307586.png" alt="image-20231009170307586"></p><p>使用主动学习分子动力学是十分有必要的，-否则数据不够线性</p><ol start="3"><li><p>离子的运动是离不开在长条内的运动的，因为需要在不同的长条位置迁移。</p><p>针对长条中的离子扩散，降低离子的迁移势垒，目前有几种方案：</p><ol><li>拓宽空间、2. 降低Si的价态 3. 增加或者减少离子</li></ol><p>需要考察高压下的离子扩散行为，为什么会增加电导率</p></li><li><p>NEB有两种形貌，左凸型和右凸型，左凸型的通道内的势垒曲线是瀑布型，其相邻x方向的离子受到束缚更少，看上去更松散，两类离子可以运动。右凸型的通道内的势垒曲线是山峰型，相邻x方向的离子受到束缚更大，看上去更紧密，只有通道内可以运动</p><p>左凸型</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151802427.png" alt="image-20231024151802427"></p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151820150.png" alt="image-20231024151820150"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151845466.png" alt="image-20231024151845466"></p><p>右凸型</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151904025.png" alt="image-20231024151904025"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151920099.png" alt="image-20231024151920099"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024151930172.png" alt="image-20231024151930172"></p><p>右凸型</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024155036248.png" alt="image-20231024155036248"></p><p>左凸和右凸在结构优化之后就已经确定了，左凸的中心不对齐，右侧凸的中心对齐</p><p>左凸起的结构的八面体起伏更大，原子共线更差，右凸起的结构原子共线更好</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024164534314.png" alt="image-20231024164534314"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231024164556175.png" alt="image-20231024164556175"></p><p>和元素种类相关？和半径或者化合价相关？</p><p>可能水平面内的运动依赖于非共线的形成，</p><p>4.周边位置的Na的作用很明显，瀑布型的能垒曲线的末态周边原子已经占领了中心通道的位置</p><p>非晶化    确实是个很好的问题 。Na中Y的非晶化要更难、Sm的非晶化更容易、Li的非晶化容易  用结构的扭曲程度来表征非晶化的可能性</p><p>找非晶化提升离子电导率的机制、有没有其他非晶化的例子</p><p>Na为什么测出来不是直线：正常</p><p>非晶化是不是结构破坏，是的，但是还是不知道为什么非晶化之后离子电导率会增加</p><p>相比于日本小组，做出来的晶体更纯，微晶玻璃中微晶的存在会抑制电导率</p><p>总结领域内新兴的方向，做热点的方向，卤化物固态电解质</p><p>算XRD 和实验来比较，</p><p>加速分子动力学（meta)，可以加速发现相变发生的过程和非晶化的过程 ，可以给sm和Li分别做一做 </p><p>1.为什么非晶化能够提升离子电导率 </p><ol start="2"><li>有没有其他的非晶化可能的材料（硫化物、氧化物）</li></ol><p>PPT的问题：让人知道下一步要做啥，因为是新的发现</p><p>1.neb形状的起因 其他钠离子的影响</p><p>2 元素更加紧密的原因 元素</p><h1 id="3-关于大模型"><a href="#3-关于大模型" class="headerlink" title="3. 关于大模型"></a>3. 关于大模型</h1><h2 id="不做大模型的理由"><a href="#不做大模型的理由" class="headerlink" title="不做大模型的理由"></a>不做大模型的理由</h2><ol><li>我本身并不关心大模型及其应用，而更关心机制和原理</li><li>在训练大模型的过程中有太多未知的困难，无法预料，无法按时毕业</li><li>做大模型变成了机器学习的应用，并不是我自己的工作</li></ol><h2 id="要做什么"><a href="#要做什么" class="headerlink" title="要做什么"></a>要做什么</h2><p>单个的元素替换的机器学习势，高压下MNR关系的探讨  </p>]]></content>
      
      
      <categories>
          
          <category> 课题研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vasp使用教程</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/vasp%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/vasp%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-计算方法、流程与输入文件"><a href="#1-计算方法、流程与输入文件" class="headerlink" title="1.计算方法、流程与输入文件"></a>1.计算方法、流程与输入文件</h1><h2 id="1-结构优化方法"><a href="#1-结构优化方法" class="headerlink" title="1.结构优化方法"></a>1.结构优化方法</h2><blockquote><p>为什么vasp优化的能量最后不对，因为优化过程中晶格在变化，但是优化过程中的G点网格没有更新，所以最后用的G点网格不适用最后的晶格常数</p><p>QE最后会有一步自洽，所以QE的能量是准的</p><p>ABACUS优化的能量是不准的</p></blockquote><ul><li><p>使用收敛的参数不会出现优化后的结构拿去自洽后能量变化的问题，也不会有优化后的结构再拿去cp CONTCAR POSCAR后优化还可以继续优化的问题，所以归根结底是收敛的参数的问题</p><p>用于验证的目录：五洲</p></li><li><p>一次使用收敛的高精度优化和多次递进参数优化得到的能量结果是相同的，所以是两种策略，一步高精度或者多步递进</p></li><li><p>高精度和低精度优化出来的结构会有体积的变化，即高低精度优化得到的不止能量上的差别，还有结构上的差别，因此使用高精度是必要的。</p></li><li><p>ENCUT和KSPACING比较方便，ENCUT通常1.3倍ENCUT是不够的，需要加大，而KSPACING比想象中更容易收敛，用0.2即可。</p></li><li><p>一定要优化到足够的精度，力的收敛标准不要吝啬 0.001，例如，优化不到位在算不同扩胞方式下表面的能带时差别会比较大</p></li></ul><p>&#x3D;&#x3D;优化增加ENCUT!!!!&#x3D;&#x3D; 不然算出来的能量是不准确的 </p><p>&#x2F;work&#x2F;home&#x2F;xieyu&#x2F;workplace&#x2F;liz&#x2F;1K-Y-Si-O-pymatgen&#x2F;B-2&#x2F;1-opt&#x2F;1</p><p>可以在优化后做一个自洽来看下能量</p><p>一步优化往往是不对的，需要再优化一次，可能在再次优化的时候结构还会变化。</p><p>优化收敛后往往需要再优化一遍才能得到准确的结构，网格的原因，优化中的网格没有变化，重新优化会对结构产生新的网格</p><p>Q1 为什么在收敛后再优化还是能继续优化</p><p>Q2为什么自洽和优化的能量不一样</p><p>&#x3D;&#x3D;策略&#x3D;&#x3D;多步优化，分步优化  就算第一步收敛了也要再做一次优化</p><p>&#x3D;&#x3D;先粗优化后精优化不只是优化的策略，而是必须要做的事&#x3D;&#x3D;</p><p><strong>&#x3D;&#x3D;D:\4-work\1-project-PPT\M-2-软件-计算方法&#x2F;结构优化精度对比.pptx&#x3D;&#x3D;</strong></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20240109222800271.png" alt="image-20240109222800271"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20240109222815206.png" alt="image-20240109222815206"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20240109222829651.png" alt="image-20240109222829651"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20240109222853989.png" alt="image-20240109222853989"></p><p>自洽判断结构能量次序的没有测，留到以后测吧！！！</p><pre><code class="shell"> SYSTEM=Li             PREC = Accurate      NELM = 60 （#电子自洽迭代最大步数，默认为60NELMIN = 2 #电子自洽迭代最小步数，默认为2EDIFF = 1e-5 #电子自洽收敛标准，当两步总能小于该值时，电子自洽终止，默认为1e-4**NSW = 200 #原子弛豫最大步数，默认为0  EDIFFG = -0.01 #原子弛豫收敛标准，两步总能之差小于该值时，弛豫终止，设为负值时，表示力的收敛，一般负值是比较好的标准**POTIM =  0.5 #原子每步移动的距离，IBRION=1 2 3 时，默认为0.5，IBRION=0时，跑MD,需要手动输入****IBRION = 2 #不同的原子能量下降方式，-1表示不移动，2表示共轭梯度法，默认当NSW = 0或1时为-1，为其他值时是0****ISIF = 3 #结构优化哪些部分，IBRION=0时默认为0，其他默认为2****ENCUT = 600 #截断能，默认为POTCAR文件里的ENMAX   *****ISPIN =2******#SYSTEM PREC EDIFF NSW IBRION EDIFFG POTIM ENCUT ISIF ISMEAR SIGMA ISTART ICHARG)****#当NSW=0 IBRION = -1时，ISIF=2或者ISIF=3是没有差别的，并不会优化晶格常数**</code></pre><h2 id="2-测k点-直接测KSPACING"><a href="#2-测k点-直接测KSPACING" class="headerlink" title="2.测k点 &#x2F;直接测KSPACING"></a><strong>2.测k点</strong> &#x2F;直接测KSPACING</h2><pre><code class="shell">for i in 1 2 3 4 5 6 7 8 9do  for j in 1 2 3 4 5 6 7 8 9 do  for k in 1 2 3 4 5 6 7 8 9cat &gt; KPOINTS &lt;&lt;lizhaohenshuai     Automatic generation     0     Monkhorst-pack     $i $j $k     0 0 0lizhaohenshuaimpirun  -np 48 vasp路径 &gt;vasp.log 2&gt;&amp;1cp CONTCAR CONTCAR_$icp OUTCAR OUTCAR_$idone</code></pre><p>&#x3D;&#x3D;<strong>测试k点，截断能本质上是在测赝势（<code>POTCAR</code>),用自洽来保证能量算准然后再进行优化才有意义。</strong>&#x3D;&#x3D;</p><h2 id="3-ISMEAR与SIGMA"><a href="#3-ISMEAR与SIGMA" class="headerlink" title="3.ISMEAR与SIGMA"></a><strong>3.<code>ISMEAR与SIGMA</code></strong></h2><p>**<code>ISMEAR</code>  </p><ul><li><p><strong>对半导体或者绝缘体，使用<code>ISMEAR=-5</code>（一定不能用<code>&gt;0</code>),如果胞比较大（即使用的<code>K</code>点数目很小，如一两个，）使用<code>ISMEAR=0,SIGMA=0.05</code>;</strong></p></li><li><p><strong>对金属弛豫使用<code>ISMEAR=1</code>或者<code>2</code>，和一个比较好的<code>SIGMA</code>(默认为<code>0.2</code>，需要测试）</strong></p></li><li><p>&#x3D;&#x3D;<strong>对半导体和绝缘体不要用<code>ISMEAR&gt;0</code>；</strong>&#x3D;&#x3D;</p></li><li><p><strong>对于计算<code>DOS</code>,自洽（不需要弛豫时，不涉及力）时一律使用<code>ISMEAR=-5</code>；声子谱计算用<code>ISMEAR&gt;0</code>；计算能带时不同，详细见能带）</strong></p></li><li><p><strong>1.测<code>SIGMA  ISMEAR&gt;0时</code></strong></p></li></ul><pre><code class="shell">for i in 0.1 0.12 0.14 0.16 0.18 0.20 0.22 0.24 0.26 0.28 0.30   do  cat &gt; INCAR &lt;&lt; lizhaohenshuai  SYSTEM=Li  PREC = Accurate  ENCUT = 600  EDIFF = 1e-6  IBRION = 2  ISIF = 3  NSW = 200  ISMEAR = 1  SIGMA = $i  POTIM = 0.2  EDIFFG = -0.001  lizhaohenshuaimpirun -np 48 vasp路径 &gt; vasp.log 2&gt;&amp;1cp CONTCAR CONTCAR_$pcp OUTCAR OUTCAR _$pdone  </code></pre><ul><li><strong>2.提取熵值</strong></li></ul><p><strong>选择熵值最小的<code>SIGMA</code>，最高不能高于每原子大于<code>1mev</code></strong></p><hr><pre><code class="shell"> for i in 0.1 0.12 0.14 0.16 0.18 0.20 0.22 0.24 0.26 0.28 0.30 echo -n $i &gt;&gt; energy.dat  grep  EENTRO OUTCAR_</code></pre><p>&#x3D;&#x3D;<strong>总结</strong>&#x3D;&#x3D;</p><ol><li><strong>对结构弛豫（需要计算力），半导体&#x2F;绝缘体小胞用<code>ISMEAR=-5</code>，大胞用<code>ISMEAR=0</code>;金属用<code>ISMEAR=1或2</code>，需要测<code>SIGMA</code></strong></li><li>*<strong>对<code>dos</code>,由于自洽与非自洽都不需要计算力，统一使用<code>ISMEAR=-5</code>;</strong></li><li><strong>对能带，由于<code>ISMEAR=-5</code>不能识别线性的<code>kpoints</code>,因此半导体&#x2F;绝缘体用<code>ISMEAR=0</code>,金属用<code>ISMEAR=1或2</code></strong></li><li><strong>对声子谱，用<code>ISMEAR&gt;0</code></strong>**</li></ol><h2 id="4-计算dos与band"><a href="#4-计算dos与band" class="headerlink" title="4.计算dos与band"></a><strong>4.计算<code>dos</code>与<code>band</code></strong></h2><h3 id="1-DOS费米能级问题"><a href="#1-DOS费米能级问题" class="headerlink" title="1. DOS费米能级问题"></a>1. DOS费米能级问题</h3><ul><li><p>计算dos时，有时会发现dos步的费米能级和scf步的费米能级不同，这是因为dos使用了不同的k点，对于不同空间群的结构，使用的k点不恰当，可能会导致k点取不到价带顶，使得填充电子的时候，填充到了价带底。</p></li><li><p>计算dos时，第一步自洽会出现的问题：不同的k点数量得到的费米能级的值不同，</p><p>比如学校机&#x2F;data&#x2F;home&#x2F;mym&#x2F;workplace&#x2F;xieyu&#x2F;liz&#x2F;3-article&#x2F;3-K5YSi4O12&#x2F;3-dos&#x2F;2-dos 中，就发现使用444的k点无法判断准确的费米能级而333就可以，这个原因同上，直接改掉dos中的费米能级就行</p></li><li><p>也可能会遇到dos的费米能级比能带要低，导致能带的价带顶高于费米能级，原因是DOS的k点密度不够大，使得计算不够，可以加大计算dos的k点，（vaspkit里102设置成0.01），能够解决这个问题</p></li><li><p>vaspkit算完能带后会输出band_gap文件，里面的VBM按理说应该就是费米能级的位置，看这个值和dos里面doscar的费米能级哪个更小用哪个做费米能级</p></li><li><p>大体系应该减少在能带路径上的插值</p></li><li><p>计算能带、dos，结构的键长等参数有小的变化也会引起结果比较大的不同，可能差100meV。需要把结构优化到足够的精度，尤其是带真空层的</p></li></ul><h3 id="2-真空中三维-二维材料的能带路径问题"><a href="#2-真空中三维-二维材料的能带路径问题" class="headerlink" title="2. 真空中三维&#x2F;二维材料的能带路径问题"></a>2. 真空中三维&#x2F;二维材料的能带路径问题</h3><p>真空层的三维   能带结构用二维的k点路径 因为真空层厚度大，倒空间0 0 0.5 和0 0 0 没什么区别</p><blockquote><ul><li>记得加自旋  变得光滑用NEDOS   (<a href="https://www.bigbrosci.com/2017/10/30/ex08/?highlight=%E6%B0%A7">https://www.bigbrosci.com/2017/10/30/ex08/?highlight=%E6%B0%A7</a>)</li><li>自旋极化什么时候加： 单原子的计算，O2分子，自由基相关计算，含 Fe Co Ni 的体系，体系有磁性，关注电子性质</li><li>查看体系磁矩 加上ISPIN&#x3D;2后在OSICAR中查看mag的数值</li></ul></blockquote><h3 id="3-重要的参数"><a href="#3-重要的参数" class="headerlink" title="3.重要的参数"></a>3.重要的参数</h3><ol><li><p>LORBIT</p><p>LORBIT控制PROCAR的产生</p></li></ol><h3 id="4-步骤"><a href="#4-步骤" class="headerlink" title="4.步骤"></a>4.步骤</h3><h4 id="1-结构优化"><a href="#1-结构优化" class="headerlink" title="1.结构优化"></a>1.<a href="#123">结构优化</a></h4><h4 id="2-静态自洽"><a href="#2-静态自洽" class="headerlink" title="2.静态自洽"></a>2.<strong>静态自洽</strong></h4><p>&#x3D;&#x3D;<strong>自洽得到准确的基态电子密度，然后固定电子密度，进行非自洽，dos进行两步的目的是更加精确；能带进行两步第二步是为了获得特定k点的能量和本征值</strong>&#x3D;&#x3D;</p><blockquote><p>LORBIT 控制PROCAR的产生</p></blockquote><pre><code class="shell">IBRION = -1NSW = 0LWAVE = TRUE  #默认为True,输出WAVECARLCHARGE = TRUE #默认为True,输出CHGCARISTART = 0#当WAVECAR存在时，默认值为1，读取WAVECAR，其他情况默认为0，从头开始构建轨道ICHARG = 2#ISTART为0时默认为2，等于11时，从给定的CHGCAR读取本征值ISMEAR = -5 #非常重要ISPIN = 2</code></pre><pre><code class="shell">SYSTEM = testALGO = NormalISYM = 0LREAL =AutoPREC = NormalEDIFF = 1e-6ENCUT = 800NELMIN = 4NELM = 500IBRION = -1ISIF = 2ISMEAR = -5PSTRESS = 0.001KPAR = 4NCORE = 6LWAVE = TRUELCHARG = TRUEISTART = 0ICHARG = 2</code></pre><h4 id="3-计算DOS的非自洽"><a href="#3-计算DOS的非自洽" class="headerlink" title="3.计算DOS的非自洽"></a><strong>3.计算DOS的非自洽</strong></h4><p>&#x3D;&#x3D;<strong>加大k点计算更准确的电子态密度，<code>ISMEAR=-5</code></strong>&#x3D;&#x3D;</p><pre><code class="shell">NSW = 0IBRION = -1ISTART =1ICHARG = 11LORBIT = 11ISMEAR = -5NEDOS = 3000ISPIN = 2#增加K点网络  cp自洽的电荷密度 CHG CHGCAR  波函数 WAVECAR**</code></pre><pre><code class="shell">SYSTEM = testALGO = NormalISYM = 0LREAL =AutoPREC = NormalEDIFF = 1e-6ENCUT = 800NELMIN = 4NELM = 500IBRION = -1ISIF = 2ISMEAR = -5PSTRESS = 0.001KPAR = 4NCORE = 6ISTART = 1ICHARG = 11LORBIT = 11NEDOS = 3000</code></pre><h4 id="4-使用HSE计算DOS"><a href="#4-使用HSE计算DOS" class="headerlink" title="4**.使用HSE计算DOS**"></a>4**.使用<code>HSE</code>计算<code>DOS</code>**</h4><pre><code class="shell">#在非自洽计算时，INCAR加上SYSTEMISMEAR = -5LORBIT =10ISTART = 1ICHARG = 11LHFCALC = .TRUE.  #采用杂化泛函计算HFSCREEN = 0.2     #0.2代表HSE06，0.3代表HSE03ALGO = All   #Damped更容易收敛TIME = 0.4    PRECFOCK = FastNKRED = 2</code></pre><h4 id="5-计算能带"><a href="#5-计算能带" class="headerlink" title="5**.计算能带**"></a>5**.计算能带**</h4><blockquote><ul><li><strong>金属用<code>ISMEAR=1</code>, 半导体或绝缘体，用<code>ISMEAR=0</code>(能带就是不同k点上本征值连成的线,因为<code>ISMEAR=-5</code>正四面体法无法识别线性的<code>k-points</code></strong></li><li><strong>非自洽:非自洽就是在给定基态电子密度下的一次电子自洽，获得特定k点的能量本征值,给定电子密度下，计算特定k点的本征值，即本征能级（<code>EIGENVAL</code>文件）连起来获得能带</strong></li><li>不需要读取WAVECAR 即ISTART &#x3D; 0就可以，也不需要输出WAVECAR，即LWAVE &#x3D; .FALSE.</li><li>关于费米能级，认为dos&#x2F;自洽算出来的费米能级是准确的。通过看能带的OUTCAR对应费米能级的占据，可以检查是否是金属还是绝缘体</li></ul></blockquote><hr><pre><code class="shell">SYSTEM PREC=AccurateEDIFF =1e-5NSW = 0IBRION = -1ISIF = 2 ENCUT = 1000ISTART =1ICHARG =11 ISMEAR= 1SIGMA = 0.2NBANDS = 同自洽用的NBANDS/可以多设置一些，1.5倍吧#k点要变化，cp自洽的电荷密度（和计算态密度比差别主要在k点）cp电子密度 波函数#能带k点（特定高对称点间）（要先导入对称性 build-build symmetry)  k-points along high symmetry lines   20 ！20 intersections   Line-mode   rec（倒空间，cart笛卡尔空间）    0 0 0 ! gamma    0 0 1 ! X        * * * ! X    * * * !      #dos和band画图：交换坐标轴，合并图片，右侧；绘图完成右侧锯齿可使线条更加平滑</code></pre><ul><li><p>测试一个金属</p><p>ISMEAR &#x3D; -5的结果</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230603154355515.png" alt="image-20230603154355515"></p><p>ISMEAR &#x3D; 1 SIGMA &#x3D; 0.2的结果</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230603154452378.png" alt="image-20230603154452378"></p><p>ISMEAR &#x3D; 0 SIGMA &#x3D; 0.05的结果</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230603154524087.png" alt="image-20230603154524087"></p><p>ISMEAR &#x3D; 0 SIGMA &#x3D; 0.05 调高k点密度的结果</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230603154903386.png" alt="image-20230603154903386"></p><h4 id="6-作图"><a href="#6-作图" class="headerlink" title="6. 作图"></a>6. 作图</h4><p>&#x3D;&#x3D;自洽的费米能级是准确的，能带和dos使用同一个费米能级 需要把能带和dos里的DOSCAR的费米能级改成自洽的费米能级&#x3D;&#x3D;</p><p>&#x3D;&#x3D;自洽不要用太高密度的k点 数值误差&#x3D;&#x3D;</p></li></ul><h2 id="5-测试NCORE和KPAR"><a href="#5-测试NCORE和KPAR" class="headerlink" title="5. 测试NCORE和KPAR"></a>5. <strong>测试NCORE和KPAR</strong></h2><blockquote><p><strong>为了便于对比</strong></p><ol><li><strong>可以使用ISTART &#x3D; 1 ICHARG &#x3D; 11的方式，统一一个离子步的电子步个数，进而计算单个离子步所用时长</strong></li><li><strong>可以通过设置NELM 和NELMIN来固定电子步个数</strong></li></ol></blockquote><ul><li>1.产生INCAR</li></ul><pre><code class="shell">ncores=(1 2 4 8 12 16 18 24 )kpars=(1 2 4 8 12 16 20 24)# Create directories for each combination of parametersfor ncore in &quot;$&#123;ncores[@]&#125;&quot;; do    for kpar in &quot;$&#123;kpars[@]&#125;&quot;; do        dir=&quot;ncore$&#123;ncore&#125;-kpar$&#123;kpar&#125;&quot;        mkdir -p $dir        cp INCAR POSCAR POTCAR xiugai.sh $dir        sed -i &quot;s/NCORE = .*/NCORE = $ncore/&quot; $dir/INCAR        sed -i &quot;s/KPAR = .*/KPAR = $kpar/&quot; $dir/INCAR    donedone</code></pre><ul><li>2.计算（将所有任务提到一个节点上）</li></ul><pre><code class="shell">#!/bin/sh#SBATCH  --job-name=vasp_job  #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyuib#SBATCH  --nodes=4#SBATCH  --ntasks=192source /work/env/oneapi-2022.2.0srun hostname | sort | uniq &gt;&gt; /tmp/nodefile.$$NP=`srun hostname | wc -l`ncores=(1 2 4 8 12 16 18 24 )kpars=(4 8 )# Run VASP in each directory and save the outputfor dir in $(ls -d ncore*-kpar*); do    cd $dir    echo &quot;Running VASP with NCORE = $(grep &quot;NCORE&quot; INCAR | awk &#39;&#123;print $3&#125;&#39;), KPAR = $(grep &quot;KPAR&quot; INCAR | awk &#39;&#123;print $3&#125;&#39;)&quot;#mpirun -genv I_MPI_FABRICS shm:ofa -machinefile /tmp/nodefile.$$ -n $NP /work/software/vasp.6.1.0/vasp_std  &gt; vasp.log 2&gt;&amp;1mpirun -genv I_MPI_FABRICS shm:ofa -machinefile /tmp/nodefile.$$ -n $NP /work/software/vasp.6.1.0-oneapi2022.2.0/vasp.6.1.0/bin/vasp_std  &gt; vasp.log 2&gt;&amp;1#/work/software/vasp.6.1.0-oneapi2022.2.0/vasp.6.1.0/bin/vasp_std  &gt; vasp.log 2&gt;&amp;1#mpirun -n 48 /work/software/vasp6.1-intel2018/vasp_std &gt; vasp.log 2&gt;&amp;1    cd ..donerm -rf /tmp/nodefile.$$</code></pre><ul><li>3.提取数据</li></ul><pre><code class="shell">for dir in $(ls -d ncore*-kpar*); do    echo &quot;Running VASP with NCORE = $(grep NCORE $dir/INCAR), KPAR = $(grep &quot;KPAR&quot; $dir/INCAR)&quot;  &gt;&gt; dat    grep LOOP $dir/OUTCAR |tail -n 10 &gt;&gt; dat    done</code></pre><h2 id="6-关于扩三倍胞"><a href="#6-关于扩三倍胞" class="headerlink" title="6.关于扩三倍胞"></a>6.关于扩三倍胞</h2><ul><li><ol><li>扩胞是如何进行的</li></ol></li></ul><p><strong>from vesta</strong> </p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230513153714264.png" alt="image-20230513153714264"></p><p><strong>即</strong>$[a,b,c]P&#x3D;[a_1,b_1,c_1]$，新的a是旧有的a,b,c按照旋转矩阵第一列组合而来，依此类推。</p><p>&#x3D;&#x3D;<strong>注意：vesta在扩胞后会进行一步旋转</strong>，<strong>来得到晶格常数矩阵为下三角的晶格矩阵</strong>&#x3D;&#x3D;</p><p>只要保证扩胞矩阵的行列式为3，那么扩出来的胞就是三倍胞吗，一定不是</p><p>旋转矩阵1<br>$$<br>\begin{matrix}3&amp;0&amp;0\0&amp;1&amp;0\0&amp;0&amp;1\end{matrix}<br>$$<br>和旋转矩阵2<br>$$<br>\begin{matrix}3&amp;1&amp;0\0&amp;1&amp;0\0&amp;0&amp;1\end{matrix}<br>$$<br>行列式都是3，但是矩阵1乘出来是$[3a,b,c]$,而矩阵2乘出来是$[3a,a+b,c]$体积是不同的，非对角元</p><h2 id="7-构建POTCAR"><a href="#7-构建POTCAR" class="headerlink" title="7. 构建POTCAR"></a>7. 构建POTCAR</h2><pre><code class="python"># 字典：元素对应的赝势文件路径base_pseudo_path = &#39;/work/home/liz/vasp_pot/potpaw_PBE/&#39;pseudo_paths = &#123;    &#39;H&#39;: &#39;H/POTCAR&#39;,    &#39;Li&#39;: &#39;Li_sv/POTCAR&#39;,    &#39;Be&#39;: &#39;Be_sv/POTCAR&#39;,    &#39;B&#39;: &#39;B/POTCAR&#39;,    &#39;C&#39;: &#39;C/POTCAR&#39;,    &#39;N&#39;: &#39;N/POTCAR&#39;,    &#39;O&#39;: &#39;O/POTCAR&#39;,    &#39;F&#39;: &#39;F/POTCAR&#39;,    &#39;Ne&#39;: &#39;Ne/POTCAR&#39;,    &#39;Na&#39;: &#39;Na_pv/POTCAR&#39;,    &#39;Mg&#39;: &#39;Mg_pv/POTCAR&#39;,    &#39;Al&#39;: &#39;Al/POTCAR&#39;,    &#39;Si&#39;: &#39;Si/POTCAR&#39;,    &#39;P&#39;: &#39;P/POTCAR&#39;,    &#39;S&#39;: &#39;S/POTCAR&#39;,    &#39;Cl&#39;: &#39;Cl/POTCAR&#39;,    &#39;K&#39;: &#39;K_sv/POTCAR&#39;,    &#39;Ca&#39;: &#39;Ca_sv/POTCAR&#39;,    &#39;Sc&#39;: &#39;Sc_sv/POTCAR&#39;,    &#39;Ti&#39;: &#39;Ti_pv/POTCAR&#39;,    &#39;V&#39;: &#39;V_pv/POTCAR&#39;,    &#39;Cr&#39;: &#39;Cr_pv/POTCAR&#39;,    &#39;Mn&#39;: &#39;Mn_pv/POTCAR&#39;,    &#39;Fe&#39;: &#39;Fe_pv/POTCAR&#39;,    &#39;Co&#39;: &#39;Co/POTCAR&#39;,    &#39;Ni&#39;: &#39;Ni_pv/POTCAR&#39;,    &#39;Cu&#39;: &#39;Cu_pv/POTCAR&#39;,    &#39;Zn&#39;: &#39;Zn/POTCAR&#39;,    &#39;Ga&#39;: &#39;Ga_d/POTCAR&#39;,    &#39;Ge&#39;: &#39;Ge_d/POTCAR&#39;,    &#39;As&#39;: &#39;As/POTCAR&#39;,    &#39;Se&#39;: &#39;Se/POTCAR&#39;,    &#39;Br&#39;: &#39;Br/POTCAR&#39;,    &#39;Kr&#39;: &#39;Kr/POTCAR&#39;,    &#39;Rb&#39;: &#39;Rb_sv/POTCAR&#39;,    &#39;Sr&#39;: &#39;Sr_sv/POTCAR&#39;,    &#39;Y&#39;: &#39;Y_sv/POTCAR&#39;,    &#39;Zr&#39;: &#39;Zr_sv/POTCAR&#39;,    &#39;Nb&#39;: &#39;Nb_pv/POTCAR&#39;,    &#39;Mo&#39;: &#39;Mo_pv/POTCAR&#39;,    &#39;Tc&#39;: &#39;Tc_pv/POTCAR&#39;,    &#39;Ru&#39;: &#39;Ru_pv/POTCAR&#39;,    &#39;Rh&#39;: &#39;Rh_pv/POTCAR&#39;,    &#39;Pd&#39;: &#39;Pd/POTCAR&#39;,    &#39;Ag&#39;: &#39;Ag/POTCAR&#39;,    &#39;Cd&#39;: &#39;Cd/POTCAR&#39;,    &#39;In&#39;: &#39;In_d/POTCAR&#39;,    &#39;Sn&#39;: &#39;Sn_d/POTCAR&#39;,    &#39;Sb&#39;: &#39;Sb/POTCAR&#39;,    &#39;Te&#39;: &#39;Te/POTCAR&#39;,    &#39;I&#39;: &#39;I/POTCAR&#39;,    &#39;Xe&#39;: &#39;Xe/POTCAR&#39;,    &#39;Cs&#39;: &#39;Cs_sv/POTCAR&#39;,    &#39;Ba&#39;: &#39;Ba_sv/POTCAR&#39;,    &#39;La&#39;: &#39;La/POTCAR&#39;,    &#39;Ce&#39;: &#39;Ce/POTCAR&#39;,    &#39;Pr&#39;: &#39;Pr_3/POTCAR&#39;,    &#39;Nd&#39;: &#39;Nd_3/POTCAR&#39;,    &#39;Pm&#39;: &#39;Pm_3/POTCAR&#39;,    &#39;Sm&#39;: &#39;Sm_3/POTCAR&#39;,    &#39;Eu&#39;: &#39;Eu/POTCAR&#39;,    &#39;Gd&#39;: &#39;Gd/POTCAR&#39;,    &#39;Tb&#39;: &#39;Tb_3/POTCAR&#39;,    &#39;Dy&#39;: &#39;Dy_3/POTCAR&#39;,    &#39;Ho&#39;: &#39;Ho_3/POTCAR&#39;,    &#39;Er&#39;: &#39;Er_3/POTCAR&#39;,    &#39;Tm&#39;: &#39;Tm_3/POTCAR&#39;,    &#39;Yb&#39;: &#39;Yb_2/POTCAR&#39;,    &#39;Lu&#39;: &#39;Lu_3/POTCAR&#39;,    &#39;Hf&#39;: &#39;Hf_pv/POTCAR&#39;,    &#39;Ta&#39;: &#39;Ta_pv/POTCAR&#39;,    &#39;W&#39;: &#39;W_pv/POTCAR&#39;,    &#39;Re&#39;: &#39;Re_pv/POTCAR&#39;,    &#39;Os&#39;: &#39;Os_pv/POTCAR&#39;,    &#39;Ir&#39;: &#39;Ir/POTCAR&#39;,    &#39;Pt&#39;: &#39;Pt/POTCAR&#39;,    &#39;Au&#39;: &#39;Au/POTCAR&#39;,    &#39;Hg&#39;: &#39;Hg/POTCAR&#39;,    &#39;Tl&#39;: &#39;Tl_d/POTCAR&#39;,    &#39;Pb&#39;: &#39;Pb_d/POTCAR&#39;,    &#39;Bi&#39;: &#39;Bi/POTCAR&#39;,    &#39;Th&#39;: &#39;Th/POTCAR&#39;,    &#39;Pa&#39;: &#39;Pa/POTCAR&#39;,    &#39;U&#39;: &#39;U/POTCAR&#39;,    &#39;Np&#39;: &#39;Np/POTCAR&#39;,    &#39;Pu&#39;: &#39;Pu/POTCAR&#39;,# 添加其他元素和对应的赝势路径&#125;for element, relative_path in pseudo_paths.items():    full_path = f&quot;&#123;base_pseudo_path&#125;&#123;relative_path&#125;&quot;    pseudo_paths[element] = full_path# 读取 POSCAR 文件def read_poscar(poscar_path):    with open(poscar_path, &#39;r&#39;) as f:        lines = f.readlines()        elements = lines[5].split()        return elements# 创建大的 POTCAR 文件def create_big_potcar(elements, pseudo_paths, output_path):    with open(output_path, &#39;w&#39;) as f_out:        for element in elements:            if element in pseudo_paths:                pseudo_path = pseudo_paths[element]                with open(pseudo_path, &#39;r&#39;) as f_pseudo:                    f_out.write(f_pseudo.read())            else:                print(f&quot;赝势文件不存在或未定义：&#123;element&#125;&quot;)if __name__ == &quot;__main__&quot;:    poscar_path = &quot;POSCAR&quot;  # 输入文件名    output_potcar_path = &quot;POTCAR&quot;  # 输出的大 POTCAR 文件名    elements = read_poscar(poscar_path)    create_big_potcar(elements, pseudo_paths, output_potcar_path)    print(&quot;大的 POTCAR 文件已创建&quot;)</code></pre><h3 id="批量运行"><a href="#批量运行" class="headerlink" title="批量运行"></a>批量运行</h3><pre><code class="shell">for folder in */; do    if [ -d &quot;$folder&quot; ]; then        cp pot.py &quot;$folder&quot;        cd &quot;$folder&quot;        python pot.py &amp;        sleep 10        cd ..    fidone</code></pre><h2 id="8-计算声子谱"><a href="#8-计算声子谱" class="headerlink" title="8.计算声子谱"></a>8.计算声子谱</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918191143087.png" alt="image-20230918191143087"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918191349568.png" alt="image-20230918191349568"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918191431912.png" alt="image-20230918191431912"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918191456663.png" alt="image-20230918191456663"></p><blockquote><p> phonopy.yaml and phonopy_disp.yaml  : 创建有限位移 </p></blockquote><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918194211441.png" alt="image-20230918194211441"> </p><ul><li><p>为什么要扩胞 （减小周期性的影响，大于100个原子即可？）</p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918201329823.png" alt="image-20230918201329823"></p><p><img src="/../../%E5%9B%BE%E7%89%87/image-20230918202023049.png" alt="image-20230918202023049"></p></li></ul><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918201605726.png" alt="image-20230918201605726"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918202413543.png" alt="image-20230918202413543"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918202447854.png" alt="image-20230918202447854"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918202455356.png" alt="image-20230918202455356"></p><p>phonopy-bandplot –gnuplot band.yaml &gt; phono.dat   保存数据</p><h2 id="9-HSE06-计算能带"><a href="#9-HSE06-计算能带" class="headerlink" title="9. HSE06 计算能带"></a>9. HSE06 计算能带</h2><p><a href="http://vaspkit.cn/index.php/29.html">杂化泛函计算能带 - VASPKIT与量化软件</a></p><p><a href="https://www.vasp.at/wiki/index.php/IALGO">IALGO - Vaspwiki</a>  推荐用ALGO&#x3D;Damped或者All</p><p><a href="https://www.vasp.at/wiki/index.php/LHFCALC">LHFCALC - Vaspwiki</a></p><blockquote><p>可以直接一步算，也就是直接用HSE06的方法算能带，但是对大体系可能会比较慢</p><p>可以分两步算，先使用PBE算CHG CHGCAR （需要注意的是PBE计算时KPOINTS要删掉不带权重的部分）然后copy CHG …等，使用HSE06计算能带 ，这样应该会更快点</p><p>两种算出来的有些许差别，在误差范围内，不同的初猜电荷密度和波函数会带来结果细微不同</p></blockquote><p>&#x3D;&#x3D;算能带第一步自洽就是得到电荷密度和波函数，普通算能带直接用ISTART &#x3D; 1 读WAVECAR和ICHARGE &#x3D; 11读CHGCAR就可以了。是给算能带的电荷密度和波函数给一个初猜值。ICHARGE&#x3D;11还有一个功能是固定住了电荷密度不变。&#x3D;&#x3D;</p><p>&#x3D;&#x3D;但是在HSE计算中，如果分两步来做，第二步的ICHARG不能固定住，需要用ICHARGE&#x3D;1,这样电荷密度可以迭代，读取的只是一个初猜值，因为HSE杂化泛函和普通的不同&#x3D;&#x3D;</p><p>&#x3D;&#x3D;最终建议：直接用一步法来做，省事又省时间&#x3D;&#x3D;</p><p>&#x3D;&#x3D;需要注意的点：计算HSE06的能带不能用ISMEAR &#x3D;-5，因为不识别，可用ISMEAR&#x3D;0&#x3D;&#x3D;</p><p>&#x3D;&#x3D;师弟遇到过一个问题：一步法得到的本征值和用HSE06自洽得到的本征值不同，因此建议是算一个自洽的本征值，如果和HSE06的结果一样，那就说明没问题，如果不一样，就要先HSE自洽，再读-算能带&#x3D;&#x3D;</p><p>1.结构优化</p><p>2.产生HSE06特用的KPOINTS</p><p>包括两部分，带权重的部分和不带权重的部分，其中带权重的部分是均匀撒点的，不带权重的能带的k点路径</p><p>均匀撒点是构建一个用于后面的良好的势，然后进行后面的计算，有没有pbe自洽的初猜值对最终的影响并不大</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231011185414503.png" alt="image-20231011185414503"></p><p>3.进行PBE自洽计算(不能用ISMEAR &#x3D;-5)</p><p>需要使用均匀洒点的kpoints，可以直接把上面的kpoints不带权重的部分删除，然后把k点数目修改掉</p><p>注意：不能使用不带权重的部分，否则算出来的带隙和直接使用HSE06计算不同</p><p>4.进行HSE06能带计算(复制CHG CHGCAR WAVECAR…)</p><p>SYSTEM &#x3D; Te<br>PREC &#x3D; Normal<br>EDIFF &#x3D; 1e-6<br>ENCUT &#x3D; 300<br>NELM &#x3D; 500<br>IBRION &#x3D; -1<br>ISIF &#x3D; 2<br>ISMEAR &#x3D; 0<br>SIGMA &#x3D; 0.05<br>PSTRESS &#x3D; 0.001<br>ISTART &#x3D; 0<br>ICHARG &#x3D;2<br>NPAR &#x3D; 12<br>ALGO &#x3D; Damped</p><p>！HSE参数</p><p>LHFCALC&#x3D;.TRUE.<br>HFSCREEN &#x3D; 0.2<br>TIME &#x3D; 0.4<br>LMAXFOCK &#x3D; 4<br>PRECFOCK&#x3D;Normal</p><blockquote><p>SIGMA &#x3D; 0. 05</p><p>&#x3D;&#x3D;处理数据产生能带时vaspkit不能用常规的，要用HSE特有的，252&#x3D;&#x3D;</p></blockquote><p>EIGENVAL 是本征值文件，可以看每个k点的本征值</p><h2 id="9-自旋轨道耦合计算能带"><a href="#9-自旋轨道耦合计算能带" class="headerlink" title="9.自旋轨道耦合计算能带"></a>9.自旋轨道耦合计算能带</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230926195529367.png" alt="image-20230926195529367"></p><p>一个HSE06+SOC的能带计算</p><pre><code>SYSTEM = TePREC = NormalEDIFF = 1e-6ENCUT = 300NELM = 500IBRION = -1ISIF = 2ISMEAR = 0SIGMA = 0.05PSTRESS = 0.001ISTART = 1ICHARG =0NPAR = 12ALGO = Damped(收敛快，vaspwiki LHFCALC关键词下推荐的,all或者damped,算出来能带比较放心)#HSE06参数LHFCALC=.TRUE.HFSCREEN = 0.2TIME = 0.4LMAXFOCK = 4PRECFOCK=Normal#SOC参数ISPIN = 2LSORBIT = .TRUE.LORBMOM  = TMAGMOM   = 9*0 给定每个原子每个方向（xyz)方向的磁矩，这里是3个原子，可以先按默认值给初猜，最后OUTCAR会输出每个方向的磁矩LORBIT = 11ISYM = -1#使用GGA时的修正GGA = PSGGA_COMPAT = .FALSE.</code></pre><blockquote><p>使用LDA比PBE要更容易收敛，LDA不需要GGA和GGA_COMPAT</p></blockquote><h2 id="10-做异质结"><a href="#10-做异质结" class="headerlink" title="10 .做异质结"></a>10 .做异质结</h2><p>&#x3D;&#x3D;记住，构建完优化时要用固定晶格的优化&#x3D;&#x3D;</p><p>&#x3D;&#x3D;要加范德华力&#x3D;&#x3D;</p><p>[利用Materials Studio构建异质结的详细攻略 - 知乎 (zhihu.com)](<a href="https://zhuanlan.zhihu.com/p/291117500#:~:text=%E6%89%93%E5%BC%80Build">https://zhuanlan.zhihu.com/p/291117500#:~:text=打开Build</a> -Bulid,Layers，在Define Layers界面上导入slab1和slab2；然后点击Matching界面，检查两组参数a1、b1与a2、b2是否相近；选择Layer1、Layer2或者average合并晶胞，点击build按钮即可生成异质结结构。)</p><p>层状材料 是不应该加vdw的，只要是有周期性的材料都不应该加vdw</p><p>例子：PdSe   &#x2F;data&#x2F;home&#x2F;mym&#x2F;workplace&#x2F;xieyu&#x2F;liz&#x2F;2-cal&#x2F;8-PbSe2&#x2F;1-opt-PdSe2</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231113153952705.png" alt="image-20231113153952705"></p><p>加vdw后与文献不符合</p><h2 id="11-做差分电荷密度"><a href="#11-做差分电荷密度" class="headerlink" title="11.做差分电荷密度"></a>11.做差分电荷密度</h2><p><a href="https://blog.shishiruqi.com/2019/07/12/chgdiff/">https://blog.shishiruqi.com/2019/07/12/chgdiff/</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231115105059098.png" alt="image-20231115105059098"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231115105111192.png" alt="image-20231115105111192"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231115105127103.png" alt="image-20231115105127103"></p><h2 id="12-如何加U"><a href="#12-如何加U" class="headerlink" title="12. 如何加U"></a>12. 如何加U</h2><p><a href="https://zhuanlan.zhihu.com/p/349419162#:~:text=02">DFT+U理论及“一步”完成DFT+U多步计算 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/502440652#:~:text=DFT%2BU%E7%90%86%E8%AE%BA">带你解读DFT+U计算，如何加U - 知乎 (zhihu.com)</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240131093236149.png" alt="image-20240131093236149"></p><h2 id="13-磁性"><a href="#13-磁性" class="headerlink" title="13. 磁性"></a>13. 磁性</h2><p>材料的磁性对应的微观电子结构为<strong>电子自旋的方向并不均匀分布</strong>。</p><p>绝大多数的磁性材料计算中，电子的自旋只会平行排列（磁各向同性，是共线磁矩 </p><p>不考虑自旋的占据态能级自旋向上的能级和向下的能级相同，由同一个能级表示。</p><p>考虑共线磁矩时，自旋向上和自旋向下的能级分别输出，每个能级的电子占据数为1，共同计算费米能级。</p><p>由于自旋上和下能级大小不同，如果费米能级以下的不同自旋指标的能级数量不同，将导致体系整体出现磁矩。</p><p>对于反铁磁的情况，体系的磁密度呈现整体无磁矩，局部有磁矩的情况。</p><p>非共线磁矩</p><p>有的体系中，电子的自旋会沿不同方向排列（磁各向异性），这时磁密度通过x y z三个方向的投影表示</p><hr><p><code>Davidson</code> 算法对于磁性材料（ISPIN&#x3D;2)有可能无法收敛，这时候解决的办法是更换电子算法为RMM （veryfast)，或者手动设置磁矩 <code>MAGMOM</code></p><h2 id="14-如何设置参数加快计算速度"><a href="#14-如何设置参数加快计算速度" class="headerlink" title="14. 如何设置参数加快计算速度"></a>14. 如何设置参数加快计算速度</h2><ol><li>注意kpar 和ncore的设置，**在计算带时不要跨节点计算!**（总核数&#x2F;kpar&#x2F;ncore 应该是节点数量的整数除数) </li><li>LREAL 打开</li><li>减小KSPACING 和ENCUT</li></ol><h2 id="15-关于vasp的输出中的free-energy-TOTEN-和energy-without-entropy-和-sigma-0"><a href="#15-关于vasp的输出中的free-energy-TOTEN-和energy-without-entropy-和-sigma-0" class="headerlink" title="15. 关于vasp的输出中的free energy TOTEN 和energy without entropy 和 sigma &gt;&gt;0"></a>15. 关于vasp的输出中的free energy TOTEN 和energy without entropy 和 sigma &gt;&gt;0</h2><blockquote><p><a href="https://blog.sina.com.cn/s/blog_17589e0920102xkp0.html">Vasp输出的几种energy_郝玲娟xueer_新浪博客 (sina.com.cn)</a></p></blockquote><p>在没有展宽时，（ismear &#x3D; -5） 自由能和without能量是一致的，TOTEN和without的差异是展宽导致的</p><pre><code>For the calculation of the total energy in bulk materials, we recommend the tetrahedron method with Blöchl corrections (ISMEAR=-5). This method also gives a good account of the electronic density of states (DOS). The only drawback is that the method is not variational with respect to the partial occupancies. Therefore the calculated forces and the stress tensor can be wrong by up to 5 to 10% for metals. Only for semiconductors and insulators, the forces are correct because the partial occupancies do not vary and are either zero or one. </code></pre><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240918102339891.png" alt="image-20240918102339891"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240918102358653.png" alt="image-20240918102358653"></p><h1 id="2-关于并行参数"><a href="#2-关于并行参数" class="headerlink" title="2. 关于并行参数"></a>2. 关于并行参数</h1><p><a href="https://zhuanlan.zhihu.com/p/485153538">vasp并行参数设置 - 知乎 (zhihu.com)</a></p><p><a href="https://scc.ustc.edu.cn/zlsc/jsrj/201810/W020181016364157753668.pdf">VASP应用运行优化 (ustc.edu.cn)</a></p><p>&#x3D;&#x3D;解释&#x3D;&#x3D;</p><p>第一性原理的计算过程是计算一个体系的不同k点上许多不同的电子态，不同的电子态也称为带&#x2F;band，每个k点有很多要计算的带</p><p>假设一个场景，用一个cpu核计算一个体系，那么这个体系会先计算这个体系的第一个k点的第一个带，再计算第一个k点的第二个带，依次往后，计算第二个k点的第一个带。。。</p><p>并行指的是用多个cpu核同时计算多个任务。对一个计算而言，可以分为带并行和k点并行，也就是同时跑多少个k点，同时跑一个k点的多少个带。设置不同的并行参数，会分配给每个k点，每个k点的不同带cpu核心数。这两个并行并不是平行的，先对k点并行，然后给一个k点的带分配核数。</p><p>KPOINT 并行属于外层的并行，BAND 并行属于较内层的并行</p><p>比如一共有48核，一个k点要算的带数目为4，如果设置k点并行为6，带并行为4，那么就是同时计算6个k点，每个k点用48&#x2F;6&#x3D;8个核心来计算，同时计算一个k点的4个带，每个k点的每个带用2个核心计算。</p><p>如果一个k点要算的带数目一共只有3个呢，（当然最好设置带并行为3），假设设置带并行为2（设置为4会有一些核不进行计算），那么单个k点用48&#x2F;6&#x3D;8个核心，每个带用4个核心，同时计算2个带，但是这时候，会有一个带没有计算，在计算完一个带后，才会计算另一个k点，此时还会有一批cpu空下来，因此如果k点并行不设置为k点数目的除数，会出现空余的现象。 k点并行也一样，如果k点并行设置的太大，那么可能会有多的核数用不到</p><p>实际中应该把带并行和k点并行分开来看</p><p>一个重要的知识点</p><p>k点的并行优点是不需要通讯，因为没有数据的分发，缺点是要耗费内存。内存比较大的系统可以设置k点并行。</p><p>带的并行是把数据分发到不同的带上，这样的优点是耗费的内存少，缺点是不同带间需要通讯。当通讯带宽比较大的时候，可以把带的数目设置大一点，这样即便设置多个带并行通讯效率也不会太差；但是通讯带宽比较小时，不要设置同时并行太多带， 因为会大大增加带的通讯。</p><p>&#x3D;&#x3D;cpu核数从哪里来？&#x3D;&#x3D;</p><p>增加cpu的核数可以从两方面，一个是节点内并行，一个是多节点的并行。</p><p>节点内的并行相比节点间肯定是降低了通讯的时间的，但是有时候很难在一个节点内得到足够多的核心数，所以需要多个节点来串联计算。但是在设置并行参数时需要考虑的是尽量让k点和带的计算不要跨节点，比如给一个带分配50个核，但是一个节点只有48个核心，那么就需要去别的节点借来两个核心，由于节点间有通讯，这样会大大降低计算速度。不同节点的cpu核心串联时是依次串联的，因此可以先用第一个节点的，再用后面的。</p><p>也就是尽量保持节点间的独立性。</p><p>&#x3D;&#x3D;vasp中的并行参数&#x3D;&#x3D;</p><p>vasp中用KPAR来控制k点的并行，也就是一次计算多少个k点</p><p>KPAR默认为1，也就是并行计算一个k点，使用所有的核</p><p>vasp中用NPAR来控制带的并行，也就是每个k点同时计算多少条带  </p><p>NPAR默认值为核的数量，比如有48核，NPAR默认为48，也就是同时计算48个带，每个带用1个核心计算，这一个核心计算完这一系列带再计算其他的带，其他的k点。</p><p>如果只设置NPAR，那么默认KPAR为1，NCORE&#x3D;cpus&#x2F;NPAR</p><p>带并行会把数据按照带来分发，这样需要增加不同带之间的通讯，当通讯带宽比较大的时候，可以把带的数目设置大一点，但是通讯带宽比较小时，不要设置同时并行太多带， 因为会大大增加带的通讯。</p><p>vasp中用NCORE来控制计算一个带的核心的数量（等同于NPAR的效果。  cpus&#x2F;NCORE&#x3D;NPAR)</p><p>NCORE 默认值为1 (与NPAR的默认值为所有的核数相对应，NCORE*NPAR的默认值为总核数)</p><p>&#x3D;&#x3D;KPAR×NPAR×NCORE &#x3D; cpus&#x3D;&#x3D;</p><p>设置技巧</p><blockquote><p>KPAR控制k点并行，这个参数应该设置为k点的除数，（不一定是k点本身的数目，这样就是同时算一个带的所有k点）</p><p>节点内并行要快于节点间的并行，因此尽量保证计算过程中一个节点计算整数条带，比如设置NCORE的值为一个节点的cpu核数，或者它的除数，这样保证一条带只在一个节点上计算</p><p> The best value NCORE depends somewhat on the number of atoms in the unit cell. Values around 4 are usually ideal for 100 atoms in the unit cell. For very large unit cells (more than 400 atoms) values around 12-16 are often optimal. If you run extensive simulations for similar systems, make your own tests.</p><p>让KPAR、NPAR、NCORE三个数比较相近</p><h3 id="小体系并行"><a href="#小体系并行" class="headerlink" title="小体系并行"></a>小体系并行</h3><p>小体系的特点是原子数少, K点较多, 能带少. 因此KPAR应尽可能设大, NPAR可设为1.</p><p>在中等规模的系统(20-100 个原子)中，情况会有所不同。此时，计算的不可约k 点的数量很少（5-50），而电子能带的数量会很大(&gt;100).</p><ul><li>尽可能将 k 点并行化驱动到最大值（KPAR 尽可能大）。这里的限制因素是实际的 k 点数和可用的内存量。后者是因为更高的 KPAR 值会导致更高的内存需求。[<a href="https://link.zhihu.com/?target=https://dannyvanpoucke.be/2016/12/%23_ftn2">2]</a></li><li>使用 Gamma 版本的 VASP 仅用于 Γ 点计算。它显着降低了内存使用量（3.7Gb→ 2.8Gb&#x2F;core 用于 512 原子金刚石系统）并提高了计算效率，有时甚至提高了 2 倍。</li><li>NPAR 并行化可用于减少高 KPAR 计算的内存负载，但就计算效率而言, 增加 KPAR 优于增加 NPAR。</li><li>如果只有 NPAR 并行化可用，由于 k 点太少，并且使用大型系统，NPAR 并行化也很重要。</li></ul><p><strong>K 点并行很重要！如果要大量计算类似结构, 如长时间的MD等, 应该在计算前简单测算选取最优的KPAR&#x2F;NPAR(NCORE)参数.</strong></p><p>NCORE 与 NPAR 只 能指定一个有效</p><p>NCORE &#x3D; 8 下的运行时间经常处于最优值，且基本处于 [4,16] 空间范围内。</p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231214094205234.png" alt="image-20231214094205234"></p><h1 id="3-关于K点"><a href="#3-关于K点" class="headerlink" title="3. 关于K点"></a>3. 关于K点</h1><p>K-points里面的设置就是总共插入了多少个点，但是会由于对称性进行约化，得到的是不可约k点。比如 333出来14个k点，是因为约化了</p><p><a href="http://bbs.keinsci.com/thread-13066-1-1.html">http://bbs.keinsci.com/thread-13066-1-1.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/397873103?utm_id=0">https://zhuanlan.zhihu.com/p/397873103?utm_id=0</a></p><h2 id="关于测试K点和kSPACING"><a href="#关于测试K点和kSPACING" class="headerlink" title="关于测试K点和kSPACING"></a>关于测试K点和kSPACING</h2><p>&#x3D;&#x3D;需要保证能量差小于1mev&#x2F;atom&#x3D;&#x3D;  </p><p>&#x3D;&#x3D;k点没有想象中那么大，ENCUT没有想象中那么小&#x3D;&#x3D;</p><p>先测ENCUT再测KSPACING</p><p>**金刚石测试结果(8 atoms) **PBE54</p><p>KSPACING &#x3D; 0.1</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240109150611877.png" alt="image-20240109150611877"></p><p>KSPACING &#x3D; 0.2</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240109151749175.png" alt="image-20240109151749175"></p><p>C的ENCUT&#x3D;400 eV  用900才可以（注意是*100） KSPACING&#x3D;0.1 2920 k点  KSPACING&#x3D;0.2 365k点已经够了 </p><p>PAW_PBE 0.2 (material project中使用的)</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240109160358474.png" alt="image-20240109160358474"></p><p>石墨测试(16atoms)</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240109150705858.png" alt="image-20240109150705858"></p><p>石墨的ENCUT需要用800 eV  ，但是KSPACING可以用0.2</p><h1 id="4-计算报错"><a href="#4-计算报错" class="headerlink" title="4.计算报错"></a>4.计算报错</h1><h3 id="试试ISYM-0"><a href="#试试ISYM-0" class="headerlink" title="试试ISYM &#x3D; 0"></a>试试ISYM &#x3D; 0</h3><h3 id="1-internal-ERROR-RSPHER-running-out-of-buffer"><a href="#1-internal-ERROR-RSPHER-running-out-of-buffer" class="headerlink" title="1. internal ERROR RSPHER:running out of buffer"></a>1. internal ERROR RSPHER:running out of buffer</h3><p><strong>Abort(1) on node 15 (rank 15 in comm 0): application called MPI_Abort(MPI_COMM_WORLD, 1) - process 15</strong><br> <strong>原因：buffer传输不够</strong></p><blockquote><p><strong>解决方法：<a href="https://www.vasp.at/forum/viewtopic.php?t=2806&p=2809">https://www.vasp.at/forum/viewtopic.php?t=2806&amp;p=2809</a></strong><br><strong>​                  改nonlr.F，重新编译vasp</strong><br><strong>​                   search for the following lines in nonlr.F</strong><br><strong>IF (IRMAX &gt; NONLR_S%IRMAX) THEN</strong><br><strong>! IRMAX is the maximum global number, could be improved !!!!</strong><br>*<em>NONLR_S%IRMAX &#x3D;IRMAX <em>1.1<br>LREALLOCATE&#x3D;.TRUE.<br>ENDIF<br>IF( IRALLOC &gt; NONLR_S%IRALLOC) THEN<br>! more safety on parallel machines increase by 20 %<br>NONLR_S%IRALLOC &#x3D;IRALLOC</em>1.2</em>*<br><strong>LREALLOCATE&#x3D;.TRUE.</strong><br><strong>ENDIF</strong><br><strong>and change</strong><br><strong>NONLR_S%IRALLOC &#x3D;IRALLOC<em>1.1 to<br>NONLR_S%IRALLOC &#x3D;IRALLOC</em>1.2</strong><br><strong>and</strong><br><strong>NONLR_S%IRALLOC &#x3D;IRALLOC<em>1.2 to<br>NONLR_S%IRALLOC &#x3D;IRALLOC</em>1.3</strong></p></blockquote><h3 id="2-报错-Error-EDDDAV-Call-to-ZHEGV-failed-Returncode"><a href="#2-报错-Error-EDDDAV-Call-to-ZHEGV-failed-Returncode" class="headerlink" title="2 . 报错 Error EDDDAV: Call to ZHEGV failed. Returncode &#x3D;"></a>2 . 报错 Error EDDDAV: Call to ZHEGV failed. Returncode &#x3D;</h3><blockquote><p>**1.NPAR **</p><p><strong>2.赝势</strong></p><p>**3.ALGO  **</p><p><strong>参见 <a href="http://www.error.wiki/Error_EDDDAV:_Call_to_ZHEGV_failed%EF%BC%88%E5%9C%A8BN%E5%92%8CNSmSiO%E8%87%AA%E6%B4%BD%E4%B8%AD%E9%81%87%E5%88%B0%E8%BF%87%EF%BC%89">http://www.error.wiki/Error_EDDDAV:_Call_to_ZHEGV_failed（在BN和NSmSiO自洽中遇到过）</a></strong></p></blockquote><h3 id="3-报错-ERROR-FEXCP-supplied-Exchange-correletion-table-is-too-small-maximal-index"><a href="#3-报错-ERROR-FEXCP-supplied-Exchange-correletion-table-is-too-small-maximal-index" class="headerlink" title="3. 报错 ERROR FEXCP: supplied Exchange-correletion table is too small, maximal index :"></a>3. 报错 ERROR FEXCP: supplied Exchange-correletion table is too small, maximal index :</h3><blockquote><p><strong>编译器和vasp版本的冲突（编译的时候使用的是intel2018,使用时用intel2020会出现这样的问题），可能是POTCAR与vasp版本不兼容</strong><br><strong>vasp5.4-intel2020 vasp6.1-intel2018</strong><br><strong>一定要注意运行时使用的编译器版本和编译时使用的编译器版本相同（尤其是自己编译的）</strong></p></blockquote><h3 id="4-ERROR-FEXCP-supplied-Exchange-correletion-table-is-too-small-maximal-index-3885"><a href="#4-ERROR-FEXCP-supplied-Exchange-correletion-table-is-too-small-maximal-index-3885" class="headerlink" title="4. ERROR FEXCP: supplied Exchange-correletion table is too small, maximal index :        3885"></a>4. ERROR FEXCP: supplied Exchange-correletion table is too small, maximal index :        3885</h3><blockquote><p><strong>对称性的问题，设置ISYM &#x3D; 0</strong></p></blockquote><h3 id="5-Sub-Space-Matrix-is-not-hermitian"><a href="#5-Sub-Space-Matrix-is-not-hermitian" class="headerlink" title="5. Sub-Space-Matrix is not hermitian"></a>5. Sub-Space-Matrix is not hermitian</h3><p>​      我排查的问题是使用的节点太多了，减少使用的节点后可以运行</p><h3 id="6-HNFORM-ERROR-k-point-generating-vectors-and-reciprocal-lattice-are-incommensurate"><a href="#6-HNFORM-ERROR-k-point-generating-vectors-and-reciprocal-lattice-are-incommensurate" class="headerlink" title="6. HNFORM: ERROR: k-point generating vectors and reciprocal lattice   are incommensurate."></a>6. HNFORM: ERROR: k-point generating vectors and reciprocal lattice   are incommensurate.</h3><p>设置ISYM &#x3D; 0</p><h3 id="7-自洽不收敛"><a href="#7-自洽不收敛" class="headerlink" title="7.自洽不收敛"></a>7.自洽不收敛</h3><p>换电子算法</p><h3 id="8-内存溢出-BAD-TERMINATION-OF-ONE-OF-YOUR-APPLICATION-PROCESSES"><a href="#8-内存溢出-BAD-TERMINATION-OF-ONE-OF-YOUR-APPLICATION-PROCESSES" class="headerlink" title="8. 内存溢出&#x2F;BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES"></a>8. 内存溢出&#x2F;BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES</h3><p>  RANK 0 PID 45924 RUNNING AT comput45<br>  KILLED BY SIGNAL: 9 (Killed)</p><p>内存的问题，设置的k点太密</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240613095017005.png" alt="image-20240613095017005"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240613095302034.png" alt="image-20240613095302034"></p><h2 id="9-跑完第一个离子步报错-LAPACK-Routine-ZPOTRF-failed-INFO-1-KPOINT-1-SPIN-1"><a href="#9-跑完第一个离子步报错-LAPACK-Routine-ZPOTRF-failed-INFO-1-KPOINT-1-SPIN-1" class="headerlink" title="9. 跑完第一个离子步报错  LAPACK: Routine ZPOTRF failed! INFO:1 KPOINT:1 SPIN:1"></a>9. 跑完第一个离子步报错  LAPACK: Routine ZPOTRF failed! INFO:1 KPOINT:1 SPIN:1</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240920094137844.png" alt="image-20240920094137844"></p><p>看看是不是在优化带真空层的结构，如果用了ISIF&#x3D;3 会因为塌陷真空层太快而报错，可以改用ISIF&#x3D;2或者ISIF&#x3D;3调低 POTIM 然后循环优化</p><h1 id="5-计算脚本"><a href="#5-计算脚本" class="headerlink" title="5.计算脚本"></a>5.计算脚本</h1><h2 id="1-变压优化"><a href="#1-变压优化" class="headerlink" title="1.变压优化"></a><strong>1.变压优化</strong></h2><pre><code class="shell">for p in 100 200 300 #for i in $(seq 300 50 700)docat &gt; INCAR &lt;&lt; lizhaohenshua#cat 命令 查看文件的内容、连接文件、创建一个或多个文件和重定向输出到终端或文件 cat &gt;test;cat a b &gt; c; cat a; #cat 后跟输入之后进行标准输出#&lt;&lt;EOF是定界标识符 终结字符串必须写在行首 &gt;是重写 &gt;&gt;是追加    SYSTEM=Li   PREC = Accurate   ENCUT = 600   EDIFF = 1e-6   IBRION = 2   ISIF = 3   NSW = 200   ISMEAR = 0   SIGMA =0.05   POTIM = 0.2   KSPACING = 0.18   EDIFFG = -0.001lizhaohenshuaimpirun -np 48 vasp路径 &gt; vasp.log 2&gt;&amp;1``cp CONTCAR CONTCAR_$pcp OUTCAR OUTCAR _$pdone</code></pre><h1 id="6-tips"><a href="#6-tips" class="headerlink" title="6.tips"></a>6.tips</h1><ul><li><p><strong><code>OUTCAR</code>中的能量是晶格结构的能量，而OSZICAR中的能量E包括热浴和晶格结构的能量，<code>OZICAR</code>中的F是<code>OUTCAR</code>中的能量。按照经验来看，热浴的能量一直不平衡，但是系统的能量是平衡的。</strong></p></li><li><p><strong><code>KPOINTS</code>中，相同晶格常数应具有相同的k点密度，否则无法运行</strong></p></li><li><p><code>**vasp.log ! vasp.log! vasp.log!</code></p></li><li><p><strong>编译vasp：参考<a href="http://hmli.ustc.edu.cn/doc/app/vasp.5.4.1-vtst.htm">http://hmli.ustc.edu.cn/doc/app/vasp.5.4.1-vtst.htm</a></strong></p></li><li><p><a href="https://blog.csdn.net/zesuzesuzesu/article/details/120232558">VASP 6.1.0 + VTST + intel新OneAPI 安装编译_vasp vtst onapi-CSDN博客</a></p></li><li><p><a href="https://www.vasp.at/wiki/index.php/Installing_VASP.6.X.X">Installing VASP.6.X.X - VASP Wiki</a>  可以多核并行来编译</p><ul><li><strong>vasp的文件在桌面&#x2F;vasp&#x2F;vasp编译文件夹中</strong></li><li><strong>source &#x2F;work&#x2F;env&#x2F;intel2020</strong> </li><li><strong>把makefile.include 复制到目录</strong></li><li><strong>make all</strong></li></ul></li><li><p>*<em>加背景电荷 <code>NELECT= POTCAR</code> 中(<code>ZVAL of the element</code>) <em>POSCAR中原子个数</em></em></p></li><li><p><strong>vasp <code>ALGO= All</code> 和<code>ALGO = Fast/Normal</code>的运行效果对比</strong>  </p><ul><li><strong>1.All的能量会略高于Fast 但是不多可忽略了</strong></li><li><strong>2.All花费的时间更长  Fast的单个电子步时长会慢慢变短 但是All维持一个时间长度。因此总的花费时间更长</strong></li><li><strong>3.All每个离子步中的电子步数大致相同，但是Fast会随着离子步增加收敛需要的电子步减少</strong></li></ul></li></ul><h1 id="7-编译vasp"><a href="#7-编译vasp" class="headerlink" title="7. 编译vasp"></a>7. 编译vasp</h1><h2 id="1-只编译vasp"><a href="#1-只编译vasp" class="headerlink" title="1.只编译vasp"></a>1.只编译vasp</h2><ol><li><p><strong>把arch里对应的makefile.include复制到arch的上一文件夹</strong></p></li><li><p><strong>source  intel环境</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230510143608518.png" alt="image-20230510143608518"></p></li><li><p><strong>在makefile的文件夹下 make</strong></p></li></ol><h2 id="2-把vtst的neb方法编译进vasp"><a href="#2-把vtst的neb方法编译进vasp" class="headerlink" title="2.把vtst的neb方法编译进vasp"></a>2.把vtst的neb方法编译进vasp</h2><blockquote><p><strong>首先查看官方教程 <a href="http://toeory.cm.utexas.edu/vtsttools/">vtst安装</a><strong>，</strong>官方网站给出了具体需要复制、修改哪些行</strong></p></blockquote><ol><li><p><strong>将vtstcode文件夹的子文件夹对应版本中的所有.F文件复制到vasp的src文件夹</strong></p></li><li><p><strong>将</strong></p><pre><code>bfgs.o dynmat.o instanton.o lbfgs.o sd.o cg.o dimer.o bbm.o \fire.o lanczos.o neb.o qm.o opt.o \</code></pre><p><strong>加入到vasp的src&#x2F;.objects文件中，具体位置在chain.o之前。&#x3D;&#x3D;一共有两个chain.o，都要复制上&#x3D;&#x3D;</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230510144526781.png" alt="image-20230510144526781"></strong></p></li><li><p><strong>修改main.F</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230510144647525.png" alt="image-20230510144647525"></strong></p><ol start="4"><li><strong>source intel环境</strong></li><li><strong>复制对应版本的makefile.include</strong></li><li><strong>make</strong></li></ol><blockquote><p><strong>原始版 教程</strong></p></blockquote><p><img src="/./../../%E5%9B%BE%E7%89%87/b2c49b21b20e2461934680c97d683e7.jpg" alt="b2c49b21b20e2461934680c97d683e7"></p><h1 id="8-使用MS技巧"><a href="#8-使用MS技巧" class="headerlink" title="8. 使用MS技巧"></a>8. 使用MS技巧</h1><ol><li><p>如何去除原子周期性，这样删除一个原子不会删除所有等价位置的原子</p><p>build -symmetry-make p1</p></li><li><p>在做吸附时，如果发现复制一个分子上去会出现很多分子，这是由于主体结构包括对称性导致的，需要把主体结构make p1 然后再复制就会只出现一个分子</p></li><li><p>报错</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/110501y8ajy28r019eai10.jpg" alt="img"></p><p>原因：有道词典划词翻译？ 关掉有道就好使了</p><h1 id="9-关于用零点振动能修正自由能"><a href="#9-关于用零点振动能修正自由能" class="headerlink" title="9. 关于用零点振动能修正自由能"></a>9. 关于用零点振动能修正自由能</h1><p>见模拟方法 OER台阶图</p><h1 id="10-关于vaspkit的KPOINTS和INPUT中的KSPACING的关系"><a href="#10-关于vaspkit的KPOINTS和INPUT中的KSPACING的关系" class="headerlink" title="10. 关于vaspkit的KPOINTS和INPUT中的KSPACING的关系"></a>10. 关于vaspkit的KPOINTS和INPUT中的KSPACING的关系</h1><p>vaspkit*2Π &#x3D; KSPACING </p><p>因为vaspkit的单位是2Π&#x2F;A ,而KSPACING的单位是1&#x2F;A</p><p>vaspkit产生的KPOINTS可能会有错误，比如对真空层中一个水分子进行处理时，得到的KPOINTS是115这是不应该的</p><h1 id="10-机器使用"><a href="#10-机器使用" class="headerlink" title="10.机器使用"></a>10.机器使用</h1><p>申请192核然后用96核跑 scontrol show node nodelist 可能负载超过96，是因为开启多线程导致的，export OMP_NUM_THREADS&#x3D;1用来控制关闭多线程</p>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Te纳米线</title>
      <link href="/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/Te%E7%BA%B3%E7%B1%B3%E7%BA%BF/"/>
      <url>/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/Te%E7%BA%B3%E7%B1%B3%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><blockquote><p>A Generalized Crystallographic Description of All Tellurium Nanostructures</p></blockquote><ol><li>Te纳米线与纳米线之间并不只是范德瓦尔斯相互作用，而是有成键作用</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230605094114117.png" alt="image-20230605094114117"></p><p>2.新的Te原子既可以吸附在原有的螺旋上，也可以吸附在另一条纳米线的位置上</p><ol start="3"><li>纳米线的生长并不是沿着线的生长，而是沿着面的堆叠</li></ol><p>目前的问题：1.表面的原子需要修饰，需要怎么修饰，表面还有没有K</p><ol start="2"><li>计算旋转角度的能量（自洽还是优化）</li></ol><blockquote><p>How flat is an air-cleaved mica surface?</p></blockquote><ol><li>云母表面被大气中的污染物污染、</li><li>Al对Si的替代会带来负电荷，而层间的K离子用来补偿电荷</li><li>mica的容易切割来源于K离子与上下两层键弱的成键作用，在切割时，Al-Si四面体层的结构是不受影响的，而K层的结构是被破坏的</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230605161239392.png" alt="image-20230605161239392"></p><p>切割的云母表面具有六角的结构</p><ol start="4"><li><p>空气中切割的表面并没有表现出多余的电荷</p></li><li><p>残留有钾离子与空气中含碳原子和水反应，形成一些表面碳酸钾“岛屿”，而且，这种表面的污染物不能通过清洗去除</p></li><li><p>对于一个切开的云母，两个表面应该各自包括一半的钾离子，但是钾离子的位置是无序的。</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230605163004841.png" alt="image-20230605163004841"></p><ol start="7"><li>1.做大点基底  2.询问粗细，3.询问云母的处理方法 4. 表面到底是什么 5. 修饰方法</li><li>蓝钻结构  需要多少机时   韧性大，p型&#x2F;n型导电  </li><li>自己的计算</li><li>用K-Te化合物修饰</li></ol><blockquote><p>Van der Waals Epitaxy and Photoresponse of Hexagonal Tellurium Nanoplates on Flexible Mica Sheets</p></blockquote><ol><li>vdWE可以规避晶格失配，规避衬底的对称性，因为衬底与吸附物之间是弱的范德瓦尔斯力</li></ol><p>此外，钝化的衬底表面也有利于原子的快速迁移</p><ol start="2"><li>光学颜色与厚度有关 黑色部分说明面外生长的厚度足够大</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628202223167.png" alt="image-20230628202223167"></p><ol start="3"><li><p>也是在云母上制成的</p></li><li><p>文中报道Te在垂直于线的方向生长更容易</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628205002562.png" alt="image-20230628205002562"></p><ol start="5"><li><p>生成Te纳米板</p></li><li><p>云母使用的是O&#x2F;F层</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628210117189.png" alt="image-20230628210117189"></p><ol start="7"><li>改变温度可以调节表面上的扩散势垒</li></ol><p>炉温 750 ℃ 基底温度 500 摄氏度</p><blockquote><p>Synthesis and magnetoresistance measurement of tellurium<br>microtubes</p></blockquote><ol><li>成管的原因：六角晶系中的等效面以及倾向在能量低的面生长</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628212858542.png" alt="image-20230628212858542"></p><ol start="2"><li>低含量的Te容易导致纳米管的生成</li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628213319837.png" alt="image-20230628213319837"></p><blockquote><p>Broad spectral response of an individual tellurium nanobelt grown by molecular beam epitaxy</p></blockquote><ol><li><p>他们做的云母上的生长</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628214907960.png" alt="image-20230628214907960"></p></li><li><p>STO（SrTiO3) ，250℃</p></li></ol><p>取向不规则</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628215527820.png" alt="image-20230628215527820"></p><ol start="3"><li><p>也出现了称为纳米带的东西，说不准是面内还是面外生长</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230628220827853.png" alt="image-20230628220827853"></p></li></ol><blockquote><p>Multivalency-Driven Formation of Te-Based Monolayer Materials: A Combined First-Principles and Experimental study</p></blockquote><p>新的Te结构</p><blockquote><p>High temperature synthesis and characterization of ultrathin tellurium nanostructures</p></blockquote><ol><li><p>生长出了纳米线使用蓝宝石基底</p><p>长度几百纳米到几微米，宽度几十纳米到几百纳米</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230629101709820.png" alt="image-20230629101709820"></p><h1 id="2-晶体的成核生长与相变"><a href="#2-晶体的成核生长与相变" class="headerlink" title="2. 晶体的成核生长与相变"></a>2. 晶体的成核生长与相变</h1><ol><li><blockquote><p>Synthesis of two-dimensional materials: How computational studies can help?</p></blockquote></li></ol><p>CVD生长过程 ：吸附-成核-扩展</p><ol start="2"><li><blockquote><p>Atomistic Insights into Nucleation and Formation of Hexagonal Boron Nitride on<br>Nickel from First-Principles-Based Reactive Molecular Dynamics Simulations</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 课题研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python脚本</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/python%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/python%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-确定空间群信息"><a href="#1-确定空间群信息" class="headerlink" title="1. 确定空间群信息"></a>1. 确定空间群信息</h1><pre><code class="python">from pymatgen.core.structure import Structure, Moleculefrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerposcar = Structure.from_file(&#39;CONTCAR&#39;)analyzer = SpacegroupAnalyzer(poscar,0.05,5)print(analyzer.get_space_group_symbol())print(analyzer.get_space_group_number())</code></pre><h1 id="2-做吸附构型"><a href="#2-做吸附构型" class="headerlink" title="2. 做吸附构型"></a>2. 做吸附构型</h1><pre><code class="python">from pymatgen.core.structure import Structure, Moleculefrom pymatgen.core.lattice import Latticefrom pymatgen.ext.matproj import MPResterfrom pymatgen.analysis.adsorption import *from pymatgen.core.surface import generate_all_slabsfrom pymatgen.symmetry.analyzer import SpacegroupAnalyzerfrom matplotlib import pyplot as pltfrom pymatgen.ext.matproj import MPResterfrom pymatgen.io.vasp.inputs import Poscarfrom pymatgen.io.vasp import Poscar#---okInitial_POSCAR_File=&quot;./Initial-POSCAR&quot;poscar = Poscar.from_file(Initial_POSCAR_File)IniStructure = poscar.structureasf_ni_111 = AdsorbateSiteFinder(IniStructure)#创建一个AdsorbateSiteFinder对象。ads_sites = asf_ni_111.find_adsorption_sites()#然后用AdsorbateSiteFinder找到有可能的吸附位点。#print(ads_sites)adsorbate = Molecule(&quot;H&quot;,[[0,0,0]] )ads_structs = asf_ni_111.generate_adsorption_structures(adsorbate, repeat=[1, 1, 1])#--- ok#fig = plt.figure()index=0#for ads_struct in ads_structs:#    ads_struct.to(&#39;NewPOSCAR&#39;+str(index),&#39;poscar&#39;)#    index=index+1for cry_str in ads_structs:    Vasp_Str = Poscar(cry_str)    Vasp_Str.write_file(&#39;%dnew.vasp&#39;%index)    index=index+1</code></pre><h1 id="3-构建POTCAR"><a href="#3-构建POTCAR" class="headerlink" title="3. 构建POTCAR"></a>3. 构建POTCAR</h1><pre><code class="python"># 字典：元素对应的赝势文件路径base_pseudo_path = &#39;/work/home/liz/vasp_pot/potpaw_PBE/&#39;pseudo_paths = &#123;    &#39;H&#39;: &#39;H/POTCAR&#39;,    &#39;Li&#39;: &#39;Li_sv/POTCAR&#39;,    &#39;Be&#39;: &#39;Be_sv/POTCAR&#39;,    &#39;B&#39;: &#39;B/POTCAR&#39;,    &#39;C&#39;: &#39;C/POTCAR&#39;,    &#39;N&#39;: &#39;N/POTCAR&#39;,    &#39;O&#39;: &#39;O/POTCAR&#39;,    &#39;F&#39;: &#39;F/POTCAR&#39;,    &#39;Ne&#39;: &#39;Ne/POTCAR&#39;,    &#39;Na&#39;: &#39;Na_pv/POTCAR&#39;,    &#39;Mg&#39;: &#39;Mg_pv/POTCAR&#39;,    &#39;Al&#39;: &#39;Al/POTCAR&#39;,    &#39;Si&#39;: &#39;Si/POTCAR&#39;,    &#39;P&#39;: &#39;P/POTCAR&#39;,    &#39;S&#39;: &#39;S/POTCAR&#39;,    &#39;Cl&#39;: &#39;Cl/POTCAR&#39;,    &#39;K&#39;: &#39;K_sv/POTCAR&#39;,    &#39;Ca&#39;: &#39;Ca_sv/POTCAR&#39;,    &#39;Sc&#39;: &#39;Sc_sv/POTCAR&#39;,    &#39;Ti&#39;: &#39;Ti_pv/POTCAR&#39;,    &#39;V&#39;: &#39;V_pv/POTCAR&#39;,    &#39;Cr&#39;: &#39;Cr_pv/POTCAR&#39;,    &#39;Mn&#39;: &#39;Mn_pv/POTCAR&#39;,    &#39;Fe&#39;: &#39;Fe_pv/POTCAR&#39;,    &#39;Co&#39;: &#39;Co/POTCAR&#39;,    &#39;Ni&#39;: &#39;Ni_pv/POTCAR&#39;,    &#39;Cu&#39;: &#39;Cu_pv/POTCAR&#39;,    &#39;Zn&#39;: &#39;Zn/POTCAR&#39;,    &#39;Ga&#39;: &#39;Ga_d/POTCAR&#39;,    &#39;Ge&#39;: &#39;Ge_d/POTCAR&#39;,    &#39;As&#39;: &#39;As/POTCAR&#39;,    &#39;Se&#39;: &#39;Se/POTCAR&#39;,    &#39;Br&#39;: &#39;Br/POTCAR&#39;,    &#39;Kr&#39;: &#39;Kr/POTCAR&#39;,    &#39;Rb&#39;: &#39;Rb_sv/POTCAR&#39;,    &#39;Sr&#39;: &#39;Sr_sv/POTCAR&#39;,    &#39;Y&#39;: &#39;Y_sv/POTCAR&#39;,    &#39;Zr&#39;: &#39;Zr_sv/POTCAR&#39;,    &#39;Nb&#39;: &#39;Nb_pv/POTCAR&#39;,    &#39;Mo&#39;: &#39;Mo_pv/POTCAR&#39;,    &#39;Tc&#39;: &#39;Tc_pv/POTCAR&#39;,    &#39;Ru&#39;: &#39;Ru_pv/POTCAR&#39;,    &#39;Rh&#39;: &#39;Rh_pv/POTCAR&#39;,    &#39;Pd&#39;: &#39;Pd/POTCAR&#39;,    &#39;Ag&#39;: &#39;Ag/POTCAR&#39;,    &#39;Cd&#39;: &#39;Cd/POTCAR&#39;,    &#39;In&#39;: &#39;In_d/POTCAR&#39;,    &#39;Sn&#39;: &#39;Sn_d/POTCAR&#39;,    &#39;Sb&#39;: &#39;Sb/POTCAR&#39;,    &#39;Te&#39;: &#39;Te/POTCAR&#39;,    &#39;I&#39;: &#39;I/POTCAR&#39;,    &#39;Xe&#39;: &#39;Xe/POTCAR&#39;,    &#39;Cs&#39;: &#39;Cs_sv/POTCAR&#39;,    &#39;Ba&#39;: &#39;Ba_sv/POTCAR&#39;,    &#39;La&#39;: &#39;La/POTCAR&#39;,    &#39;Ce&#39;: &#39;Ce/POTCAR&#39;,    &#39;Pr&#39;: &#39;Pr_3/POTCAR&#39;,    &#39;Nd&#39;: &#39;Nd_3/POTCAR&#39;,    &#39;Pm&#39;: &#39;Pm_3/POTCAR&#39;,    &#39;Sm&#39;: &#39;Sm_3/POTCAR&#39;,    &#39;Eu&#39;: &#39;Eu/POTCAR&#39;,    &#39;Gd&#39;: &#39;Gd/POTCAR&#39;,    &#39;Tb&#39;: &#39;Tb_3/POTCAR&#39;,    &#39;Dy&#39;: &#39;Dy_3/POTCAR&#39;,    &#39;Ho&#39;: &#39;Ho_3/POTCAR&#39;,    &#39;Er&#39;: &#39;Er_3/POTCAR&#39;,    &#39;Tm&#39;: &#39;Tm_3/POTCAR&#39;,    &#39;Yb&#39;: &#39;Yb_2/POTCAR&#39;,    &#39;Lu&#39;: &#39;Lu_3/POTCAR&#39;,    &#39;Hf&#39;: &#39;Hf_pv/POTCAR&#39;,    &#39;Ta&#39;: &#39;Ta_pv/POTCAR&#39;,    &#39;W&#39;: &#39;W_pv/POTCAR&#39;,    &#39;Re&#39;: &#39;Re_pv/POTCAR&#39;,    &#39;Os&#39;: &#39;Os_pv/POTCAR&#39;,    &#39;Ir&#39;: &#39;Ir/POTCAR&#39;,    &#39;Pt&#39;: &#39;Pt/POTCAR&#39;,    &#39;Au&#39;: &#39;Au/POTCAR&#39;,    &#39;Hg&#39;: &#39;Hg/POTCAR&#39;,    &#39;Tl&#39;: &#39;Tl_d/POTCAR&#39;,    &#39;Pb&#39;: &#39;Pb_d/POTCAR&#39;,    &#39;Bi&#39;: &#39;Bi/POTCAR&#39;,    &#39;Th&#39;: &#39;Th/POTCAR&#39;,    &#39;Pa&#39;: &#39;Pa/POTCAR&#39;,    &#39;U&#39;: &#39;U/POTCAR&#39;,    &#39;Np&#39;: &#39;Np/POTCAR&#39;,    &#39;Pu&#39;: &#39;Pu/POTCAR&#39;,# 添加其他元素和对应的赝势路径&#125;for element, relative_path in pseudo_paths.items():    full_path = f&quot;&#123;base_pseudo_path&#125;&#123;relative_path&#125;&quot;    pseudo_paths[element] = full_path# 读取 POSCAR 文件def read_poscar(poscar_path):    with open(poscar_path, &#39;r&#39;) as f:        lines = f.readlines()        elements = lines[5].split()        return elements# 创建大的 POTCAR 文件def create_big_potcar(elements, pseudo_paths, output_path):    with open(output_path, &#39;w&#39;) as f_out:        for element in elements:            if element in pseudo_paths:                pseudo_path = pseudo_paths[element]                with open(pseudo_path, &#39;r&#39;) as f_pseudo:                    f_out.write(f_pseudo.read())            else:                print(f&quot;赝势文件不存在或未定义：&#123;element&#125;&quot;)if __name__ == &quot;__main__&quot;:    poscar_path = &quot;POSCAR&quot;  # 输入文件名    output_potcar_path = &quot;POTCAR&quot;  # 输出的大 POTCAR 文件名    elements = read_poscar(poscar_path)    create_big_potcar(elements, pseudo_paths, output_potcar_path)    print(&quot;大的 POTCAR 文件已创建&quot;)</code></pre><h1 id="4-提任务"><a href="#4-提任务" class="headerlink" title="4. 提任务"></a>4. 提任务</h1><h3 id="提到不同节点"><a href="#提到不同节点" class="headerlink" title="提到不同节点"></a>提到不同节点</h3><pre><code class="shell">for folder in */; do    if [ -d &quot;$folder&quot; ]; then        cp pot.py &quot;$folder&quot;        cd &quot;$folder&quot;        python pot.py &amp;        sleep 10        cd ..    fidone</code></pre><pre><code class="shell">for folder in */;do cp KPOINTS make-pot.py &quot;$folder&quot;;cd &quot;$folder&quot;;python make-pot.py;sleep  5;cd ..;done</code></pre><h3 id="把任务提到一个节点上"><a href="#把任务提到一个节点上" class="headerlink" title="把任务提到一个节点上"></a>把任务提到一个节点上</h3><pre><code class="shell">for folder in */; do    # 进入当前文件夹    cd &quot;$folder&quot;    # 运行任务    mpirun -n 48 /home/software/apps/vasp/intelmpi/5.4.4/bin/vasp &gt; vasp.log 2&gt;&amp;1 &amp;    # 等待当前任务完成    wait $!    echo &quot;Task completed in $folder&quot;    # 返回上级目录    cd ..done</code></pre><h1 id="5-批量转换-cif"><a href="#5-批量转换-cif" class="headerlink" title="5. 批量转换.cif"></a>5. 批量转换.cif</h1><pre><code class="python">from pymatgen.core import Structurefrom pymatgen.io.vasp.inputs import Poscarfor i in range(0,361,10):   cif_file = f&quot;&#123;i&#125;.cif&quot;   vasp_file = f&quot;&#123;i&#125;.vasp&quot;   structure = Structure.from_file(cif_file)   vasp_str = Poscar(structure)   vasp_str.write_file(vasp_file)</code></pre><h1 id="6-按照自己选定的轴旋转分子"><a href="#6-按照自己选定的轴旋转分子" class="headerlink" title="6. 按照自己选定的轴旋转分子"></a>6. 按照自己选定的轴旋转分子</h1><p>相当于是在ab平面内旋转，应该也可以做成在ac平面或者bc平面的旋转</p><p>依据的原理：</p><p><img src="/./../../%E5%9B%BE%E7%89%87/c01b1c44d8d60fee02cbac775926010.jpg" alt="c01b1c44d8d60fee02cbac775926010"></p><pre><code class="python">import math  import numpyfrom pymatgen.core import Structurefrom pymatgen.io.vasp.inputs import Poscardef transform_coordinates(x1, y1,x2,y2, angle):    x=x2-x1    y=y2-y1#    a=math.sqrt(x**2 + y**2)    # 计算x&#39;    x_prime = x*math.cos(angle) - y*math.sin(angle)     # 计算y&#39;      y_prime = x*math.sin(angle) + y*math.cos(angle)      aa = math.sqrt(x_prime**2 + y_prime**2)    return x_prime, y_primeposcar = Poscar.from_file(&#39;POSCAR&#39;)structure = poscar.structure#设置旋转点rotation_point = structure[0]x_coord,y_coord,_= rotation_point.coords#设置旋转角度/设置每步旋转的角度ten = math.pi/18for a in range(1,37):    m = ten#设置要旋转的原子的次序    for atom in structure[1:]:        x_coord_rotation, y_coord_rotation, _ = atom.coords        new_x,new_y= transform_coordinates(x_coord,y_coord,x_coord_rotation,y_coord_rotation,m)        new_x1 = new_x + x_coord        new_y1 = new_y + y_coord#注意下面有一个递增的效果，因为是直接修改的原来的坐标        atom.coords = [new_x1,new_y1,atom.coords[2]]    new_poscar = Poscar(structure)    new_poscar.write_file(f&quot;&#123;a&#125;.vasp&quot;)</code></pre><h1 id="7-绘制图像"><a href="#7-绘制图像" class="headerlink" title="7. 绘制图像"></a>7. 绘制图像</h1><h2 id="1-绘制并排图像"><a href="#1-绘制并排图像" class="headerlink" title="1. 绘制并排图像"></a>1. 绘制并排图像</h2><p>python  .py   file1 fil2  name</p><pre><code class="python">import argparseimport matplotlib.pyplot as plt# 创建命令行参数解析器parser = argparse.ArgumentParser(description=&#39;Plot data from two files.&#39;)# 添加命令行参数选项parser.add_argument(&#39;file1&#39;, help=&#39;First data file to plot&#39;)parser.add_argument(&#39;file2&#39;, help=&#39;Second data file to plot&#39;)parser.add_argument(&#39;title&#39;, help=&#39;Title for the plot&#39;)# 解析命令行参数args = parser.parse_args()# 读取第一个数据文件data1 = open(args.file1, &#39;r&#39;).readlines()x1 = [float(line.split()[0]) for line in data1]y1 = [float(line.split()[1]) for line in data1]# 读取第二个数据文件data2 = open(args.file2, &#39;r&#39;).readlines()x2 = [float(line.split()[0]) for line in data2]y2 = [float(line.split()[1]) for line in data2]# 创建两个子图fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(8, 4))# 绘制第一个图ax1.plot(x1, y1, label=args.file1)ax1.set_title(&#39;Plot 1&#39;)ax1.set_xlabel(&#39;X-axis&#39;)ax1.set_ylabel(&#39;Y-axis&#39;)ax1.legend()# 绘制第二个图ax2.plot(x2, y2, label=args.file2)ax2.set_title(&#39;Plot 2&#39;)ax2.set_xlabel(&#39;X-axis&#39;)ax2.set_ylabel(&#39;Y-axis&#39;)ax2.legend()# 设置图的标题为传入的参数值plt.suptitle(args.title)# 调整子图之间的距离plt.tight_layout()plt.savefig(args.title + &#39;.png&#39;) # 显示图形plt.show()</code></pre><h2 id="2-计算不同百分比斜率"><a href="#2-计算不同百分比斜率" class="headerlink" title="2. 计算不同百分比斜率"></a>2. 计算不同百分比斜率</h2><pre><code class="python">import numpy as npfrom scipy import stats# 读取数据文件并存储数据data = np.loadtxt(&#39;newdata2.txt&#39;)# 定义不同的百分比值percentages = range(1,100)print(percentages)# 针对每个百分比执行线性拟合for percent_to_select in percentages:    print (percent_to_select,end=&#39; &#39;)    # 计算要选择的数据点数量    num_points_to_select = int(len(data) * percent_to_select / 100)    # 根据百分比选择数据点    selected_data = data[:num_points_to_select]    # 线性拟合并计算斜率    x = selected_data[:, 0]  # 假设第一列是 x 值    y = selected_data[:, 1]  # 假设第二列是 y 值    # 执行线性回归拟合    slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)    # 输出斜率    print (slope)print()</code></pre><h2 id="3-根据log-lammps处理得到能量、势能的变化"><a href="#3-根据log-lammps处理得到能量、势能的变化" class="headerlink" title="3.根据log.lammps处理得到能量、势能的变化"></a>3.根据log.lammps处理得到能量、势能的变化</h2><pre><code class="python">import matplotlibmatplotlib.use(&#39;Agg&#39;)  # 使用非图形化的Agg后端import matplotlib.pyplot as pltimport numpy as np# 从.dat文件中读取数据data = np.genfromtxt(&#39;log.dat&#39;, delimiter=None, skip_header=1)x = data[:, 1]  # 第二列作为x轴y1 = data[:, 2]  # 第三列作为第一组y值y2 = data[:, 3]  # 第四列作为第二组y值y3 = data[:, 4]  # 第五列作为第三组y值# 创建三个子图fig, axes = plt.subplots(1, 3, figsize=(15, 5))# 绘制第一个图axes[0].plot(x, y1, label=&#39;Column 3&#39;)axes[0].set_title(&#39;Plot 1&#39;)axes[0].set_xlabel(&#39;X-axis&#39;)axes[0].set_ylabel(&#39;Y-axis&#39;)axes[0].legend()# 绘制第二个图axes[1].plot(x, y2, label=&#39;Column 4&#39;)axes[1].set_title(&#39;Plot 2&#39;)axes[1].set_xlabel(&#39;X-axis&#39;)axes[1].set_ylabel(&#39;Y-axis&#39;)axes[1].legend()# 绘制第三个图axes[2].plot(x, y3, label=&#39;Column 5&#39;)axes[2].set_title(&#39;Plot 3&#39;)axes[2].set_xlabel(&#39;X-axis&#39;)axes[2].set_ylabel(&#39;Y-axis&#39;)axes[2].legend()# 保存为all.pngplt.tight_layout()plt.savefig(&#39;all.png&#39;)</code></pre><h1 id="8-根据需要直接求出斜率"><a href="#8-根据需要直接求出斜率" class="headerlink" title="8.根据需要直接求出斜率"></a>8.根据需要直接求出斜率</h1><p>python 文件名 百分比</p><pre><code class="python">import argparseimport numpy as npfrom scipy import stats# 创建命令行参数解析器parser = argparse.ArgumentParser(description=&#39;Perform linear regression on data.&#39;)# 添加命令行参数选项parser.add_argument(&#39;file&#39;, type=str, help=&#39;Data file name&#39;, default=&#39;a.dat&#39;)parser.add_argument(&#39;percent&#39;, type=float, help=&#39;Percentage of data to use for regression&#39;, default=80)# 解析命令行参数args = parser.parse_args()# 1. 读取数据文件并存储数据data = np.loadtxt(args.file)# 2. 选择指定百分比的数据点percent_to_select = args.percentnum_points_to_select = int(len(data) * percent_to_select / 100)selected_data = data[:num_points_to_select]# 3. 线性拟合并计算斜率x = selected_data[:, 0]  # 假设第一列是 x 值y = selected_data[:, 1]  # 假设第二列是 y 值# 执行线性回归拟合slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)# 输出斜率print(f&quot;斜率: &#123;slope&#125;&quot;)</code></pre><h2 id="2-同一条轨迹的不同百分比"><a href="#2-同一条轨迹的不同百分比" class="headerlink" title="2. 同一条轨迹的不同百分比"></a>2. 同一条轨迹的不同百分比</h2><pre><code class="python">import numpy as npfrom scipy import statsimport math # 读取数据文件并存储数据data = np.loadtxt(&#39;msd.dat&#39;)# 定义不同的百分比值percentages = range(1,101)print(percentages)# 针对每个百分比执行线性拟合for percent_to_select in percentages:    print (percent_to_select,end=&#39; &#39;)    # 计算要选择的数据点数量    num_points_to_select = int(len(data) * percent_to_select / 100)    # 根据百分比选择数据点    selected_data = data[:num_points_to_select]    # 线性拟合并计算斜率    x = selected_data[:, 0]  # 假设第一列是 x 值    y = selected_data[:, 4]  # 假设第二列是 y 值    # 执行线性回归拟合    slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)    # 输出斜率    print (slope,end=&#39; &#39;)    D= slope*1000/60000    print(D,end=&#39; &#39;)    logD = math.log10(D)    print(logD)print()</code></pre><h1 id="9-把一个不带对称性的cif写成标准的带空间群和wycoff-posion的cif"><a href="#9-把一个不带对称性的cif写成标准的带空间群和wycoff-posion的cif" class="headerlink" title="9. 把一个不带对称性的cif写成标准的带空间群和wycoff posion的cif"></a>9. 把一个不带对称性的cif写成标准的带空间群和wycoff posion的cif</h1><p>可以自己手动改写，找到空间群后手动改写</p><p><a href="https://www.cryst.ehu.es/cgi-bin/cryst/programs/nph-wp-list?gnum=193">Wyckoff Positions of Space Groups (ehu.es)</a></p><p>这个网站找对称性，注意小数点后输入至少5位</p><p>可能存在一个wycoff positon有两个点占用的情况，需要一个一个手动来做</p><h1 id="10-处理POSCAR"><a href="#10-处理POSCAR" class="headerlink" title="10.处理POSCAR"></a>10.处理POSCAR</h1><pre><code class="python">&quot;&quot;&quot;输入可以有多种形式,输出目前只有writ_poscar可以&quot;&quot;&quot;import numpy as npdef read_poscar(filename):    with open(filename,&#39;r&#39;) as file:        lines =file.readlines()    title =lines[0].strip()    scale =float(lines[1].strip())    #for i in range(2,5):    #    lattice_list.append(list(map(float,line[i].split())))    #lattice_array=np.array(lattice_list)    lattice_vectors = np.array([list(map(float,lines[i].split())) for i in range(2,5)])    element_type=lines[5].split()    atomnumbers=np.array(list(map(int,lines[6].split())))    atompositions=np.array([list(map(float,lines[i].split())) for i in range(8,8+sum(atomnumbers))])    cor_type = lines[7].strip()    if cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions[atompositions &lt; 0]+=1        atompositions[atompositions &gt;=1]-=1    elif cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    return(title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions)def write_poscar(filename,title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions):     with open(filename,&#39;w&#39;) as file:        file.write(f&quot;&#123;title&#125;\n&quot;)        file.write(f&quot;&#123;scale&#125;\n&quot;)        for vec in lattice_vectors:            file.write(f&quot;&#123;vec[0]:.8f&#125;  &#123;vec[1]:.8f&#125;  &#123;vec[2]:.8f&#125;\n&quot;)        #&quot;  &quot;.join用于将可迭代对象的元素以空格连接起来        file.write(&quot;  &quot;.join(element_type)+ &quot;\n&quot;)        file.write(&quot;  &quot;.join(map(str,atomnumbers))+ &quot;\n&quot;)        file.write(f&quot;&#123;cor_type&#125;\n&quot;)        for pos in atompositions:            file.write(f&quot;&#123;pos[0]:.8f&#125;  &#123;pos[1]:.8f&#125;  &#123;pos[2]:.8f&#125;\n&quot;)#输出不同类型原子的坐标def atom_pos(atomnumbers,atompositions):    atom_pos = np.split(atompositions,np.cumsum(atomnumbers)[:-1])    return atom_pos        &quot;&quot;&quot;功能区&quot;&quot;&quot;#计算体积def cal_volume(lattice_vectors):    volume = np.abs(np.dot(lattice_vectors[0],np.cross(lattice_vectors[1],lattice_vectors[2])))    return volume#转换分数坐标为笛卡尔坐标def change_dir_to_car(filename):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= read_poscar(filename)    if cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        pass    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        atompositions = np.dot(atompositions,lattice_vectors)        cor_type = &quot;Cartesian&quot;    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#笛卡尔坐标转换为分数坐标def change_car_to_dir(filename):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions = read_poscar(filename)    if cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:        atompositions = np.dot(atompositions,np.linalg.inv(lattice_vectors))        cor_type = &quot;Direct&quot;        atompositions[atompositions &lt; 0]+=1        atompositions[atompositions &gt;=1]-=1    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        pass    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#晶格向量的变换def lattice_change(filename,cell_type):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= change_car_to_dir(filename)    if cell_type == &#39;211&#39;:        pass    elif cell_type == &quot;121&quot;:        middle_value = lattice_vectors[0].copy()        lattice_vectors[0] = lattice_vectors[1]        lattice_vectors[1] = lattice_vectors[2]        lattice_vectors[2] = middle_value        middle_value2 = atompositions[:,0].copy()        atompositions[:,0] = atompositions[:,1]        atompositions[:,1] = atompositions[:,2]        atompositions[:,2] = middle_value2    elif cell_type == &quot;112&quot;:        middle_value = lattice_vectors[0].copy()        lattice_vectors[0] = lattice_vectors[2]        lattice_vectors[2] = lattice_vectors[1]        lattice_vectors[1] = middle_value        middle_value2 = atompositions[:,0].copy        atompositions[:,0] = atompositions[:,2]        atompositions[:,2] = atompositions[:,1]        atompositions[:,1] = middle_value2    return title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions#将211晶胞分解为两个111晶胞def split_211(input_file,cell_type,output_file1,output_file2):    title,scale,lattice_vectors,element_type,atomnumbers,cor_type,atompositions= lattice_change(input_file,cell_type)    atom_type_pos = atom_pos(atomnumbers,atompositions)    total_atoms1 = []    total_atoms_number1 = []    total_atoms2 = []    total_atoms_number2 = []    if cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        for sub_atom_type_pos in atom_type_pos:            print(sub_atom_type_pos)            coord_1=sub_atom_type_pos[sub_atom_type_pos[:,0]&lt;=0.48].copy()            total_atoms1.append(coord_1)            total_atoms_number1.append(len(coord_1))                    coord_2=sub_atom_type_pos[sub_atom_type_pos[:,0]&gt;0.52].copy()            total_atoms2.append(coord_2)            total_atoms_number2.append(len(coord_2))    # elif cor_type.lower() == &quot;cartesian&quot; or cor_type.lower() == &quot;c&quot;:    #     for sub_atom_type_pos in atom_type_pos:    #         sub_atom_type_pos=np.dot(sub_atom_type_pos,np.linalg.inv(lattice_vectors))    #         sub_atom_type_pos[sub_atom_type_pos &lt; 0]+=1    #         sub_atom_type_pos[sub_atom_type_pos &gt;=1]-=1    #         coord_1=sub_atom_type_pos[sub_atom_type_pos[:,0]&lt;=0.5].copy()    #         total_atoms1.append(coord_1)    #         total_atoms_number1.append(len(coord_1))            #         coord_2=sub_atom_type_pos[sub_atom_type_pos[:,0]&gt;0.5].copy()    #         total_atoms2.append(coord_2)    #         total_atoms_number2.append(len(coord_2))    #     cor_type = &quot;Direct&quot;    total_atoms1=np.vstack(total_atoms1)    total_atoms2=np.vstack(total_atoms2)    total_atoms1=np.dot(total_atoms1,lattice_vectors)    total_atoms2=np.dot(total_atoms2,lattice_vectors)    lattice_vectors[0]/=2    cor_type =&quot;Cartesian&quot;    # print(total_atoms1)    # print(total_atoms_number1)    write_poscar(output_file1,title,scale,lattice_vectors,element_type,total_atoms_number1,cor_type,total_atoms1)    write_poscar(output_file2,title,scale,lattice_vectors,element_type,total_atoms_number2,cor_type,total_atoms2)#POSCAR坐标的修改def coords_change(axis,value,cor_type,atompositions):    if cor_type.lower() == &quot;Cartesian&quot; or cor_type.lower() == &quot;c&quot;:        print(&quot;use change_car_to_dir to input&quot;)    elif cor_type.lower() == &quot;direct&quot; or cor_type.lower() == &quot;d&quot;:        if axis == &#39;x&#39;:           atompositions[:,0] += value        elif axis == &#39;y&#39;:           atompositions[:,1] += value        elif axis == &#39;z&#39;:           atompositions[:,2] += value        else:            raise ValueError(f&quot;invalid axis&quot;)    else:        raise ValueError(f&quot;invalid cor_type&quot;)    return atompositions</code></pre><h1 id="11-处理XDATCAR"><a href="#11-处理XDATCAR" class="headerlink" title="11. 处理XDATCAR"></a>11. 处理XDATCAR</h1><pre><code class="python">#只适用于NVT模拟import numpy as npdef read_xdatcar(filename):    with open (filename, &#39;r&#39;) as file:        lines = file.readlines()        title=lines[0].strip()        scale=float(lines[1].strip())        lattice_vectors=np.array([list(map(float,lines[i].split())) for i in range(2,5)])        element_type=lines[5].split()        atom_numbers=np.array(list(map(int,lines[6].split())))        total_atom=np.sum(atom_numbers)        cor_type = lines[7].split()[0]        if cor_type.lower()==&quot;direct&quot; or &quot;d&quot;:            step_positions =[]            for i in range(7,len(lines),total_atom+1):                atompositions=np.array([list(map(float,lines[j].split())) for j in range(i+1,i+1+total_atom)])                step_positions.append(atompositions)        else:            raise ValueError(&quot;unknown coordinate type!&quot;)        #序号是从0开始，第一个序号对应的结构是1        step_positions=np.array(step_positions)        return title,scale,lattice_vectors,element_type,atom_numbers,cor_type,step_positions def unwrap_xdatcar(filename):     title,scale,lattice_vectors,element_type,atom_numbers,cor_type,step_positions=read_xdatcar(filename)    total_atom=np.sum(atom_numbers)    all_step=len(step_positions)    for i in range(1,all_step):        for j in range(total_atom):            if step_positions[i][j][0]-step_positions[i-1][j][0]&gt;=0.5:                for k in range(i,all_step):                    step_positions[k][j][0]-=1             elif step_positions[i][j][0]-step_positions[i-1][j][0]&lt;-0.5:                for k in range(i,all_step):                    step_positions[k][j][0]+=1            if step_positions[i][j][1]-step_positions[i-1][j][1]&gt;=0.5:                for k in range(i,all_step):                    step_positions[k][j][1]-=1            elif step_positions[i][j][1]-step_positions[i-1][j][1]&lt;-0.5:                for k in range(i,all_step):                    step_positions[k][j][1]+=1            if step_positions[i][j][2]-step_positions[i-1][j][2]&gt;=0.5:                for k in range(i,all_step):                    step_positions[k][j][2]-=1            elif step_positions[i][j][2]-step_positions[i-1][j][2]&lt;-0.5:                for k in range(i,all_step):                    step_positions[k][j][2]+=1    return title,scale,lattice_vectors,element_type,atom_numbers,cor_type,step_positionsdef write_xdatcar(filename,title,scale,lattice_vectors,element_type,atom_numbers,cor_type,step_positions):    with open (filename,&quot;w&quot;) as file:        file.write(f&quot;&#123;title&#125;\n&quot;)        file.write(f&quot;&#123;scale&#125;\n&quot;)        for vec in lattice_vectors:            file.write(f&quot;&#123;vec[0]:.8f&#125;  &#123;vec[1]:.8f&#125;  &#123;vec[2]:.8f&#125;\n&quot;)        file.write(&quot;  &quot;.join(element_type)+ &quot;\n&quot;)        file.write(&quot;  &quot;.join(map(str,atom_numbers))+ &quot;\n&quot;)        for i in range(len(step_positions)):            file.write(f&quot;Direct configuration= &#123;i+1&#125;\n&quot;)        #这里的等号必须紧挨着tion,不然会报错            for pos in step_positions[i]:                file.write(f&quot;&#123;pos[0]:.8f&#125;  &#123;pos[1]:.8f&#125;  &#123;pos[2]:.8f&#125;\n&quot;)&quot;&quot;&quot;功能区&quot;&quot;&quot;#输出某一帧作为POSCARdef write_step(step_number,filename_output,title,scale,lattice_vectors,element_type,atom_numbers,cor_type,step_positions):#x是帧数    step_number =step_number-1    with open (filename_output,&quot;w&quot;) as file:        file.write(f&quot;&#123;title&#125;\n&quot;)        file.write(f&quot;&#123;scale&#125;\n&quot;)        for vec in lattice_vectors:            file.write(f&quot;&#123;vec[0]:.8f&#125;  &#123;vec[1]:.8f&#125;  &#123;vec[2]:.8f&#125;\n&quot;)        file.write(&quot;  &quot;.join(element_type)+ &quot;\n&quot;)        file.write(&quot;  &quot;.join(map(str,atom_numbers))+ &quot;\n&quot;)        file.write(f&quot;&#123;cor_type&#125;\n&quot;)        for pos in step_positions[step_number]:            file.write(f&quot;&#123;pos[0]:.8f&#125;  &#123;pos[1]:.8f&#125;  &#123;pos[2]:.8f&#125;\n&quot;)# 求x原子每步移动的距离def diff_atom_positio(step_positions_unwrapped,atom_number):#unwrapped step positions来源于unwrap_xdatcar#x是第几个原子    atom_number=atom_number-1    all_step=len(step_positions_unwrapped)    diff_vector=[]    for i in range(all_step):        if i &lt;= all_step-2:            print(i)            diff_vector.append(step_positions_unwrapped[i+1][atom_number]-step_positions_unwrapped[i][atom_number])    diff_vector=np.array(diff_vector)    diff_distance=np.sqrt(np.sum(diff_vector**2,axis=1))    return(diff_distance,diff_vector)    </code></pre><h1 id="12-计算距离矩阵"><a href="#12-计算距离矩阵" class="headerlink" title="12 计算距离矩阵"></a>12 计算距离矩阵</h1><pre><code class="python">from pymatgen.core import Structureimport numpy as npimport oslowest_distance =[]for i in range(0,70000):    print(i)    filename=f&quot;&#123;i&#125;.vasp&quot;    if os.path.exists(filename):        structure = Structure.from_file(filename)        na_indices = [i for i, site in enumerate(structure) if site.specie.symbol == &quot;Na&quot;]# 初始化距离矩阵        na_count = len(na_indices)        distance_matrix = np.zeros((na_count, na_count))# 计算钠原子之间的距离        for i in range(na_count):            for j in range(i + 1, na_count):                distance = structure.get_distance(na_indices[i], na_indices[j])                distance_matrix[i, j] = distance                distance_matrix[j, i] = distance        np.fill_diagonal(distance_matrix, 10)        print(np.min(distance_matrix))        lowest_distance.append(np.min(distance_matrix))    else:        continue     lowest_distance =np.array(lowest_distance)np.savetxt(&#39;distance.txt&#39;,lowest_distance)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NEB计算</title>
      <link href="/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/NEB%E8%AE%A1%E7%AE%97/"/>
      <url>/2024/05/25/2-%E6%A8%A1%E6%8B%9F%E6%96%B9%E6%B3%95/NEB%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="得到计算前后初末态的构型"><a href="#得到计算前后初末态的构型" class="headerlink" title="得到计算前后初末态的构型"></a>得到计算前后初末态的构型</h1><blockquote><p><strong>要求原子在同一个位置，最开始或者最末尾</strong></p></blockquote><pre><code class="shell">rm start.vasp end.vaspa=9cp 00/POSCAR start.vaspcp 00/POSCAR end.vaspfor i in $(seq 1 1 8)dosed -n $&#123;a&#125;p 0$i/POSCAR &gt;&gt; start.vaspdonesed -n $&#123;a&#125;p 09/POSCAR &gt;&gt; start.vaspfor i in $(seq 1 1 8)dosed -n $&#123;a&#125;p 0$i/CONTCAR &gt;&gt; end.vaspdonesed -n $&#123;a&#125;p 09/POSCAR &gt;&gt; end.vaspsed &#39;6s/$/Na/; 7s/$/9/&#39; start.vasp &gt; star.dat &amp;&amp; mv star.dat start.vaspsed &#39;6s/$/Na/; 7s/$/9/&#39; end.vasp &gt; en.dat &amp;&amp; mv en.dat end.vasp</code></pre><p><strong>需要修改POSCAR中的原子数目</strong></p><h1 id="快速产生初末态的结构构型"><a href="#快速产生初末态的结构构型" class="headerlink" title="快速产生初末态的结构构型"></a>快速产生初末态的结构构型</h1><pre><code class="python">#注意：atom1的序号要小于atom2 ,toline要小于atom1和atom2，也就是toline是本种元素的第一行#需要修改的两个原子的行数atom1 = 35atom2 = 36#需要移动到的行数toline = 9#第几个元素numelement =1 #python从0开始计算atom1=atom1-1atom2=atom2-1toline=toline-1numelement = numelement-1elementline =6 # 1. 读取文件内容with open(&#39;POSCAR&#39;, &#39;r&#39;) as file:    lines = file.readlines()# 2. 将第35行移到第9行lines.insert(toline, lines.pop(atom1))lines.insert((toline+1), lines.pop(atom2))element= lines[elementline]numbers=element.split()numbers[numelement]=str(int(numbers[numelement])-1)lines[elementline] = &#39; &#39;.join(numbers) + &#39;\n&#39;new_lines_chu = [line for i, line in enumerate(lines) if i != toline]new_lines_mo = [line for i, line in enumerate(lines) if i != (toline+1)]# 3. 写回文件with open(&#39;chu.vasp&#39;, &#39;w&#39;) as file:    file.writelines(new_lines_chu)with open(&#39;mo.vasp&#39;, &#39;w&#39;) as file:    file.writelines(new_lines_mo)</code></pre><h1 id="批量做neb的中间态"><a href="#批量做neb的中间态" class="headerlink" title="批量做neb的中间态"></a>批量做neb的中间态</h1><pre><code class="shell">for i in 20-Mo/ 25-Rh/ 26-Ir/ 32-Ga/ 33-In/ 36-Sb/ 37-Bi/;do cd $i;rm -r 3-neb;mkdir 3-neb;cp ../nebmake.pl 3-neb;cd 3-neb;nebmake.pl ../2-neb-opt/1-chu/CONTCAR ../2-neb-opt/2-mo/CONTCAR 8;wait;cp ../2-neb-opt/1-chu/OUTCAR 00;cp ../2-neb-opt/2-mo/OUTCAR 09;cp ../2-neb-opt/1-chu/POTCAR ./;cd ..;cd ..;done</code></pre><pre><code class="shell">for i in */;do echo $i;cp dist.pl $i/2-neb-opt;cd $i/2-neb-opt;dist.pl 1-chu/CONTCAR 2-mo/CONTCAR;cd ..;cd ..;done</code></pre><h1 id="批量后处理处理数据"><a href="#批量后处理处理数据" class="headerlink" title="批量后处理处理数据"></a>批量后处理处理数据</h1><pre><code class="shell">mkdir all-results;for i in 18-Ta/ 25-Rh/ 26-Ir/ 32-Ga/ 33-In/ 36-Sb/ 37-Bi/ ;do mkdir all-results/$i;cp vfin.pl nebresults.pl $i/3-neb;cd $i/3-neb;vfin.pl first;wait;cp nebresults.pl first;cd first;nebresults.pl ;wait;cp mep.eps ../../../all-results/$i;cp exts.dat  ../../../all-results/$i;cd ../../../;done</code></pre><h1 id="NEB后处理"><a href="#NEB后处理" class="headerlink" title="NEB后处理"></a>NEB后处理</h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240113143741270.png" alt="image-20240113143741270"></p><h1 id="文章里画空位迁移而不是离子迁移的原因"><a href="#文章里画空位迁移而不是离子迁移的原因" class="headerlink" title="文章里画空位迁移而不是离子迁移的原因"></a>文章里画空位迁移而不是离子迁移的原因</h1><p>便于不同路径上的拼接</p><p><img src="/./../../%E5%9B%BE%E7%89%87/7b02806813cbd5959758dc21f5ab213.jpg" alt="7b02806813cbd5959758dc21f5ab213"></p><h1 id="vtst安装"><a href="#vtst安装" class="headerlink" title="vtst安装"></a>vtst安装</h1><p>见模拟方法-vasp</p>]]></content>
      
      
      <categories>
          
          <category> 模拟方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown&amp;latex使用教程</title>
      <link href="/2024/05/25/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/markdown&amp;latex%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2024/05/25/7-%E7%BB%98%E5%9B%BE%E4%B8%8E%E5%86%99%E4%BD%9C/markdown&amp;latex%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-markdown"><a href="#1-markdown" class="headerlink" title="1.markdown"></a>1.markdown</h1><ol><li><p><strong>Typora安装</strong></p><p><a href="https://blog.csdn.net/Xiangyun233/article/details/130499877">https://blog.csdn.net/Xiangyun233/article/details/130499877</a></p></li><li><p><strong>typora编写markdown光标回退到上一级标题的位置处 快捷键 shift+tab</strong></p></li><li><p><strong>typora放些什么东西</strong></p></li></ol><ul><li><strong>之前会记到记事本的东西</strong></li><li><strong>一些脚本的整理</strong></li><li><strong>一些成体系的还是放到ppt中，比较直观，可以后续整理到md文件，而且整理是必须的</strong></li></ul><ol start="3"><li><p><strong>typora中使用latex插入公式 <a href="https://blog.csdn.net/qq_37402392/article/details/121348504">(6条消息) Typora添加数学公式_typora插入公式_醉一心的博客-CSDN博客</a></strong></p><p><strong><a href="https://blog.csdn.net/xt199711/article/details/114418813">(6条消息) 【博客工具】typora中的数学公式（字典型，用时查阅）_typora分段函数_浙桐的博客-CSDN博客</a> (比较好用)</strong></p><p><a href="https://zhuanlan.zhihu.com/p/342282274">Markdown 介绍及使用教程 - 知乎 (zhihu.com)</a></p></li><li><p><strong>选中代码块 ctrl+A</strong></p></li><li><p><strong>选中一行 ctrl+l</strong></p><p><strong>加粗 ctrl +b</strong></p></li><li><p>页面内跳转</p><p><code>&lt;span id=&quot;123&quot;&gt;结构优化&lt;/span&gt;</code></p><p><code>[跳转](#123)</code></p><p>ctrl + click</p></li><li><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20230820121026911.png" alt="image-20230820121026911"></p></li><li><p>显示&#x2F;隐藏侧边栏 ctrl +shift + L</p><h2 id="2-有效区分不同内容的方法"><a href="#2-有效区分不同内容的方法" class="headerlink" title="2.有效区分不同内容的方法"></a>2.有效区分不同内容的方法</h2><ul><li>行内</li></ul><p>斜体 * *</p><p>粗体 * *</p><p>行内代码 &#96;</p><ul><li>行外</li></ul><p>强调：</p><p>引用 &gt; </p><p>代码块 &#96;&#96;&#96;</p><p>横线 — :用于大段落之间</p><p>列表</p><p>列表 *  1. 2.</p></li></ol><h1 id="2-Latex"><a href="#2-Latex" class="headerlink" title="2.Latex"></a>2.Latex</h1><p><a href="https://sspai.com/post/60844#!">使用 Git+LaTeX 完成你的毕业设计 - 少数派 (sspai.com)</a></p><p><a href="https://sspai.com/post/56724">文献管理神器 Zotero 学习路径指南 - 少数派 (sspai.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 绘图与写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux操作</title>
      <link href="/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/linux%E6%93%8D%E4%BD%9C/"/>
      <url>/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/linux%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-基础命令"><a href="#1-基础命令" class="headerlink" title="1.基础命令"></a>1.基础命令</h1><ul><li><strong>查看剩余空间大小<code>df -h</code></strong></li><li><strong>linux系统在后台运行命令：</strong></li></ul><pre><code class="shell">nohup python chushi.py &gt; out.dat 2&gt;&amp;1 &amp; #即使关闭终端任务仍在进行；2&gt;&amp;1将错误重定向输出 &amp;后台运行符号**`#查看后台运行的任务：jobs</code></pre><ul><li><p><strong>在单引号里面引用变量要给变量加上单引号</strong>    ‘$i’</p></li><li><p><strong>z文件 <code>zcat .z &gt;&gt; a.dat</code></strong></p></li><li><p><strong>ls命令</strong></p><ul><li><strong><code>ls -l</code>  显示文件详细信息</strong></li><li><strong><code>ls -r</code> 倒序排序</strong></li><li><strong><code>ls -t</code> 按照时间排序</strong></li><li><strong><code>ls -a</code> 显示隐藏文件和文件夹</strong></li></ul></li><li><p><strong><code>paste</code> 用于合并文件的列</strong></p></li><li><p><strong>解压缩和压缩文件</strong></p><pre><code class="shell">gunzip file.gztar -xzvf file.tartar -cf file.tar 文件名  !打包文件</code></pre></li><li><p><strong>快速跳到文件的行 <code>80gg</code></strong></p><p><strong><code>dG</code>：删除光标所在到最后一行的所有数据</strong></p><p><strong>删除第9行到第200行的内容(先用200G转到第200行)，使用<code>:9,.d</code></strong></p></li><li><p><strong>解压zip <code>unzip</code></strong></p></li><li><p><strong>shell脚本编程引用变量用双引号“”，单引号无法引用</strong></p></li><li><p><strong><code>ifort -fast</code> 报错</strong></p><blockquote><p><strong>cannot find -lm</strong><br><strong>cannot find -lc</strong><br><strong>…</strong><br><strong>去掉 -fast</strong></p></blockquote></li><li><p><code>**scp -P 2222 -r （文件夹）2222 infile.ucposcar liz@59.72.114.246:/work/home/liz/try/tdep/examples/c**</code></p><p><code>**sftp -P 12580 lijx@59.72.114.93    put     get**</code></p></li><li><p><strong>ifort -o 脚本名称 fortran程序</strong></p></li><li><p>**查看占用文件的进程 lsof  +文件名 , 强制结束进程 kill -9 +进程id **</p></li><li><p>查看后台运行的任务 ps -aux  杀掉后台运行的任务 kill +ID</p></li><li><p>替换第七行内容  <code>for i in $(seq 4 4 48);do cp cal.slurm $i;cp in.lmp $i;sed -i &#39;7s/.*/#SBATCH  --ntasks=&#39;$i&#39;/&#39; $i/cal.slurm;done</code></p></li><li><p>d1G删除光标所在以及前面的行</p></li><li><p>for i in $(seq 600 100 1000);do cd $i;sed -i ‘s&#x2F;87287&#x2F;70591&#x2F;g’ in.lmp;sbatch cal.slurm;cd ..;done</p></li><li><p>free 查看内存信息 lscpu 查看cpu型号和基准频率等等</p></li></ul><h2 id="1-find-命令"><a href="#1-find-命令" class="headerlink" title="1. find 命令"></a>1. find 命令</h2><p>搜索当前目录及其子目录下所有名为example.txt的文件</p><p><code> find 路径 参数 动作</code></p><p><code> find . -name &quot;example.txt&quot;</code></p><p>搜索当前目录下所有大小超过10MB的文件</p><p><code> find . -type f -size +10M</code></p><blockquote><p><code>-type f </code> 指定搜索文件的类型</p></blockquote><p><code>-type d </code>  代表目录</p><p>删除当前目录下所有.txt文件</p><p><code>find . -type f -name &quot;*.txt&quot; -delete </code></p><h1 id="2-关于conda"><a href="#2-关于conda" class="headerlink" title="2.关于conda"></a>2.关于<code>conda</code></h1><ul><li><p><strong><code>which python</code> 显示当前的python版本目录</strong></p></li><li><p><strong><code>conda env list </code>显示所有的python版本</strong></p></li><li><p><strong><code>conda activate ------</code>   切换到——python版本</strong></p></li><li><p><strong><code>conda deactivate</code> 退回到默认的python版本</strong></p></li><li><p><strong><code>conda create -n name python</code> 创建环境</strong></p></li><li><p>**<code>conda remove -n name --all  </code>删除环境   **</p></li><li><p><strong><code>conda</code>安装错误，有可能是源的问题，<code>.condarc</code></strong></p></li></ul><h1 id="3-source-in-shell"><a href="#3-source-in-shell" class="headerlink" title="3.source in shell"></a>3.source in shell</h1><p><a href="https://phoenixnap.com/kb/linux-source-command">https://phoenixnap.com/kb/linux-source-command</a></p><p>source命令用于逐行运行文件中的命令，如</p><p><img src="/./../../%E5%9B%BE%E7%89%87/linux-source-command-01-pass-argument-lat.png" alt="Using the source command to pass a file as an argument"></p><p>source用于把一些变量或者命令在当前环境中读取，而不需要重新开一个新的环境</p><p>source和 .的作用相同 ，是在当前进程下运行命令，会保留脚本内的变量</p><p>而.&#x2F;则是新开一个进程运行命令，运行结束进程关闭，不会保留下变量</p><p><a href="https://medium.com/@sdbutalla/what-really-is-the-difference-between-the-source-and-dot-commands-in-bash-zshell-736896bc26a3">https://medium.com/@sdbutalla/what-really-is-the-difference-between-the-source-and-dot-commands-in-bash-zshell-736896bc26a3</a></p><p>source 和 . 的区别</p><p>&#96;&#96;source can be run in any directory, provided the file is in the current directory or the path is provided, whereas . looks for the file in the paths in your <code>PATH</code> variable; if the file is not in a directory that is in your <code>PATH</code>, you must provide the full path to the file.&#96;</p><p>source可以在所有情况下适用， . 必须指定完整路径或者在环境变量下</p><pre><code class="shell">export PATH=&quot;/work/home/liz/software/vtst/vtstscripts-972:$PATH&quot;</code></pre><p>添加目录到环境变量</p><p>MPI :并行用到的库，用于在不同进程间传递信息</p><h1 id="4-配置ssh公匙无密码登录"><a href="#4-配置ssh公匙无密码登录" class="headerlink" title="4. 配置ssh公匙无密码登录"></a>4. 配置ssh公匙无密码登录</h1><p>[快速实战派：ssh公钥登录远程服务器配置_配置公钥私钥进行远程登录-CSDN博客](<a href="https://blog.csdn.net/u011291072/article/details/119298179#:~:text=%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%8C%E5%85%A8%E8%BF%87%E7%A8%8B%E6%9C%89%E4%B8%89%E6%AD%A5%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%AD%A5%E6%98%AF%E8%BE%93%E5%85%A5%E5%85%AC%E9%92%A5%E7%A7%81%E9%92%A5%E7%9A%84%E4%BF%9D%E5%AD%98%E8%B7%AF%E5%BE%84%EF%BC%8C%E7%AC%AC%E4%BA%8C%E6%AD%A5%E5%92%8C%E7%AC%AC%E4%B8%89%E6%AD%A5%E6%98%AF%E8%AE%BE%E7%BD%AE%E7%A7%81%E9%92%A5%E5%AF%86%E7%A0%81%E5%92%8C%E7%A1%AE%E8%AE%A4%E5%AF%86%E7%A0%81%E3%80%82">https://blog.csdn.net/u011291072/article/details/119298179#:~:text=如下图，全过程有三步，第一步是输入公钥私钥的保存路径，第二步和第三步是设置私钥密码和确认密码。</a> 如果是第一次生成公钥，则直接一路回车确认就行。,公钥和私钥会自动生成到%2FUsers%2F [用户名]%2F.ssh路径下。 默认公钥文件名为id_rsa.pub，私钥文件名为id_rsa。)</p><ol><li><p>ssh-keygen </p><p>生成公钥</p></li><li><p>把.ssh&#x2F;id_rsa.pub的内容cat到服务器的~&#x2F;.ssh&#x2F;authorized_keys</p></li><li><p>可以登录</p><p>ssh -p ****  用户名@地址</p></li><li><p>可以在本地的.ssh内构造config 文件 ，使用用户名登陆</p></li></ol><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231227224213521.png" alt="image-20231227224213521"></p><p><a href="https://zhuanlan.zhihu.com/p/136152982">https://zhuanlan.zhihu.com/p/136152982</a></p><p><a href="https://blog.csdn.net/yangzhuoluo/article/details/7295433">Linux 将标准输出重定向到剪切板_linux 重定向剪贴板-CSDN博客</a></p><p>[Ubuntu将标准输出重定向到剪贴板_ubuntu命令输出重定向到粘贴板-CSDN博客](<a href="https://blog.csdn.net/tcliuwenwen/article/details/103752486#:~:text=%E9%82%A3%E4%B9%88%E5%A6%82%E4%BD%95%E5%B0%86%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%96%B9%E4%BE%BF%E6%88%91%E4%BB%AC%E7%B2%98%E8%B4%B4%E5%91%A2%EF%BC%9F">https://blog.csdn.net/tcliuwenwen/article/details/103752486#:~:text=那么如何将标准输出重定向到剪贴板方便我们粘贴呢？</a> 1.更新源sudo apt update2.安装xsel或者xclipsudo apt install xselsudo apt,install xclip3.将输出通过管道重定向到剪贴板ls | xsel -ib %23 使用xsel…_ubuntu 剪切板)</p><h1 id="5-linux-文件系统介绍"><a href="#5-linux-文件系统介绍" class="headerlink" title="5. linux 文件系统介绍"></a>5. linux 文件系统介绍</h1><p><a href="https://github.com/ByteByteGoHq/system-design-101?tab=readme-ov-file#linux-file-system-explained">https://github.com/ByteByteGoHq/system-design-101?tab=readme-ov-file#linux-file-system-explained</a></p><p><img src="/./../../%E5%9B%BE%E7%89%87/linux-file-systems.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ABACUS使用</title>
      <link href="/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/ABACUS%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/05/25/5-linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/ABACUS%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-结构转换-STRU-POSCAR"><a href="#1-结构转换-STRU-POSCAR" class="headerlink" title="1. 结构转换 STRU-POSCAR"></a>1. 结构转换 STRU-POSCAR</h1><pre><code class="python">import dpdata#poscar 转为 struls = dpdata.System(file_name=&#39;POSCAR&#39;,fmt=&#39;poscar&#39;)ls.to(file_name=&quot;STRU&quot;,fmt=&#39;abacus/stru&#39;)#stru 转为 poscarls = dpdata.System(file_name=&quot;STRU&quot;,fmt=&#39;abacus/stru&#39;)ls.to(file_name=&#39;POSCAR&#39;,fmt=&#39;poscar&#39;)</code></pre><h1 id="2-输入参数"><a href="#2-输入参数" class="headerlink" title="2. 输入参数"></a>2. 输入参数</h1><blockquote><p><a href="https://xmywuqhxb0.feishu.cn/docx/KN3KdqbX6o9S6xxtbtCcD5YPnue">ABACUS新人使用的一些注意事项 - 飞书云文档 (feishu.cn)</a></p><p><a href="https://xmywuqhxb0.feishu.cn/drive/folder/AKrpfBWZBlIxL1dmmfwcMry8ngc">Docs (feishu.cn)</a></p><p><a href="https://bohrium.dp.tech/notebooks/4641406377">快速开始 ABACUS｜自洽 能带 态密度 结构优化 - Bohrium (dp.tech)</a></p><p><a href="https://bohrium.dp.tech/notebooks/4641406377">快速开始 ABACUS｜自洽 能带 态密度 结构优化 - Bohrium (dp.tech)</a></p><p><a href="https://www.quantum-espresso.org/Doc/INPUT_PW.html#idm830">pw.x: input description (quantum-espresso.org)</a></p></blockquote><p>赝势文件: <a href="https://abacus.ustc.edu.cn/pseudo/list.htm">PSEUDOPOTENTIALS AND ORBITALS (ustc.edu.cn)</a></p><p><a href="https://www.materialscloud.org/work/tools/qeinputgenerator">QE输入文件设置网站</a> ABACUS和QE很像，所以输入文件参考QE即可</p><p>三个输入文件</p><ul><li>INPUT</li><li>KPT (QE网站生成)</li><li>STRU 通过脚本从POSCAR转，需要写入赝势的位置</li></ul><p><a href="https://abacus.deepmodeling.com/_/downloads/en/latest/pdf/">abacus manual </a> 13.1.17 优化参数</p><p>a.u 原子单位制</p><p><strong>注意STRU的<code>LATTICE_CONSTANT</code>  参数，千万不要自己构建STRU，用转的</strong></p><p>官方测试案例：<a href="https://github.com/deepmodeling/abacus-develop/tree/develop/tests/integrate">abacus-develop&#x2F;tests&#x2F;integrate at develop · deepmodeling&#x2F;abacus-develop (github.com)</a></p><p><strong>ABACUS的BFGS算法只能固定晶格参数优化原子位置，不能做真正的结构优化</strong></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240608165118851.png" alt="image-20240608165118851"></p><h1 id="3-楼下集群使用脚本"><a href="#3-楼下集群使用脚本" class="headerlink" title="3. 楼下集群使用脚本"></a>3. 楼下集群使用脚本</h1><pre><code class="shell">#!/bin/sh#SBATCH  --job-name=vasp_job  #SBATCH  --output=log.out.%j#SBATCH  --error=log.err.%j#SBATCH  --partition=xieyuib#SBATCH  --nodes=1#SBATCH  --ntasks=48source /work/env/oneapi-2022.2.0source /work/home/liz/software/lammps/torchdemo-new/bin/env_torchdemompirun -n 48 /work/home/liz/software/abacus/abacus-develop-3.4.4/bin/ABACUS.mpi &gt; log 2&gt;&amp;1</code></pre><p><code>/work/home/liz/workspace/3-temporary-duty/6-QE_vs_abacus/24-6-14/2_opt</code></p><h1 id="4-ABACUS的优化"><a href="#4-ABACUS的优化" class="headerlink" title="4. ABACUS的优化"></a>4. ABACUS的优化</h1><p>分两步，先固定晶格优化原子位置，可以用bfgs cg SD bfgs+cg  ;再优化晶格，只能用cg </p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240615135729006.png" alt="image-20240615135729006"></p><p>abacus 如果把原子位置优化设置为cg，确实是每一步既优化原子位置也优化晶格参数</p><p><img src="/./../../%E5%9B%BE%E7%89%87/d58c5d16ff63476e4eca787cc7df7f0.png" alt="d58c5d16ff63476e4eca787cc7df7f0"></p><p>但是如果把原子位置优化设置为bfgs，是先优化原子位置再优化晶胞</p><p><img src="/./../../%E5%9B%BE%E7%89%87/96a6b77c6607cd5bedc9ffb1b8dcda3.png" alt="96a6b77c6607cd5bedc9ffb1b8dcda3"></p><p>QE里只有bfgs+bfgs ，这种是每一步既优化晶格也优化原子</p><p><img src="/./../../%E5%9B%BE%E7%89%87/47a6de6df22fb712b245a64b8695f50.png" alt="47a6de6df22fb712b245a64b8695f50"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/0bca3dafd9e25e78f02e6749fc9c8a1.png" alt="0bca3dafd9e25e78f02e6749fc9c8a1"></p><blockquote><p>为什么vasp优化的能量最后不对，因为优化过程中晶格在变化，但是优化过程中的G点网格没有更新，所以最后用的G点网格不适用最后的晶格常数</p><p>QE最后会有一步自洽，所以QE的能量是准的</p><p>ABACUS优化的能量是不准的，和vasp一样，是G网格的原因</p></blockquote><h1 id="6-ABACUS官方测试结果"><a href="#6-ABACUS官方测试结果" class="headerlink" title="6. ABACUS官方测试结果"></a>6. ABACUS官方测试结果</h1><p><a href="https://deepmodeling-activity.github.io/abacus-test.github.io/index.html?pname=dpa/StructureExplorer">ABACUS Test Report (deepmodeling-activity.github.io)</a></p>]]></content>
      
      
      <categories>
          
          <category> linux学习使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>can_do</title>
      <link href="/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/can_do/"/>
      <url>/2024/05/25/6-%E8%AF%BE%E9%A2%98%E7%A0%94%E7%A9%B6/can_do/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ec32d0597e8575f3754b9c55d1798f00eb4276a8deee7b5b9cc91ed053cbb2fa"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 课题研究 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>省自集</title>
      <link href="/2024/05/25/8-%E6%9D%82%E8%B0%88/%E7%9C%81%E8%87%AA%E9%9B%86/"/>
      <url>/2024/05/25/8-%E6%9D%82%E8%B0%88/%E7%9C%81%E8%87%AA%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><ol><li><p>博士是怎么废掉的？ - yuanyige的回答 - 知乎<br><a href="https://www.zhihu.com/question/609920887/answer/3339540781">https://www.zhihu.com/question/609920887/answer/3339540781</a></p><p>不要停下来</p></li><li><p><a href="https://blog.sciencenet.cn/blog-627429-1348842.html">科学网—研究生如何和导师和谐相处？ - 冯培忠的博文 (sciencenet.cn)</a> 要多多交流</p><p><a href="https://blog.sciencenet.cn/blog-71964-1429413.html">科学网—研究生导学矛盾的“死结”，如何打开？ - 马臻的博文 (sciencenet.cn)</a></p><p><a href="https://blog.sciencenet.cn/blog-523717-1438557.html">科学网—二十四年研究生培养工作中的重要经验教训 （与青年教师交流并分享） - 张红光的博文 (sciencenet.cn)</a></p></li><li><p>解决拖延症</p></li></ol><blockquote><p>拖延症是一种普遍存在的现象，很多人都会在面对重要任务时选择拖延。要解决拖延症，可以尝试以下几种方法：</p><h3 id="1-制定明确的目标和计划"><a href="#1-制定明确的目标和计划" class="headerlink" title="1. 制定明确的目标和计划"></a>1. 制定明确的目标和计划</h3><ul><li><strong>设定具体目标</strong>：将大任务分解成小任务，使其更易管理。</li><li><strong>制定计划</strong>：每天列出任务清单，并设定完成的时间节点。</li></ul><h3 id="2-优先处理重要任务"><a href="#2-优先处理重要任务" class="headerlink" title="2. 优先处理重要任务"></a>2. 优先处理重要任务</h3><ul><li><strong>四象限法则</strong>：根据重要性和紧急性将任务分类，优先处理重要且紧急的任务。</li><li><strong>早上处理重要任务</strong>：一天开始时，精力最充沛，适合处理重要任务。</li></ul><h3 id="3-消除干扰"><a href="#3-消除干扰" class="headerlink" title="3. 消除干扰"></a>3. 消除干扰</h3><ul><li><strong>创建专注环境</strong>：找一个安静的地方工作，减少外界干扰。</li><li><strong>限制使用电子设备</strong>：关闭不必要的通知，设定特定时间查看手机或社交媒体。</li></ul><h3 id="4-利用时间管理技巧"><a href="#4-利用时间管理技巧" class="headerlink" title="4. 利用时间管理技巧"></a>4. 利用时间管理技巧</h3><ul><li><strong>番茄工作法</strong>：每工作25分钟休息5分钟，循环进行，以提高工作效率。</li><li><strong>时间块</strong>：为不同任务分配特定的时间块，避免分散注意力。</li></ul><h3 id="5-自我激励"><a href="#5-自我激励" class="headerlink" title="5. 自我激励"></a>5. 自我激励</h3><ul><li><strong>奖励机制</strong>：完成任务后给予自己小奖励，以增强动力。</li><li><strong>自我肯定</strong>：及时给予自己正面的评价，保持积极心态。</li></ul><h3 id="6-寻求支持"><a href="#6-寻求支持" class="headerlink" title="6. 寻求支持"></a>6. 寻求支持</h3><ul><li><strong>与他人共同进步</strong>：与朋友或同事一起工作，相互监督和激励。</li><li><strong>咨询专业人士</strong>：如果拖延症严重影响生活，可以考虑咨询心理医生或时间管理专家。</li></ul><h3 id="7-反思与调整"><a href="#7-反思与调整" class="headerlink" title="7. 反思与调整"></a>7. 反思与调整</h3><ul><li><strong>定期反思</strong>：每周或每月总结一次，看看哪些方法有效，哪些需要调整。</li><li><strong>灵活调整计划</strong>：根据实际情况不断调整自己的计划和方法。</li></ul><p>通过上述方法的综合应用，可以有效地减少拖延行为，提高工作和学习的效率。关键在于找到适合自己的方法，并坚持不懈地实践。</p><h2 id="8-like-李璐，调研清楚问题背景再做"><a href="#8-like-李璐，调研清楚问题背景再做" class="headerlink" title="8. like 李璐，调研清楚问题背景再做"></a>8. like 李璐，调研清楚问题背景再做</h2></blockquote><ol start="4"><li>一些好的观点</li></ol><p>The world is full of free invitations to self-improvement that are ignored by most people most of the time. Putting it crudely, it’s easier to be fat and ignorant in a world of cheap, empty calories than it is to be fit and informed. It’s hard to resist the temptation of minimal effort.  （<a href="https://world.hey.com/dhh/why-don-t-more-people-use-linux-33b75f53">Why don’t more people use Linux? (hey.com)</a>）</p><p>即使身处最冷的寒冬，我知道自己的内心深处，有一个不可战胜的夏天。</p><p>要以乐观的心态做事和生活，乐观与否会改变整个人对事情的看法。消极负面会导致选择与判断都趋向负面。要长线不要短程</p><p>自己是自己生活的主角，生活不是为了围绕别人转而生活的</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lammps计算msd</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E8%AE%A1%E7%AE%97msd/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E8%AE%A1%E7%AE%97msd/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="6-使用lammps轨迹计算MSD（多起源-师弟版本）"><a href="#6-使用lammps轨迹计算MSD（多起源-师弟版本）" class="headerlink" title="6. 使用lammps轨迹计算MSD（多起源-师弟版本）"></a>6. 使用lammps轨迹计算MSD（多起源-师弟版本）</h2><pre><code class="python">import sysimport timefrom collections import Counterimport numpy as npfrom matplotlib import pyplot as pltimport subprocessdef timer(func):    def wrapper(*args, **kwargs):        start_time = time.time()        result = func(*args, **kwargs)        end_time = time.time()        print(f&quot;Time elapsed: &#123;end_time - start_time:.4f&#125; seconds&quot;)        return result    return wrapperdef sort_atoms(atoms: np.ndarray):    atoms_id = atoms[:, 0].astype(int)    atoms_type = atoms[:, 1]    idx = np.lexsort((atoms_id, atoms_type))    return atoms[idx]@timerdef read_strj(strj_file: str, intv: int = 1, begin: int = 0):    step_cmd = f&quot;grep TIMESTEP &#123;strj_file&#125;|wc -l  &quot;    tot_step = subprocess.run(step_cmd, shell=True, text=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)    tot_step = int(tot_step.stdout)    print(f&quot;Total steps: &#123;tot_step&#125;&quot;)    # select lines    select_step = range(begin, tot_step, intv)    print(f&quot;These steps in strj file will be selected: &#123;select_step&#125;&quot;)    f = open(strj_file, &#39;r&#39;)    la_step = 0    la_num_atoms = 0    la_lattice = None    la_atoms = None    la_id = None    la_type = None    la_pos = None    data_pos = []    # data_lattice = []    while True:        line = f.readline()        if not line:            break        if &quot;TIMESTEP&quot; in line:            if la_step not in select_step:                la_step += 1                continue            la_step += 1            while True:                line = f.readline()                if not line:                    break                if &quot;ITEM&quot; in line:                    if &quot;NUMBER&quot; in line:                        la_num_atoms = int(f.readline())                        continue                    if &quot;BOX&quot; in line:                        la_lattice = np.array(sum([f.readline().split() for _ in range(3)], []), dtype=float).reshape(3,                                                                                                                      3)                        continue                    if &quot;ATOMS&quot; in line:                        la_atoms = np.array(sum([f.readline().split() for _ in range(la_num_atoms)], [])).reshape(                            la_num_atoms,                            -1)                        la_atoms = sort_atoms(la_atoms)                        la_id = la_atoms[:, 0]                        la_type = la_atoms[:, 1]                        la_pos = la_atoms[:, 2:5].astype(float)                        data_pos.append(la_pos)                        # data_lattice.append(la_lattice)                        break    return la_id, la_type, np.array(data_pos)@timerdef msd1(x: np.ndarray,         atoms_types: list):    unique_types = list(dict.fromkeys(atoms_types))    cnt = Counter(atoms_types)    num_per_type = [cnt[i] for i in unique_types]    step = len(x)    data_msd_xyz_split = []    data_msd_tot_split = []    data_msd_xyz = []    data_msd_tot = []    for msd_intv in range(1, step):        d = x[msd_intv:] - x[:-msd_intv]        d_square = d * d        d_square_split = np.split(d_square, np.cumsum(num_per_type), axis=1)[:-1]        msd_xyz_split = [np.average(i, axis=(0, 1)) for i in d_square_split]        msd_tot_split = [np.average(i.sum(2)) for i in d_square_split]  # x + y + z        msd_xyz = np.average(d_square, axis=(0, 1))        msd_tot = np.average(d_square.sum(2))        data_msd_xyz_split.append(msd_xyz_split)        data_msd_tot_split.append(msd_tot_split)        data_msd_xyz.append(msd_xyz)        data_msd_tot.append(msd_tot)    return data_msd_xyz_split, data_msd_tot_split, data_msd_xyz, data_msd_tot@timerdef plot_split_msd(msd_split,                   atoms_type):    row_title = list(dict.fromkeys(atoms_types))    col_title = [&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;All&quot;]    x = np.arange(len(msd_split))    row = msd_split.shape[1]    col = msd_split.shape[2]    # fig = plt.figure(figsize=(24, 20), dpi=150)    # for i in range(row):    #     for j in range(col):    #         plot_idx = i * col + j    #         print(plot_idx)    #         x = np.array(x)    #         y = msd_split[:, i, j]    #    #         ax = fig.add_subplot(row, col, plot_idx + 1)    #         ax.plot(x, y)    #         ax.set_title(f&#39;&#123;row_title[i]&#125;-&#123;col_title[j]&#125;&#39;)    #         ax.set_xlabel(&quot;step&quot;)    #         ax.set_ylabel(r&quot;MSD   $A^2$&quot;)    fig = plt.figure(figsize=(24, 5), dpi=200)    for i in range(col):        print(i)        x = np.array(x)        y = msd_split[:, :, i]        ax = fig.add_subplot(1, col, i + 1)        ax.plot(x, y, label=row_title)        ax.set_title(f&#39;&#123;col_title[i]&#125;&#39;)        ax.set_xlabel(&quot;step_intv&quot;)        ax.set_ylabel(r&quot;MSD   $A^2$&quot;)        plt.legend()    fig.savefig(&quot;msd_types&quot;)@timerdef plot_msd(msd_all):    col_title = [&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;All&quot;]    x = np.arange(len(msd_all))    fig = plt.figure(figsize=(24, 5), dpi=200)    col = msd_all.shape[1]    for i in range(col):        plot_idx = i        x = np.array(x)        y = msd_all[:, i]        ax = fig.add_subplot(1, col, plot_idx + 1)        ax.plot(x, y)        ax.set_title(f&#39;&#123;col_title[i]&#125;&#39;)        ax.set_xlabel(&quot;step_intv&quot;)        ax.set_ylabel(r&quot;MSD   $A^2$&quot;)    fig.savefig(&quot;msd_all&quot;)def write_split_msd(msd_split,              atoms_type,              write_name:str):    row_title = list(dict.fromkeys(atoms_types))    col_title = [&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;All&quot;]    with open(write_name, &quot;w&quot;) as f:        # title        f.write(&quot;    step&quot;)        for i in range(len(row_title)):            for j in range(len(col_title)):                f.write(f&quot;&#123;row_title[i] + &#39;-&#39; + col_title[j]:&gt;8&#125;   &quot;)        f.write(&quot;\n&quot;)        # data        for l in range(len(msd_split)):            f.write(f&quot;&#123;l:8&#125;&quot;)            for i in range(len(row_title)):                for j in range(len(col_title)):                    f.write(f&quot;&#123;msd_split[l][i][j]:10.4f&#125; &quot;)            f.write(&quot;\n&quot;)def write_msd(msd,              write_name:str):    col_title = [&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, &quot;All&quot;]    with open(write_name, &quot;w&quot;) as f:        # titel        f.write(&quot;    step&quot;)        for i in range(len(col_title)):            f.write(f&quot;&#123;col_title[i]:&gt;8&#125;   &quot;)        f.write(&quot;\n&quot;)        # data        for l in range(len(msd_split)):            f.write(f&quot;&#123;l:8&#125;&quot;)            for i in range(len(col_title)):                f.write(f&quot;&#123;msd[l][i]:10.4f&#125; &quot;)            f.write(&quot;\n&quot;)if __name__ == &#39;__main__&#39;:    strj_file = &#39;A.lammpstrj&#39;    intv = 3    begin = 0    atoms_id, atoms_types, x = read_strj(strj_file, intv, begin)    print(atoms_types)    msd_xyz_split, msd_tot_split, msd_xyz, msd_tot = msd1(x, atoms_types)    msd_split = np.concatenate([np.array(msd_xyz_split), np.array(msd_tot_split)[:, :, None]],                               axis=2)  # [msd_intv, types, xyzall]    print(msd_split.shape)    msd_all = np.concatenate([np.array(msd_xyz), np.array(msd_tot)[:, None]], axis=1)    print(msd_all.shape)    print(&quot;plot - typed msd&quot;)    plot_split_msd(msd_split, atoms_types)    print(&quot;plot - msd&quot;)    plot_msd(msd_all)    print(&quot;write - typed msd&quot;)    write_split_msd(msd_split, atoms_types, &quot;./msd-types.txt&quot;)    print(&quot;write - msd&quot;)    write_msd(msd_all, &quot;./msd.txt&quot;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>转换lammps轨迹为XDATCAR</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E8%BD%AC%E6%8D%A2lammps%E8%BD%A8%E8%BF%B9%E4%B8%BAXDATCAR/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E8%BD%AC%E6%8D%A2lammps%E8%BD%A8%E8%BF%B9%E4%B8%BAXDATCAR/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="5-转换lammps的轨迹文件为XDATCAR"><a href="#5-转换lammps的轨迹文件为XDATCAR" class="headerlink" title="5.转换lammps的轨迹文件为XDATCAR"></a>5.转换lammps的轨迹文件为XDATCAR</h2><pre><code class="python">from ase.io import read, writefrom sys import argvif __name__ == &#39;__main__&#39;:    # lammps strj    strj_file = argv[1]    write_dir = argv[2]    print(f&quot;From &#123;strj_file&#125; to &#123;write_dir&#125;&quot;)    data = read(strj_file, index=&quot;:&quot;)    if not os.path.exists(write_dir):        os.mkdir(write_dir)    for i in range(len(data)):        poscar_name = os.path.join(write_dir, str(i) + &quot;.vasp&quot;)        write(poscar_name, data[i])</code></pre><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231020154210390.png" alt="image-20231020154210390"></p><p>另一种方法：需要搞到晶格参数（ovito或者上面的脚本）</p><pre><code class="python">import numpy as npimport timedef timer(func):    def wrapper(*args, **kwargs):        start_time = time.time()        result = func(*args, **kwargs)        end_time = time.time()        print(f&quot;Time elapsed: &#123;end_time - start_time:.4f&#125; seconds&quot;)        return result    return wrapper@timerdef read_lmp_trj(file_name: str):    f = open(file_name, &#39;r&#39;)    &quot;&quot;&quot;data segment&quot;&quot;&quot;    n_atoms_list = []    lat = []    pos = []    num1 = 0#跳过文件的行数，需要修改     num_lines_to_skip = 0    current_line_num = 0    &quot;&quot;&quot;temp&quot;&quot;&quot;    # n_atoms = None    while True:        line = f.readline()        if not line:            break                current_line_num += 1         if current_line_num &lt;= num_lines_to_skip:            continue                if &quot;NUMBER OF ATOMS&quot; in line:            line = f.readline()            n_atoms = int(line)            n_atoms_list.append(n_atoms)            f.readline()            &quot;&quot;&quot;lat&quot;&quot;&quot;            for i in range(3):                lines = f.readline()                lat.append(lines)            f.readline()            &quot;&quot;&quot;pos&quot;&quot;&quot;            for i in range(n_atoms):                pos.append(f.readline())#每隔1000个时间间隔读取一次 需要改            num1 +=1    &quot;&quot;&quot;post treatment&quot;&quot;&quot;    #固定一个三维数组的两个维度，第三个维度也固定了，numpy的逻辑应该是3-2-1，第三个维度先排布，依次向前，第一个是深度    lat = np.array([i.split() for i in lat]).astype(float).reshape(-1, 3, 3)#需要看这里的8需不需要改    pos = np.array([i.split() for i in pos]).astype(float).reshape(len(lat), -1, 8)  #  idx = pos[:, :, 0].argsort(1)    #lexsort的顺序是从最后一个传入的参数开始，依次到第一个传入的参数    idx =np.lexsort((pos[:,:,0],pos[:,:,1]))    sort_pos = pos[np.arange(len(pos))[:, None], idx, :]    start3 = sort_pos[:,:,0:2].reshape(-1,2)    n_atoms_list = np.array(n_atoms_list)    return n_atoms_list, lat, sort_pos[:, :, [2, 3, 4]],start3if __name__ == &#39;__main__&#39;:    file_name = &quot;A.lammpstrj&quot;    print(&quot;Loading lmp trajectory&quot;)    n_atoms, _, x,stc = read_lmp_trj(file_name=file_name)    #np.savetxt(&#39;first_element.txt&#39;, x[0])    #np.savetxt(&#39;end_element.txt&#39;,x[-1])#30这里需要修改，是移动的原子个数    with open(&#39;XDATCAR&#39;, &#39;w&#39;) as f:        for i, element in enumerate(x):            f.write(f&#39;Direct configuration = &#123;i + 1&#125;\n&#39;)  # 注意这里的 i + 1            np.savetxt(f, element, fmt=&#39;%.10f&#39;, delimiter=&#39;\t&#39;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lammps处理计算结果</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E5%A4%84%E7%90%86%E8%AE%A1%E7%AE%97%E7%BB%93%E6%9E%9C/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E5%A4%84%E7%90%86%E8%AE%A1%E7%AE%97%E7%BB%93%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="5-计算结束后的处理"><a href="#5-计算结束后的处理" class="headerlink" title="5. 计算结束后的处理"></a>5. 计算结束后的处理</h1><h2 id="1-检验能量、温度、压力"><a href="#1-检验能量、温度、压力" class="headerlink" title="1.检验能量、温度、压力"></a>1.检验能量、温度、压力</h2><pre><code class="shell">alias check=&#39;head -n -30 log.lammps | tail -n +100 &gt; log.dat; cp /work/home/liz/script/check/plot.py ./;conda activate liz;python plot.py&#39;</code></pre><p>plot.py</p><pre><code class="python">import matplotlibmatplotlib.use(&#39;Agg&#39;)  # 使用非图形化的Agg后端import matplotlib.pyplot as pltimport numpy as np# 从.dat文件中读取数据data = np.genfromtxt(&#39;log.dat&#39;, delimiter=None, skip_header=1)x = data[:, 1]  # 第二列作为x轴y1 = data[:, 2]  # 第三列作为第一组y值y2 = data[:, 3]  # 第四列作为第二组y值y3 = data[:, 4]  # 第五列作为第三组y值# 创建三个子图fig, axes = plt.subplots(1, 3, figsize=(15, 5))# 绘制第一个图axes[0].plot(x, y1, label=&#39;Column 3&#39;)axes[0].set_title(&#39;Plot 1&#39;)axes[0].set_xlabel(&#39;X-axis&#39;)axes[0].set_ylabel(&#39;Y-axis&#39;)axes[0].legend()# 绘制第二个图axes[1].plot(x, y2, label=&#39;Column 4&#39;)axes[1].set_title(&#39;Plot 2&#39;)axes[1].set_xlabel(&#39;X-axis&#39;)axes[1].set_ylabel(&#39;Y-axis&#39;)axes[1].legend()# 绘制第三个图axes[2].plot(x, y3, label=&#39;Column 5&#39;)axes[2].set_title(&#39;Plot 3&#39;)axes[2].set_xlabel(&#39;X-axis&#39;)axes[2].set_ylabel(&#39;Y-axis&#39;)axes[2].legend()# 保存为all.pngplt.tight_layout()plt.savefig(&#39;all.png&#39;)</code></pre><h2 id="2-计算斜率k"><a href="#2-计算斜率k" class="headerlink" title="2.计算斜率k"></a>2.计算斜率k</h2><pre><code class="shell">alias calk=&#39;cp /work/home/liz/script/check/k.py ./;conda activate liz;python k.py &gt; k.dat&#39;</code></pre><p>k.py</p><pre><code class="python">import numpy as npfrom scipy import statsimport math # 读取数据文件并存储数据data = np.loadtxt(&#39;msd.dat&#39;)# 定义不同的百分比值percentages = range(1,101)print(percentages)# 针对每个百分比执行线性拟合for percent_to_select in percentages:    print (percent_to_select,end=&#39; &#39;)    # 计算要选择的数据点数量    num_points_to_select = int(len(data) * percent_to_select / 100)    # 根据百分比选择数据点    selected_data = data[:num_points_to_select]    # 线性拟合并计算斜率    x = selected_data[:, 0]  # 假设第一列是 x 值    y = selected_data[:, 4]  # 假设第二列是 y 值    # 执行线性回归拟合    slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)    # 输出斜率    print (slope,end=&#39; &#39;)    D= slope*1000/60000    print(D,end=&#39; &#39;)    logD = math.log10(D)    print(logD)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lammps批量提任务</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E6%89%B9%E9%87%8F%E6%8F%90%E4%BB%BB%E5%8A%A1/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E6%89%B9%E9%87%8F%E6%8F%90%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="4-批量提任务"><a href="#4-批量提任务" class="headerlink" title="4. 批量提任务"></a>4. 批量提任务</h1><h2 id="1-只有不同温度"><a href="#1-只有不同温度" class="headerlink" title="1.只有不同温度"></a>1.只有不同温度</h2><pre><code class="shell">#需要修改的地方：扩胞方式、时间步长、运行总时间、等等，只是把不同温度的计算简化了for i in 600 700 800 900 1000domkdir $icd $icat &gt; in.lmp &lt;&lt; lizvariable        x index 5variable        y index 5variable        z index 5variable        ss equal 0.001variable        tdamp equal &quot;v_ss*100&quot;units           metalatom_style      atomicboundary        p p pread_data       ./data.1GPamass            1 22.99mass            2 88.906mass            3 28.086mass            4 16.000replicate       \$x \$y \$zpair_style      nnp SingleModel ./inv2 emap &quot;1:Na,2:Y,3:Si,4:O&quot;pair_coeff      * *thermo          1thermo_style    custom step time temp pe lx ly lzthermo_modify   format 4 %20.15gdump            1 all custom 100 A.lammpstrj id type xu yu zu fx fy fzvelocity        all create $i 87287timestep        \$&#123;ss&#125;fix             1 all nvt temp $i $i \$&#123;tdamp&#125;run    100000lizcd ..cp inv2 model-1000000 data.1GPa 1.sh $icd $isbatch 1.shcd ..done</code></pre><h2 id="2-包括了不同尺寸和温度"><a href="#2-包括了不同尺寸和温度" class="headerlink" title="2. 包括了不同尺寸和温度"></a>2. 包括了不同尺寸和温度</h2><pre><code class="shell">for m in 1 3 5 6 8 10domkdir $mcp inv2 model-1000000 data.pos sub.sh $mcd $mfor i in 600 700 800 900 1000domkdir $icp inv2 model-1000000 data.pos sub.sh $icd $icat &gt; in.lmp &lt;&lt; lizvariable        x index $mvariable        y index $mvariable        z index $mvariable        ss equal 0.001variable        tdamp equal &quot;v_ss*100&quot;units           metalatom_style      atomicboundary        p p pread_data       ./data.posmass            1 22.99mass            2 175.00 mass            3 28.086mass            4 16.000replicate       \$x \$y \$zpair_style      nnp SingleModel ./inv2 emap &quot;1:Na,2:Lu,3:Si,4:O&quot;pair_coeff      * *thermo          1thermo_style    custom step time temp pe lx ly lzthermo_modify   format 4 %20.15gdump            1 all custom 100 A.lammpstrj id type xu yu zu fx fy fzvelocity        all create $i 87287timestep        \$&#123;ss&#125;fix             1 all nvt temp $i $i \$&#123;tdamp&#125;run    500000lizdsub -s sub.shcd ..donecd ..done</code></pre><h2 id="3-新的脚本，和2相似，改动了一些参数"><a href="#3-新的脚本，和2相似，改动了一些参数" class="headerlink" title="3. 新的脚本，和2相似，改动了一些参数"></a>3. 新的脚本，和2相似，改动了一些参数</h2><pre><code class="shell">for m in 10  domkdir $mcp inv2 data.KYSO sub-md.sh $mcd $mfor i in 600 700 800 900 1000domkdir $icp inv2 data.KYSO sub-md.sh $icd $ifor j in 1 2 3 4 5 do mkdir $jcp inv2 data.KYSO sub-md.sh $jcd $jcat &gt; in.lmp &lt;&lt; lizvariable        x index $mvariable        y index $mvariable        z index $mvariable        ss equal 0.002variable        tdamp equal &quot;v_ss*100&quot;variable        dmsdx  equal   c_1[1]variable        dmsdy  equal   c_1[2]variable        dmsdz  equal   c_1[3]variable        dmsd   equal   c_1[4]variable        istep  equal   stepvariable        msdx   format  dmsdx  %16.8evariable        msdy   format  dmsdy  %16.8evariable        msdz   format  dmsdz  %16.8evariable        msd    format  dmsd   %16.8e#variable        sstep  format  istep  %-10gunits           metalatom_style      atomicboundary        p p pread_data       ./data.KYSOmass            1 39.09mass            2 88.91mass            3 28.084mass            4 15.999replicate       \$x \$y \$zpair_style      nnp inv2 emap &quot;1:K,2:Y,3:Si,4:O&quot;pair_coeff      * *thermo          1thermo_style    custom step time temp press pe lx ly lz thermo_modify   format 5 %20.15gcompute         1 all msd com yesdump            out  all custom 100 A.lammpstrj id element xu yu zu fx fy fzdump_modify     out  element K   Y   Si   Odump_modify     out  format 1 %4ddump_modify     out  format 2 %4sdump_modify     out  format float %16.8fvelocity        all create $i $jtimestep        \$&#123;ss&#125;fix             1 all nvt temp $i $i \$&#123;tdamp&#125;fix             2 all print 1 &quot;\$&#123;istep&#125; \$&#123;msdx&#125; \$&#123;msdy&#125; \$&#123;msdz&#125; \$&#123;msd&#125;&quot; screen no file msd.datrun             100000lizsbatch sub-md.shcd ..donecd ..donecd ..done</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于maxvol</title>
      <link href="/2024/05/25/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%85%B3%E4%BA%8Emaxvol/"/>
      <url>/2024/05/25/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%85%B3%E4%BA%8Emaxvol/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="4-关于maxhull"><a href="#4-关于maxhull" class="headerlink" title="4. 关于maxhull"></a>4. 关于maxhull</h2><p><img src="/./../../%E5%9B%BE%E7%89%87/89087eb1bfc1ab17e8fd8e4854d9e8c.jpg" alt="89087eb1bfc1ab17e8fd8e4854d9e8c"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>转换POSCAR</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E8%BD%AC%E6%8D%A2POSCAR/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E8%BD%AC%E6%8D%A2POSCAR/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="2-转换POSCAR为lammps-data"><a href="#2-转换POSCAR为lammps-data" class="headerlink" title="2. 转换POSCAR为lammps.data"></a>2. 转换POSCAR为lammps.data</h2><h3 id="1-师弟版（好用）"><a href="#1-师弟版（好用）" class="headerlink" title="1. 师弟版（好用）"></a>1. 师弟版（好用）</h3><p>&#x3D;&#x3D;记得使用时需要把poscar中下面的速度分量和空格都删除干净，不然会报错&#x3D;&#x3D;</p><p>python “this file” OUTCAR.input data.output</p><pre><code class="python"># convert VASP OUTCAT to lammps .data (atomic)## usage:# python &quot;this file&quot; OUTCAR.input data.output## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ###import numpy as npfrom sys import argvdef anls_poscar(file_name: str):    with open(file_name, &#39;r&#39;) as f:        lines = f.readlines()    bloom_factor = float(lines[1])    lat = np.array([i.split() for i in lines[2: 5]]).astype(float)    lat = bloom_factor * lat    ele_and_num = lines[5][:-1] + &quot;:&quot; + lines[6][:-1]    pos_d = None    if (lines[7][0] == &#39;d&#39;) or (lines[7][0] == &#39;D&#39;):        # direct coord.        pos_d = np.array([i.split() for i in lines[8:]]).astype(float)    elif (lines[7][0] == &#39;c&#39;) or (lines[7][0] == &#39;C&#39;):        # cartesian        pos_c = np.array([i.split() for i in lines[8:]]).astype(float)        pos_d = direct2pos(lat, pos_c, False)    return lat, pos_d, ele_and_numdef direct2pos(lat, pos, direction=True):    &quot;&quot;&quot;    lat = [[Ax, Ay, Az],           [Bx, By, Bz],           [Cx, Cy, Cz]]    Pos = [n, 3]    :return: if True:  return cart   = [n, 3]             if False: return direct = [n, 3]    &quot;&quot;&quot;    if direction:        return pos @ lat    else:        return pos @ np.linalg.inv(lat)def clip_ny_norm(x):    return x / np.linalg.norm(x)def cart2lams(lat):    &quot;&quot;&quot;    vasp (POSCAR) Coordinate System:    O = [[ax, ay, az],         [bx, by, bz],         [cx, cy, cz]]    :return:    lammps Coordinate System:    O&#39; = [[xhi - xlo,  0,  0],          [xy, yhi - ylo,  0],          [xz, yz, zhi - zlo]]    &quot;&quot;&quot;    ax = (lat[0] ** 2).sum() ** 0.5    a_hat = clip_ny_norm(lat[0])    bx = (lat[1] * a_hat).sum()    by = np.linalg.norm(np.cross(a_hat, lat[1]))    cx = (lat[2] * a_hat).sum()    cy = (lat[2] * np.cross(clip_ny_norm(np.cross(lat[0], lat[1])), a_hat)).sum()    cz = np.abs((lat[2] * clip_ny_norm(np.cross(lat[0], lat[1]))).sum())    new = np.array([        [ax, 0, 0],        [bx, by, 0],        [cx, cy, cz]    ])    return newdef write_lmp_atomic_data(filename, lmp_lat, pos_c, strr):    new_coo = pos_c    Z_of_type = strr.split(&#39;:&#39;)[0].split()    n_type = strr.split(&#39;:&#39;)[1].split()    new_ele = [[i] * int(n_type[i - 1]) for i in range(1, len(n_type) + 1)]    new_ele = sum(new_ele, [])    # write    with open(filename, &quot;w&quot;) as f:        f.writelines(&quot;%s (written by ARES-NNP)\n\n&quot; % str(filename + strr))        f.writelines(&quot;%i    atoms\n&quot; % len(new_coo))        f.writelines(&quot;%i    atom types\n&quot; % len(Z_of_type))        f.writelines(&quot;0.0    %.17f  xlo xhi\n&quot; % lmp_lat[0][0])        f.writelines(&quot;0.0    %.17f  ylo yhi\n&quot; % lmp_lat[1][1])        f.writelines(&quot;0.0    %.17f  zlo zhi\n&quot; % lmp_lat[2][2])        f.writelines(            &quot;    %18.12f    %18.12f    %18.12f  xy xz yz\n\n\n&quot; % (lmp_lat[1][0], lmp_lat[2][0], lmp_lat[2][1]))        f.writelines(&quot;Atoms\n\n&quot;)        index_list = np.arange(1, len(new_coo) + 1)        for i, ele, coo in zip(index_list, new_ele, new_coo):            f.writelines(&quot;&#123;0:&gt;6&#125; &#123;1:&gt;3&#125; &#123;2:20.12f&#125; &#123;3:20.12f&#125; &#123;4:20.12f&#125;\n&quot;.format(i, ele, coo[0], coo[1], coo[2]))if __name__ == &#39;__main__&#39;:    filename = argv[2]    lat, pos, strr = anls_poscar(argv[1])    crs_para = np.linalg.norm(lat, axis=1)    exg = np.argsort(crs_para)[::-1]    lat = lat[exg, :]    pos = pos[:, exg]    lmp_lat = cart2lams(lat)    inv = np.linalg.inv(lat) @ lmp_lat    pos_c = direct2pos(lat, pos, True) @ inv    write_lmp_atomic_data(filename, lmp_lat, pos_c, strr)</code></pre><h3 id="2-pymatgen版（有时出错）"><a href="#2-pymatgen版（有时出错）" class="headerlink" title="2.pymatgen版（有时出错）"></a>2.pymatgen版（有时出错）</h3><pre><code class="python">from pymatgen.io.lammps.data import LammpsDatafrom pymatgen.io.vasp.inputs import Poscarposcar = Poscar.from_file(&quot;POSCAR&quot;)structure=poscar.structurelammps_data = LammpsData.from_structure(structure)lammps_data.write_file(&quot;data.kysio&quot;)#poscar2=Poscar(structure)#poscar2.write_file(&#39;super.vasp&#39;)</code></pre><h2 id="3-转换lammps-data为POSCAR"><a href="#3-转换lammps-data为POSCAR" class="headerlink" title="3. 转换lammps.data为POSCAR"></a>3. 转换lammps.data为POSCAR</h2><ol><li>用ovito转</li><li></li></ol><pre><code class="python">from pymatgen.io.lammps.data import LammpsDatafrom pymatgen.io.vasp.inputs import Poscarlammps_data = LammpsData.from_file(&quot;data.KYSO&quot;)structure = lammps_data.structureposcar = Poscar(structure)poscar.write_file(&quot;POSCAR&quot;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>npt系综中的msd</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/npt%E7%B3%BB%E7%BB%BC%E4%B8%AD%E7%9A%84msd/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/npt%E7%B3%BB%E7%BB%BC%E4%B8%AD%E7%9A%84msd/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="NPT系综中的msd"><a href="#NPT系综中的msd" class="headerlink" title="NPT系综中的msd"></a>NPT系综中的msd</h1><p>周期性边界条件既可以看作环边界，也可以看作重复的无限大晶格。</p><p>&#x3D;&#x3D;有两个问题，一个是压力浴带来的原子人为位移，另一个是反折叠轨迹过程中出现的误差积累&#x3D;&#x3D;</p><ol><li>npt分子动力学中由于unwraped引起的误差积累，下面两篇文章都讨论了</li></ol><p><code>Systematic errors in diffusion coefficients from long-time molecular dynamics simulations at constant pressure</code></p><p><code>Unwrapping NPT Simulations to Calculate Diffusion Coefficients</code></p><blockquote><p>距离中心格子越远的格子，其晶格收放导致的原子位移会逐渐变大，随着越远，理论上是无限制的</p><p>当离子跨过边界时，在轨迹尚且距离中心盒子比较近时，按照NVT的方法（判断当前步中离子坐标与还可以标定出去，但是当离开中心盒子几个盒子之后，此时发生一次晶格收放后，离子本身有很大的位移，无法判断是否是由于跨过了边界还是由晶格收放导致的</p><p>但是wraped的方法得到的图像总是正确的，因为wraped下的坐标是相对的</p><p>在做npt分子动力学时，要注意所使用软件用到的unwraped方法，不清楚lammps的unwraped的方法是什么样的</p><p>&#x3D;&#x3D;lammps NAMD反折叠的轨迹不能用来计算NPT的扩散系数！！！&#x3D;&#x3D;</p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240418194855603.png" alt="image-20240418194855603"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240418200557994.png" alt="image-20240418200557994"></p><ol start="2"><li>NPT系综没有动量守恒的要求，关于npt系综中计算msd的问题，有由压力浴导致的对原子的人为移动，在计算msd时应该消除这种膨胀过程导致的msd</li></ol><blockquote><p>在NPT系综中，有一个压力浴，压力浴会动态的调整晶胞的大小来确保压力的稳定。晶胞中的离子会有两种位移，一种是按物理规律演化带来的位移，另一种是在晶胞中保持相对位置而产生的位移</p></blockquote><p><a href="https://matsci.org/t/lammps-users-ensembles-msd-calculation-in-lammps/5103">https://matsci.org/t/lammps-users-ensembles-msd-calculation-in-lammps/5103</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240418204117685.png" alt="image-20240418204117685"></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
          <category> msd </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>lammps的输出</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E7%9A%84%E8%BE%93%E5%87%BA/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/lammps%E7%9A%84%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><p>lammps中有四种输出的类型</p><blockquote><p>thermodynamic output :每隔一定时间步 向log或屏幕输出的量 thermo_style</p><p>dump files: 按照固定频率输出到文件中的系统的按原子划分的性质，包括坐标和可计算的物理量，如msd等</p><p>特定的fix命令也可以用于输出用户定义的量，包括 fix ave&#x2F;time用于时间平均，fix ave&#x2F;chunk 空间平均，fix print 用于单行变量的输出</p><p>restart files</p></blockquote><p>lammps的数据类型：global,per-atom,local,per-grid</p><blockquote><p>global  全局的数据，如温度</p><p>per-atom 分原子的数据，如每原子的动能</p><p>local  原子组成的部分的性质，如键长</p><p>per-grid </p></blockquote><p>lammps数据的表现形式</p><blockquote><p>scalar (标量) vector  array（2维）</p><p>global  scalar&#x2F;vector&#x2F;array</p><p>per-atom vector&#x2F;aray  </p><p>local vector&#x2F;array</p><p>per-grid vector&#x2F;array</p><p>只有global是标量，因为其他的都通过多个划分组合成整体，因此不会是单独某个小区域量</p></blockquote><p>lammps中comuput和fix和variable输出数据的形式</p><blockquote><p>不同种类的组合</p></blockquote><p>lammps中数据的引用</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240415095229408.png" alt="image-20240415095229408"></p><p>不同输出方式可输出的内容</p><blockquote><p>thermodynamic output   thermo_style设定预输出数据，也可以输出<code>c_ID f_ID v_name</code>得到的global data</p><p>既输出扩展数据也输出归一数据（总能随着体系增大而增加），可以通过thermo_modify norm 来决定是否输出归一化数据</p></blockquote><blockquote><p>dump file 使用dump + dump modify输出 只能输出per_atom数据 </p><p>dump local用于输出局部数据</p><p>dump grid 用于输出pre_grid data</p></blockquote><blockquote><p>fix 只有特定几个命令可用于输出</p><p>fix ave&#x2F;time  时间平均，需要输入global data,</p><p>fix ave&#x2F;chunk 空间平均  例如特定的分子，可以是每原子的物理量，如原子贡献 ,</p><p>fix ave&#x2F;histo, 输出全局或每原子或局部的直方图数据</p><p>fix ave&#x2F;correlate,输出时间关联量</p><p>fix print 可以输出到log文件也可以输出到特定文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>内置的msd算法&amp;质心飘移&amp;TMSD与MSD</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E5%86%85%E7%BD%AE%E7%9A%84msd%E7%AE%97%E6%B3%95&amp;%E8%B4%A8%E5%BF%83%E9%A3%98%E7%A7%BB%E5%8A%A8/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E5%86%85%E7%BD%AE%E7%9A%84msd%E7%AE%97%E6%B3%95&amp;%E8%B4%A8%E5%BF%83%E9%A3%98%E7%A7%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="msd计算方法"><a href="#msd计算方法" class="headerlink" title="msd计算方法"></a>msd计算方法</h1><ol><li><code>compute ID group-ID msd keyword values ...</code></li></ol><blockquote><p>计算一个四元的向量，是global vector,前三项分别是<code>$dx^2$</code> … 最后一项是加和</p><p>ID   可以是数字也可以是字符串</p><p>group-ID  组的名字，需要提前定义一个组</p><p>msd  compute的style</p><p>keyword  &#x3D;com or average</p><p>keyword &#x3D; com  values &#x3D; yes or no  </p><p>默认值为com &#x3D;no   average&#x3D;no</p><p>keword &#x3D; average values &#x3D; yes or no</p><p>com yes 表示  <strong>计算当前选定的组的原子的质心</strong>，并在组内去除质心漂移的效果</p><p>avergae yes 表示 计算msd的参考点设置为这个原子的平均位置 只适合没有原子扩散的时候，比如热传导</p></blockquote><p>example 五洲 &#x2F;public&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;4_error_bar_for_na&#x2F;1&#x2F;800&#x2F;test&#x2F;test2&#x2F;msd_test</p><p>lammps计算时默认是固定所有原子的整体的质心的模式来做的。</p><p>以Na5YSi4O12为例，分别计算all 和Na分组的msd ,com 分别设定为yes和no。预期结果是all 的yes和no 相同，因为模拟是固定了质心的，所以all 没有质心漂移。而na分组的yes和no的结果不同 ，因为na的质心没有固定.<strong>做这个测试是为了说明在<code>分组计算</code>msd的时候，不能用com&#x3D;yes，因为会导致不正确，只去除了扩散原子的质心，但是扩散原子质心的变化并不是真正的质心漂移</strong></p><p><del>正确的应该是以不动的原子为基准，确立一个质心，及其后续模拟中的质心漂移，用扩散的原子的msd减去质心的漂移得到真正的扩散原子的msd，</del><strong>如果在模拟晶胞时，原子扩散的取向是各向同性的，那Na分组的质心应该也不会有太大变化。</strong></p><p>以下是结果，和预测相同，all没有变化，但是Na有，不能使用Na com&#x3D;yes, 但是na com&#x3D;no又没有去除质心的漂移</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240413104430787.png" alt="image-20240413104430787"></p><h2 id="质心漂移、关于fix-recenter"><a href="#质心漂移、关于fix-recenter" class="headerlink" title="质心漂移、关于fix recenter"></a>质心漂移、关于fix recenter</h2><blockquote><p><a href="https://tinevez.github.io/msdanalyzer/tutorial/MSDTuto_drift.html">https://tinevez.github.io/msdanalyzer/tutorial/MSDTuto_drift.html</a></p></blockquote><p>由于在进行分子动力学模拟时，系统的动量为零，因此质心的速度为零<strong>（质心速度公式与总动量相关）</strong>，当一个离子向前扩散时，此时离子有向前的速度，那么系统整体的除了这个原子的总动量质心有向后的速度。这里有两种观看视角，一种是在质心的位置，观察到的是一个离子向前运动，其他的离子向后运动，一种是在除了这个扩散离子的其他的离子整体的位置看，离子有一个位移。计算相对质心位置的msd，那就是lammps现在做的事情，但是msd应该计算相对除了这个扩散离子的其他的整体的位移，这需要固定住除了这个扩散离子后的部分</p><p>这是模拟的限制而不是现实</p><p>见ppt  L-2-2024 4_17.ppts</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240417154441234.png" alt="image-20240417154441234"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240802171748317.png" alt="image-20240802171748317"></p><p>动量守恒与质心不变是互易的，因此，既可以按移动原子后移动质心回到原点的图像，也可以按在原子有动量时其他原子有相反的动量的图像来考虑物理的过程。这两种思考的统一结论是，msd的原子应该是相对于原来位置的移动距离而不是相对质心的移动距离。<strong>从模拟出的图像上看，是没有问题的，但是轨迹线是有问题的</strong></p><p><strong>如果能够保证扩散在各个方向上是各向同性的，那轨迹线是没问题的，但是如果是各向异性的，那就不合理。各向同性要求晶胞足够大。</strong></p><p>一个问题是为什么会发生原子的‘聚集’扩散现象</p><p>如何计算正确的Na的msd ，把不动的那些原子的质心固定住，用他们作为一个基准，这样，计算出来的钠的msd就是正确的</p><p>fix recenter是<strong>与fix  nve&#x2F;nvt&#x2F; 这些命令同时进行</strong>的，应该放在这些会改变原子信息的命令之后，fix recenter的执行顺序与它的位置无关，即便在之前有计算质心的命令，输出的质心还是改变之后的。</p><p>fix recenter 中shift 的使用</p><blockquote><p>不加shift就只移动recenter的原子群</p><p>加了shift all 才移动所有的原子</p><p>不加shift all 是不对的，会破坏原子间相互位置关系</p></blockquote><p><strong><code>fix 1 ysio recenter INIT INIT INIT shift all</code></strong></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240802210719395.png" alt="image-20240802210719395"></p><p><a href="https://matsci.org/t/fix-recenter-question/15131/6">https://matsci.org/t/fix-recenter-question/15131/6</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240417195310746.png" alt="image-20240417195310746"></p><p><strong>在计算中发现的不动原子的msd的增加是正常的，是上述质心不动的原因</strong>，发现的不动离子的移动也是可以理解的了。</p><p>对于计算msd，问题在于以什么为基点，是计算离子相对质心的运动还是相对初始位置的运动（初始位置由与其他原子的位置关系确定）。在其他原子组成的质心没有发生太大变化时，这两者是一致的</p><p>现在，对于msd的理解，直接使用相对质心的位移，并且不能计算所有的原子的总均方位移。使用相对真实位置的位移是真实的物理环境，因为在kysio中，使用相对质心的位移，那么从结果看，ysio也在运动，这是不对的，但是在模拟时无法做到计算相对真实物理世界的位置的。</p><p>考虑液体时，某一类离子向不同方向的扩散是各向同性的，那么这类离子不会带来其他离子的位置的改变，进而这类离子的扩散是真实的。</p><h2 id="非常重要"><a href="#非常重要" class="headerlink" title="非常重要"></a>非常重要</h2><p><strong>一旦在模拟中出现某个方向上各向异性的扩散或者移动，那么此时的模拟图像是准确的，但是msd计算就是不准确的了，这也是分子动力学模拟大胞的必要性，可以消除这种各向异性</strong></p><p><strong>在某些特定时间段内，离子向一个方向的聚集扩散没有理由认为是错误的（极简时可以考虑一个体系中只有一个足够重的间隙离子在运动）</strong></p><p><strong>如何判断模拟的尺寸是否足够大？看计算的不同种类的离子的质心是否保持稳定。在计算分子动力学过程中，理论上要求所计算的不同种类的原子的质心都保持稳定</strong></p><p><del>小胞需要模拟足够长的时间才能消除这种各向异性，在某些特定时间段内，离子向一个方向的聚集扩散没有理由认为是错误的（极简时可以考虑一个体系中只有一个足够重的间隙离子在运动），如果为了计算msd，这种局部的各向异性需要计算足够长的时间来消除。在足够长时间的模拟消除各向异性后，计算msd就可以使用相对质心的计算来代表了，各向异性带来波动</del></p><p><del>如何判断模拟的时间是否足够长，如何判断模拟的尺寸是否足够大？看计算的不同种类的离子的质心是否保持稳定。在计算分子动力学过程中，理论上要求所计算的不同种类的原子的质心都保持稳定，模拟大的晶胞是更划算的</del></p><p><del>以质心为标定点，对于一个离子扩散出晶胞，在模拟中这个离子的msd的倾向是小于真实的值，但是对于一个离子向晶胞扩散，在模拟中这个离子的msd的倾向是大于向内扩散的距离</del></p><p><strong>离子向外扩散时，真实是B，按质心计算是A，但是离子向内扩散时，质心计算是A，实际是B。不论向内还是向外，各向异性的扩散在使用质心作为标定点时，计算的msd总是偏小的，这种误差也许是可以被忽略的，因为以质心看，除了扩散离子的晶体的其他部分的位移（两部分，一部分扩散原子，一部分非扩散原子，其中非扩散原子多且重于扩散原子的情形）应该是比较小的，因为小部分扩散原子带不动大部分原子。</strong></p><p><strong>模拟和真实是完全不同的两种情况</strong></p><p><strong>当需要处理两帧之间的nvt系综确定的量时，这种问题就会出现</strong></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240417211802624.png" alt="image-20240417211802624"></p><p><strong>lammps的NPT模拟输出的unwraped轨迹不能用于计算扩散系数！！，因为随着距离中心原子的距离增加，其轨迹是失真的</strong>（见Unwrapping NPT Simulations to Calculate Diffusion Coefficients）</p><p><strong>应该尽量使用NVT而不是NPT</strong></p><h2 id="计算时固定质心和折叠轨迹"><a href="#计算时固定质心和折叠轨迹" class="headerlink" title="计算时固定质心和折叠轨迹"></a>计算时固定质心和折叠轨迹</h2><p>固定质心后输出折叠后的轨迹（x y z)，计算质心会发现质心变化，但这种变化是折叠轨迹导致的，而不是质心真的发生了变化，计算仍然是固定了质心，需要反折叠(xu yu zu)才能看到真正的质心</p><p>xu yu zu和x y z的区别  </p><blockquote><p>xu yu zu是未折叠的轨迹，</p><p><a href="https://docs.lammps.org/dump.html">dump command — LAMMPS documentation</a></p></blockquote><p><code>group           stay type 2 3 4</code>  <code>fix             7 stay recenter INIT INIT INIT</code></p><p>能够固定不动原子的质心，把跑出去的轨迹拉到使得不动原子保持质心不动的位置，优先级高于默认的使得整个体系质心保持不动，变相地做到了只考虑运动原子的扩散</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/63ebbed19acfec7dc6716915cc8a9b3.jpg" alt="63ebbed19acfec7dc6716915cc8a9b3"></p><h2 id="4-计算MSD"><a href="#4-计算MSD" class="headerlink" title="4. 计算MSD"></a>4. 计算MSD</h2><p>msd图 ，msd斜率收敛图  温度压力能量图三者不可缺</p><h3 id="1-对比lammps自带的msd，自己脚本的，和vmd的"><a href="#1-对比lammps自带的msd，自己脚本的，和vmd的" class="headerlink" title="1.对比lammps自带的msd，自己脚本的，和vmd的"></a>1.对比lammps自带的msd，自己脚本的，和vmd的</h3><p>所用机器：华为&#x2F;home&#x2F;jildxwlxyljlstdui&#x2F;cccs-share02&#x2F;lijx&#x2F;liz&#x2F;2-Na-X-Si-O&#x2F;2_NaXSiO_big_model&#x2F;2_Sb_test&#x2F;4_test_formsd  </p><p>自带</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307153921721.png" alt="image-20240307153921721"></p><p>脚本</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307153604805.png" alt="image-20240307153604805"></p><p>VMD </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307153509369.png" alt="image-20240307153509369"></p><p>vmd和自己脚本算的基本一致，lammps增加了不动的部分原子，最后计算出来也和自己脚本相差无几 （VMD算出来的额数字需要先平方才能比较）</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307161109210.png" alt="image-20240307161109210"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307160924547.png" alt="image-20240307160924547"></p><p>YSIO不动，导致lammps算出的总msd有一个上移的步骤，不论如何，不应该考虑这部分向上平移。最开始算不出直接的平移是因为单种原子本身的均方根位移也为0，还没有到平衡位置，间隔一段时间后才能显示出平移的效应</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307162343926.png" alt="image-20240307162343926"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240307162359408.png" alt="image-20240307162359408"></p><p>在去掉平移的一部分后，两个获得的斜率相差很小，因此，可以用lammps自带的msd，但是注意这时候的N为所有原子总数包括Na和非钠的所有元素</p><h1 id="关于TMSD和MSD和D"><a href="#关于TMSD和MSD和D" class="headerlink" title="关于TMSD和MSD和D"></a>关于TMSD和MSD和D</h1><p>电导率最终看的是TMSD，只需要保证TMSD对时间的斜率最终相同就不会错</p><p>需要注意的是，扩散系数的值是和包括的不动的原子的数目相关的，包括的越多，扩散系数越小，因此，这里的扩散系数并不是真正的扩散系数，而是修改版的（因为除以的原子数中有一部分没有动）。真正的扩散系数应该只看运动的那些</p><p>对任何一个系统，不管算哪些原子，扩散系数肯定是不变的，变化的只是原子数，但是只有这些原子贡献了斜率，所以只需要求出所有的TMSD，求出斜率后换算到对应的原子数就得到了准确的扩散系数</p><p><strong>严格来说，均方根位移应该是对所有移动的原子做平均均方，所以我现在做的不算是均方根位移，因为包括了那些不移动的原子</strong></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/058cae6d61b28acc20da4ac06f8068d.jpg" alt="058cae6d61b28acc20da4ac06f8068d"></p><h3 id="2-python脚本"><a href="#2-python脚本" class="headerlink" title="2.python脚本"></a>2.python脚本</h3><blockquote><p><strong>三处需要修改</strong>，<strong>1处可能需要改</strong></p></blockquote><pre><code class="python">import numpy as npimport timedef timer(func):    def wrapper(*args, **kwargs):        start_time = time.time()        result = func(*args, **kwargs)        end_time = time.time()        print(f&quot;Time elapsed: &#123;end_time - start_time:.4f&#125; seconds&quot;)        return result    return wrapper@timerdef read_lmp_trj(file_name: str):    f = open(file_name, &#39;r&#39;)    &quot;&quot;&quot;data segment&quot;&quot;&quot;    n_atoms_list = []    lat = []    pos = []    num1 = 0#跳过文件的行数，需要修改     num_lines_to_skip = (132000+9)*100    current_line_num = 0    &quot;&quot;&quot;temp&quot;&quot;&quot;    # n_atoms = None    while True:        line = f.readline()        if not line:            break                current_line_num += 1         if current_line_num &lt;= num_lines_to_skip:            continue                if &quot;NUMBER OF ATOMS&quot; in line:            line = f.readline()            n_atoms = int(line)            n_atoms_list.append(n_atoms)            f.readline()            &quot;&quot;&quot;lat&quot;&quot;&quot;            for i in range(3):                lines = f.readline()                lat.append(lines)            f.readline()            &quot;&quot;&quot;pos&quot;&quot;&quot;            for i in range(n_atoms):                pos.append(f.readline())#每隔1000个时间间隔读取一次 需要改            hhh = (n_atoms+9)*999            for m in range(hhh):                lines2 = f.readline()            num1 +=1            print(num1)    &quot;&quot;&quot;post treatment&quot;&quot;&quot;    #固定一个三维数组的两个维度，第三个维度也固定了，numpy的逻辑应该是3-2-1，第三个维度先排布，依次向前，第一个是深度    lat = np.array([i.split() for i in lat]).astype(float).reshape(-1, 3, 3)#需要看这里的8需不需要改    pos = np.array([i.split() for i in pos]).astype(float).reshape(len(lat), -1, 8)  #  idx = pos[:, :, 0].argsort(1)    #lexsort的顺序是从最后一个传入的参数开始，依次到第一个传入的参数    idx =np.lexsort((pos[:,:,0],pos[:,:,1]))    sort_pos = pos[np.arange(len(pos))[:, None], idx, :]    start3 = sort_pos[:,:,0:2].reshape(-1,2)    n_atoms_list = np.array(n_atoms_list)    return n_atoms_list, lat, sort_pos[:, :, [0, 2, 3, 4]],start3if __name__ == &#39;__main__&#39;:    file_name = &quot;A.lammpstrj&quot;    print(&quot;Loading lmp trajectory&quot;)    n_atoms, _, x,stc = read_lmp_trj(file_name=file_name)    x = x[:, :, 1:]    #np.savetxt(&#39;first_element.txt&#39;, x[0])    #np.savetxt(&#39;end_element.txt&#39;,x[-1])    print(&quot;X shape : &quot;, x.shape)    print(&quot;N frames: &quot;, n_atoms.shape)#30这里需要修改，是移动的原子个数    res = np.square(x - x[0])[1:,:30,:].sum((1, 2))    res = res / 30   # print(res)    np.save(&quot;./res2&quot;, res)    arr = np.load(&#39;res2.npy&#39;)#print(arr)    rows = np.arange(arr.shape[0])    rows += 1#print(rows)    stac = np.stack([rows, arr], axis=1)#print(stac)    np.savetxt(&#39;newdata.txt&#39;,stac,fmt=&#39;%.5f&#39;,delimiter=&#39;,&#39;)    np.savetxt(&#39;stc.txt&#39;,stc,fmt=&#39;%d&#39;,delimiter=&#39;,&#39;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>参数variable</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E5%8F%82%E6%95%B0variable/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/%E5%8F%82%E6%95%B0variable/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>variable 命令</p><p><a href="https://zhuanlan.zhihu.com/p/661273076">LAMMPS 学习笔记之 variable 命令 - 知乎 (zhihu.com)</a></p><p>在LAMMPS中，<code>variable</code>命令用于定义一个变量，该变量可以在后续的输入文件中被引用，以设置参数的值。变量可以是一个常量、一个表达式、一个字符串或者一个索引值。它们可以在许多LAMMPS命令中使用，提供了一种灵活的方式来设置和修改参数，尤其是在需要参数化输入文件或者进行参数研究时非常有用。<br><code>variable</code>命令的基本语法如下：</p><pre><code>variable name style value</code></pre><p>其中：</p><ul><li><code>name</code> 是变量的名称，用于后续引用。</li><li><code>style</code> 是变量的类型或样式，决定了变量如何被解析和计算。</li><li><code>value</code> 是变量的值，可以是数字、表达式、字符串等。<br>LAMMPS支持多种变量样式，以下是一些常用的样式及其含义：</li></ul><ol><li><p><code>equal</code>：定义一个变量的值为一个表达式或者常量。例如：</p><pre><code>variable temp equal 300.0</code></pre><p>这里定义了一个名为<code>temp</code>的变量，其值为300.0。</p></li><li><p><code>atom</code>：定义一个与原子相关的变量，通常用于访问原子的属性。例如：</p><pre><code>variable x atom x</code></pre><p>这里定义了一个名为<code>x</code>的变量，它引用了原子的x坐标。</p></li><li><p><code>index</code>：定义一个索引变量，它的值在每次引用时都会增加。例如：</p><pre><code>variable i index 1</code></pre><p>这里定义了一个名为<code>i</code>的索引变量，初始值为1，每次引用时都会自动增加1。</p></li><li><p><code>loop</code>：定义一个循环变量，通常与<code>jump</code>命令一起使用，用于在输入文件中创建循环。例如：</p><pre><code>variable j loop 5</code></pre><p>这里定义了一个名为<code>j</code>的循环变量，它的值会在1到5之间循环。</p></li><li><p><code>format</code>：定义一个格式化字符串，用于格式化输出。例如：</p><pre><code>variable msd format %16.8e</code></pre><p>这里定义了一个名为<code>msd</code>的格式化字符串，用于以特定的格式输出数据。</p></li><li><p><code>file</code>：定义一个变量，其值来自一个文件。例如：</p><pre><code>variable params file params.txt</code></pre><p>这里定义了一个名为<code>params</code>的变量，其值从<code>params.txt</code>文件中读取。</p></li><li><p><code>string</code>：定义一个字符串变量。例如：</p><pre><code>variable message string &quot;Hello, LAMMPS!&quot;</code></pre><p>这里定义了一个名为<code>message</code>的字符串变量，其值为”Hello, LAMMPS!”。<br>变量可以在LAMMPS输入文件的许多地方被引用，通过在变量名前加上<code>$</code>符号来实现。例如，在<code>timestep</code>命令中使用变量<code>ss</code>：</p></li></ol><pre><code>timestep $&#123;ss&#125;</code></pre><p>这里，时间步长被设置为变量<code>ss</code>的值。<br>使用变量可以使得LAMMPS输入文件更加灵活和易于维护，特别是在需要改变模拟参数或者进行参数化研究时。</p><h1 id="使用variable的index进行多次重复模拟"><a href="#使用variable的index进行多次重复模拟" class="headerlink" title="使用variable的index进行多次重复模拟"></a>使用variable的index进行多次重复模拟</h1><p><a href="https://docs.lammps.org/Howto_multiple.html">8.1.3. Run multiple simulations from one input script — LAMMPS documentation</a></p><p>fix和dump的区别</p><ol><li>fix命令用于在模拟过程中对系统施加各种约束和操作，也可以用于计算和输出特定物理量（只有特定的几个命令可用），如MSD,fix命令通常在模拟过程中持续作用，直到被删除或模拟结束</li></ol><pre><code class="shell">fix ID group-ID style args</code></pre><p>例：<code>fix 1 all nvt temp 300.0 300.0 100.0</code>  指定进行nvt计算，阻尼系数为100</p><pre><code class="shell">compute         msd1 Na msdfix             2 all ave/time 1 1 1 c_msd1[4] file Na_MSD.dat</code></pre><p>搭配compute，进行操作，做计算。&#x3D;&#x3D;理论上，compute+fix能够得到所有可能得到的lammps中已经实现的操作&#x3D;&#x3D;</p><p><code>fix ID group-ID ave/time Nevery Nrepeat Nfreq value1 value2 ... keyword args ...</code></p><p>Nevery 每多少步算一次，Nrepeat 平均多少步 Nfreq 每多少步输出一次</p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>in.lmp参数</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/in-lmp%E5%8F%82%E6%95%B0/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/lammps%E6%A8%A1%E6%8B%9F/in-lmp%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>lammps读取设置的方式与vasp不同，vasp是计算之前全部读取，而lammps是逐行读取，在读取每一行后都会进行相应的操作，输入文件读取完毕，lammps结束</p><p>一个完整的lammps in.data文件应该包括 <code>系统设置、模拟晶格/建模、相互作用势设置、计算设置/模拟条件、热力学输出与数据处理</code>几个部分</p><p>运行lammps使用  -in -in.file </p><p>lammps的命令行区分大小写 </p><p>#号不要乱用</p><hr><h1 id="1-系统设置"><a href="#1-系统设置" class="headerlink" title="1.系统设置"></a>1.系统设置</h1><p><code>newton</code>:控制通信; 在read_data 或者create_box后，不能修改 ，默认为on</p><p><code>package</code>   对不同的机器进行加速？ 需要设置在顶部</p><p><code>processors</code>  多进程的命令</p><p><code>suffix</code></p><p><code>units(重要)</code> 指定文件中的单位 ，设置为metal符合常规理解的单位。</p><p>需要在设置建模之前设置，默认为lj 。需要修改为metal，默认的模拟时间步长为 1 fs</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230721165151960.png" alt="image-20230721165151960"></p><h1 id="2-建模"><a href="#2-建模" class="headerlink" title="2.建模"></a>2.建模</h1><p> <code>boundary（重要）</code>   boundary x y z  </p><p>可设置在不同方向上的边界条件 ，默认为 p p p ；p是周期性边界条件 可以设置为两个字母，分别对上下两个表面设置。设置p只能为一个字母。</p><h1 id="4-模拟的设置"><a href="#4-模拟的设置" class="headerlink" title="4.模拟的设置"></a>4.模拟的设置</h1><h2 id="temp控温器频率的设置"><a href="#temp控温器频率的设置" class="headerlink" title="temp控温器频率的设置"></a>temp控温器频率的设置</h2><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095627682.png" alt="image-20240518095627682"></p><p>既不能太大（会导致升温出问题）也不能太小（控制太严格，没法跑）</p><p>对于大胞应该减小频率的值</p><p>路径&#x2F;public&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;5_bigmodel_md&#x2F;test&#x2F;tdamp</p><p>111胞</p><p>0.001</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095021575.png" alt="image-20240518095021575"></p><p>0.01</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095036784.png" alt="image-20240518095036784"></p><p>0.1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095049830.png" alt="image-20240518095049830"></p><p>1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095059449.png" alt="image-20240518095059449"></p><p>10</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095111902.png" alt="image-20240518095111902"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095121218.png" alt="image-20240518095121218"></p><p>1000</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095132036.png" alt="image-20240518095132036"></p><p>333胞</p><p>0.001 </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092249192.png" alt="image-20240518092249192"></p><p>0.01</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092302969.png" alt="image-20240518092302969"></p><p>0.1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092315834.png" alt="image-20240518092315834"></p><p>1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092328843.png" alt="image-20240518092328843"></p><p>10</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092340008.png" alt="image-20240518092340008"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092425126.png" alt="image-20240518092425126"></p><p>1000</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092437206.png" alt="image-20240518092437206"></p><p>666胞</p><p>0.001</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092537274.png" alt="image-20240518092537274"></p><p>0.01</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092549991.png" alt="image-20240518092549991"></p><p>0.1 </p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092602604.png" alt="image-20240518092602604"></p><p>1</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092624982.png" alt="image-20240518092624982"></p><p>10</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092642026.png" alt="image-20240518092642026"></p><p>100</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092701605.png" alt="image-20240518092701605"></p><p>1000</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518092716921.png" alt="image-20240518092716921"></p><p>路径 &#x2F;home&#x2F;jildxwlxyljlstdui&#x2F;cccs-share02&#x2F;lijx&#x2F;liz&#x2F;2-Na-X-Si-O&#x2F;2_NaXSiO_big_model&#x2F;3_md_for_single_element&#x2F;13_Sm&#x2F;1000_444</p><p>0.5</p><p>10</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240311171144437.png" alt="image-20240311171144437"></p><p>50</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240311171217694.png" alt="image-20240311171217694"></p><p>100</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240311171243284.png" alt="image-20240311171243284"></p><p>1000</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240311171312642.png" alt="image-20240311171312642"></p><h2 id="velocity-和fix-nvt-temp-tstart-tstop"><a href="#velocity-和fix-nvt-temp-tstart-tstop" class="headerlink" title="velocity 和fix nvt temp tstart tstop"></a>velocity 和fix nvt temp tstart tstop</h2><p>nvt应该先跑升温过程，再跑平衡过程</p><blockquote><p>测试路径：&#x2F;public&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;5_bigmodel_md&#x2F;test&#x2F;velocity-fix</p></blockquote><p>1_ve_300_fix10001000</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518100917920.png" alt="image-20240518100917920"></p><p>2_ve1000_fix10001000</p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518100947730.png" alt="image-20240518100947730"></p><p>3_ve300_fix3001000  </p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518101023972.png" alt="image-20240518101023972"></p><p>4_ve300_fix6001000  </p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518101045018.png" alt="image-20240518101045018"></p><p>5_without_ve_fix3001000 </p><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240518101107354.png" alt="image-20240518101107354"></p><p>6_withoutve_fix10001000 </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518101134414.png" alt="image-20240518101134414"></p><h1 id="5-输出"><a href="#5-输出" class="headerlink" title="5. 输出"></a>5. 输出</h1><h2 id="1-输出方式与形式"><a href="#1-输出方式与形式" class="headerlink" title="1. 输出方式与形式"></a>1. 输出方式与形式</h2><p>lammps四种输出类型</p><ul><li><p>thermodynamic output（热力学输出) : 每隔一定时间步 向log或屏幕输出的量，由thermo_style控制</p></li><li><p>dump files:  按照固定频率输出到文件中的系统的按原子划分的性质，包括坐标和可计算的物理量，如msd等</p></li><li><p>特定的fix命令也可以用于输出用户定义的量，包括 fix ave&#x2F;time用于时间平均，fix ave&#x2F;chunk 空间平均，fix print 用于单行变量的输出</p></li><li><p>restart files</p></li></ul><h3 id="lammps四种数据类型"><a href="#lammps四种数据类型" class="headerlink" title="lammps四种数据类型"></a>lammps四种数据类型</h3><ul><li><p>global  全局的数据，如温度</p></li><li><p>per-atom 分原子的数据，如每原子的动能</p></li><li><p>local  原子组成的部分的性质，如键长</p></li><li><p>per-grid</p></li></ul><h3 id="lammps数据形式"><a href="#lammps数据形式" class="headerlink" title="lammps数据形式"></a>lammps数据形式</h3><ul><li><p>scalar (标量) vector  array（2维）</p></li><li><p>global  scalar&#x2F;vector&#x2F;array</p></li><li><p>per-atom vector&#x2F;aray  </p></li><li><p>local vector&#x2F;array</p></li><li><p>per-grid vector&#x2F;array</p></li><li><p>只有global是标量，因为其他的都通过多个划分组合成整体，因此不会是单独某个小区域量</p></li></ul><p>lammps中comuput和fix和variable输出数据的形式</p><blockquote><p>不同种类的组合</p></blockquote><h3 id="lammps中数据引用"><a href="#lammps中数据引用" class="headerlink" title="lammps中数据引用"></a>lammps中数据引用</h3><p><img src="/../../../%E5%9B%BE%E7%89%87/image-20240415095229408.png" alt="image-20240415095229408"></p><h3 id="不同输出方式可输出的数据类型"><a href="#不同输出方式可输出的数据类型" class="headerlink" title="不同输出方式可输出的数据类型"></a>不同输出方式可输出的数据类型</h3><p>thermodynamic output , thermo_style设定预输出数据，也可以输出<code>c_ID f_ID v_name</code>得到的global data</p><p>既输出扩展数据也输出归一数据（总能随着体系增大而增加），可以通过thermo_modify norm 来决定是否输出归一化数据</p><hr><p>dump file 使用dump + dump modify输出 只能输出per_atom数据 </p><p>dump local用于输出局部数据</p><p>dump grid 用于输出pre_grid data</p><hr><p>fix 只有特定几个命令可用于输出</p><p>fix ave&#x2F;time  时间平均，需要输入global data,</p><p>fix ave&#x2F;chunk 空间平均  例如特定的分子，可以是每原子的物理量，如原子贡献 ,</p><p>fix ave&#x2F;histo, 输出全局或每原子或局部的直方图数据</p><p>fix ave&#x2F;correlate,输出时间关联量</p><p>fix print 可以输出到log文件也可以输出到特定文件</p><hr><h2 id="2-ITEM中xy-xz-yz的含义"><a href="#2-ITEM中xy-xz-yz的含义" class="headerlink" title="2. ITEM中xy xz yz的含义"></a>2. ITEM中xy xz yz的含义</h2><p><a href="https://docs.lammps.org/dump.html">dump command — LAMMPS documentation</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231125162429505.png" alt="image-20231125162429505"></p><p>用一个正交的格子把三斜格子包围起来，</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/0870f414f31f528da4ab64315010825.png" alt="0870f414f31f528da4ab64315010825"></p><p>前两列是正交格子的边界，第三列应该是投影值</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/a67102ceb8e3dee5e1fa995e14cde3a.jpg" alt="a67102ceb8e3dee5e1fa995e14cde3a"></p><h1 id="6-跑完后补充新计算的-rerun方法"><a href="#6-跑完后补充新计算的-rerun方法" class="headerlink" title="6. 跑完后补充新计算的 rerun方法"></a>6. 跑完后补充新计算的 rerun方法</h1><p><a href="https://mp.weixin.qq.com/s/pDWaxcdq75hmMOdbG9hSNQ">lammps已跑完，不想重跑，如何补充新的计算？ (qq.com)</a></p><blockquote><p> 用于计算snapshot的新的性质</p><p><code>rerun file1 file2 ... keyword args ...</code></p></blockquote><h1 id="7-两个in-lmp输入文件"><a href="#7-两个in-lmp输入文件" class="headerlink" title="7. 两个in.lmp输入文件"></a>7. 两个in.lmp输入文件</h1><pre><code class="shell">variable        x index 1variable        y index 1variable        z index 1variable        ss equal 0.001variable        tdamp equal &quot;v_ss*100&quot;variable        dmsdx  equal   c_1[1]variable        dmsdy  equal   c_1[2]variable        dmsdz  equal   c_1[3]variable        dmsd   equal   c_1[4]variable        istep  equal   stepvariable        msdx   format  dmsdx  %16.8evariable        msdy   format  dmsdy  %16.8evariable        msdz   format  dmsdz  %16.8evariable        msd    format  dmsd   %16.8evariable        sstep  format  istep  %-10gunits           metalatom_style      atomicboundary        p p pread_data       ./data.nsomass            1 6.941    #importantmass            2 88.91mass            3 28.084mass            4 15.999replicate       $x $y $zpair_style      acnn model-5000pair_coeff      * * Li   Y   Si   O   #importantthermo          1thermo_style    custom step time temp press pe lx ly lz kethermo_modify   format 4 %20.15gcompute         1 all msd com yesdump            out  all custom 100 A.lammpstrj id element xu yu zu fx fy fzdump_modify     out  element 1   2   3   4dump_modify     out  format 1 %4ddump_modify     out  format 2 %4sdump_modify     out  format float %16.8fvelocity        all create 600.0 8728timestep        $&#123;ss&#125;fix             1 all nvt temp 1000 1000 $&#123;tdamp&#125;fix             2 all print 1 &quot;$&#123;sstep&#125; $&#123;msdx&#125; $&#123;msdy&#125; $&#123;msdz&#125; $&#123;msd&#125;&quot; screen no file msd.datrun             1000000</code></pre><hr><pre><code class="shell">#variablevariable        x equal 1variable        y equal 1variable        z equal 1variable        step_time equal 0.001variable        tdamp equal &quot;v_step_time*100&quot;# initialize simulation settingsunits           metalboundary        p p patom_style      atomic# define the simulation cellread_data       data.nysogroup           na  type 1mass            1 22.99mass            2 88.91mass            3 28.084mass            4 15.999replicate       $x $y $z# set force fieldpair_style      nnp SingleModel ./inv2 emap &quot;1:Na,2:Y,3:Si,4:O&quot;pair_coeff      * *# nvt simulation  velocity        all create 800 3fix             1 all nvt temp 800 800 $&#123;tdamp&#125;timestep        $&#123;step_time&#125;# rdf calculation #compute         rdf all rdf 100 1 1 1 2 2 2#fix             2 all ave/time 100 1 100 c_rdf[*] file licl.rdf mode vector# msd calculationcompute         msd1 na msd com yesfix             2 all ave/time 1 1 1 c_msd1[4] file Na_yes_MSD.datcompute         msd2 na msd com nofix             3 all ave/time 1 1 1 c_msd2[4] file Na_no_MSD.datcompute         msd3 all msd com yesfix             4 all ave/time 1 1 1 c_msd3[4] file all_yes_MSD.datcompute         msd4 all msd com nofix             5 all ave/time 1 1 1 c_msd4[4] file all_no_MSD.dat# outputthermo_style    custom step temp pe ke etotal press lx ly lzthermo          1dump            1 all custom 100 lammps.trj id type x y z log             ./log.lammpsrun             10000</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> lammps模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vasp批量提任务</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/vasp%E6%A8%A1%E6%8B%9F/vasp%E6%89%B9%E9%87%8F%E6%8F%90%E4%BB%BB%E5%8A%A1/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/vasp%E6%A8%A1%E6%8B%9F/vasp%E6%89%B9%E9%87%8F%E6%8F%90%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-批量提任务"><a href="#1-批量提任务" class="headerlink" title="1. 批量提任务"></a>1. 批量提任务</h1><pre><code class="shell">for i in  600 800 900 1000domkdir $icd $imkdir 1scaled 2equilibrium 3mdcd 1scaledcat &gt; INCAR &lt;&lt; lizSYSTEM = Na-X-Si-OENCUT = 400PREC = NormalEDIFF = 1e-5ISMEAR = 0 SIGMA=0.05ISYM=0NELM=200NELMIN=4IBRION= 0POTIM = 2NSW = 1000ALGO = NormalSMASS= -1   ISIF= 0    #ISIF=0是IBRION=0的默认值TEBEG=100TEEND=$iLCHARG=FLWAVE=FNBLOCK=1KBLOCK=1LREAL=ANPAR=6lizcd ..cd 2equilibriumcat &gt; INCAR &lt;&lt; lizSYSTEM = Na-X-Si-OENCUT = 400PREC = NormalEDIFF = 1e-5ISMEAR = 0 SIGMA=0.05ISYM=0NELM=200   NELMIN=4IBRION= 0POTIM = 2NSW = 2000ALGO = NormalMDALGO = 0SMASS= 0   ISIF= 2    TEBEG=$iLCHARG=FLWAVE=FNBLOCK=1KBLOCK=1LREAL=ANPAR=6lizcd ..cd 3mdcat &gt; INCAR &lt;&lt; lizSYSTEM = LiYPSENCUT = 400PREC = NormalEDIFF = 1e-5ISMEAR = 0 SIGMA=0.05ISYM=0NELMIN=4NELM=200IBRION= 0POTIM = 2NSW = 50000ALGO = NormalMDALGO = 0SMASS= 0   ISIF= 2    TEBEG=$iLCHARG=FLWAVE=FNBLOCK=1KBLOCK=1LREAL=ANPAR=6lizcd ..cd ..cp POSCAR KPOINTS POTCAR vasp.pbs $i/1scaledcp KPOINTS POTCAR vasp.pbs $i/2equilibriumcp KPOINTS POTCAR vasp.pbs $i/3mdcd $i/1scaled qsub vasp.pbscd ..cd ..done</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> vasp模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>van hove 函数</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/van-hove-%E5%87%BD%E6%95%B0/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/van-hove-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="10-van-hove-funtion"><a href="#10-van-hove-funtion" class="headerlink" title="10 van hove funtion"></a>10 van hove funtion</h1><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240425153641194.png" alt="image-20240425153641194"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240425153704389.png" alt="image-20240425153704389"></p><ol><li><p>1.自相关函数（G_s(r,t)）：描述了单个粒子在时间t内从初始位置r到位置r+t的位移分布。它反映了粒子的扩散行为，即粒子在时间t内移动了多远。</p></li><li><p>2.互相关函数（G_d(r,t)）：描述了粒子i在时间t内从初始位置r到位置r+t的位移分布，同时考虑了粒子j在同一时间内的位移。它反映了粒子之间的关联性，即粒子i和粒子j在时间t内是否一起移动</p></li></ol><ul><li>峰值高度表示特定距离和时间间隔下原子对出现的概率。</li><li>峰值宽度表示原子运动持续的时间范围。</li><li>峰值位置随时间间隔的变化揭示了原子扩散的速度。</li><li>峰值位置随距离的变化揭示了原子间相互作用的距离范围。</li><li>峰值形状的变化则揭示了原子运动的复杂性。</li></ul><blockquote><p>t&#x3D;0时，G(r,t)的理解变成在t0时刻，ti周围距离多远的地方出现新的离子，随着r的坐标向右，逐渐增加，得到离子的&#x3D;&#x3D;平均&#x3D;&#x3D;第一、第二配位距离。注意是平均，因为是对i和j分别求和后取了平均</p><p>t&#x3D;a时，G(r,t)的理解变成，ti运动了a时刻后，ti周围距离多远的地方出现了原来位置的离子</p></blockquote><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240425163244019.png" alt="image-20240425163244019"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240425163306389.png" alt="image-20240425163306389"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240425164138034.png" alt="image-20240425164138034"></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>多面体指数计算</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%A4%9A%E9%9D%A2%E4%BD%93%E6%8C%87%E6%95%B0%E8%AE%A1%E7%AE%97/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%A4%9A%E9%9D%A2%E4%BD%93%E6%8C%87%E6%95%B0%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="voronoi-多面体指数的计算"><a href="#voronoi-多面体指数的计算" class="headerlink" title="voronoi 多面体指数的计算"></a>voronoi 多面体指数的计算</h1><p><a href="https://mp.weixin.qq.com/s/D_eXDAn9n96YKfS65tpMzQ">Voronoi多面体指数计算方法 (qq.com)</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240314094400554.png" alt="image-20240314094400554"></p><p><img src="/.././../%E5%9B%BE%E7%89%87/image-20240314094425659.png" alt="image-20240314094425659"></p><h1 id="多面体指数应用程序与方法合集"><a href="#多面体指数应用程序与方法合集" class="headerlink" title="多面体指数应用程序与方法合集"></a>多面体指数应用程序与方法合集</h1><p><a href="https://mp.weixin.qq.com/s/9o_y5mtT3c2dnYypnBGO-g">【程序分享】（VoroTop 程序 + Vorotis 程序 + ParVoro++ 程序 ）结合 OVITO 程序 (qq.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>升温过程辨析</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/vasp%E6%A8%A1%E6%8B%9F/%E5%8D%87%E6%B8%A9%E8%BF%87%E7%A8%8B%E8%BE%A8%E6%9E%90/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/vasp%E6%A8%A1%E6%8B%9F/%E5%8D%87%E6%B8%A9%E8%BF%87%E7%A8%8B%E8%BE%A8%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="分子动力学升温过程辨析"><a href="#分子动力学升温过程辨析" class="headerlink" title="分子动力学升温过程辨析"></a>分子动力学升温过程辨析</h1><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165038015.png" alt="image-20240127165038015"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165051372.png" alt="image-20240127165051372"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165059546.png" alt="image-20240127165059546"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165105391.png" alt="image-20240127165105391"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165115754.png" alt="image-20240127165115754"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165132106.png" alt="image-20240127165132106"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165143270.png" alt="image-20240127165143270"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165154808.png" alt="image-20240127165154808"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240127165204600.png" alt="image-20240127165204600"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><ul><li><p>直接设置非0 K的温度进行弛豫会导致初始阶段能量波动极大</p></li><li><p>直接设置0 K的温度进行弛豫温度会在波动中上升，但是升温速度很慢，在固定步数内未必能到达设定温度</p></li><li><p>直接设置非0 K然后scaled方法升温之后再弛豫就不会出现比较大的温度波动了</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> vasp模拟 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>径向分布函数-rdf</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%BE%84%E5%90%91%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E5%BE%84%E5%90%91%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="6-计算RDF-径向分布函数"><a href="#6-计算RDF-径向分布函数" class="headerlink" title="6. 计算RDF(径向分布函数)"></a>6. 计算RDF(径向分布函数)</h1><h2 id="1-理论知识"><a href="#1-理论知识" class="headerlink" title="1. 理论知识"></a>1. 理论知识</h2><h3 id="1-https-bohrium-dp-tech-notebooks-7293"><a href="#1-https-bohrium-dp-tech-notebooks-7293" class="headerlink" title="1.https://bohrium.dp.tech/notebooks/7293"></a>1.<a href="https://bohrium.dp.tech/notebooks/7293">https://bohrium.dp.tech/notebooks/7293</a></h3><h3 id="2-知乎-径向分布函数Radial-distribution-function-知乎-zhihu-com"><a href="#2-知乎-径向分布函数Radial-distribution-function-知乎-zhihu-com" class="headerlink" title="2.知乎  径向分布函数Radial distribution function - 知乎 (zhihu.com)"></a>2.知乎  <a href="https://zhuanlan.zhihu.com/p/442204534">径向分布函数Radial distribution function - 知乎 (zhihu.com)</a></h3><p><a href="https://chem.libretexts.org/Bookshelves/Biological_Chemistry/Concepts_in_Biophysical_Chemistry_(Tokmakoff)/01%3A_Water_and_Aqueous_Solutions/01%3A_Fluids/1.02%3A_Radial_Distribution_Function">1.2: Radial Distribution Function - Chemistry LibreTexts</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107205348032.png" alt="image-20231107205348032"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107205439726.png" alt="image-20231107205439726"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107205457004.png" alt="image-20231107205457004"></p><p>这里的平均粒子数密度既包括了时间平均，也包括了对不同位置处的平均</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107205939640.png" alt="image-20231107205939640"></p><h3 id="3-课本复杂版本-J-M-HAILE-molecular-dynamics-simulation-page-260"><a href="#3-课本复杂版本-J-M-HAILE-molecular-dynamics-simulation-page-260" class="headerlink" title="3. 课本复杂版本 J.M.HAILE molecular dynamics simulation  &#x3D;&#x3D;page 260&#x3D;&#x3D;"></a>3. 课本复杂版本 <code>J.M.HAILE molecular dynamics simulation</code>  &#x3D;&#x3D;page 260&#x3D;&#x3D;</h3><p><code>g(r)</code>正比于发现原子对为<code>r</code>的两个原子的概率</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107202224104.png" alt="image-20231107202224104"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20231107211953263.png" alt="image-20231107211953263"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107212450896.png" alt="image-20231107212450896"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107213032590.png" alt="image-20231107213032590"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107213154082.png" alt="image-20231107213154082"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107213209341.png" alt="image-20231107213209341"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107213302922.png" alt="image-20231107213302922"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107213513915.png" alt="image-20231107213513915"></p><h2 id="1-OVITO"><a href="#1-OVITO" class="headerlink" title="1. OVITO"></a>1. OVITO</h2><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231019163158996.png" alt="image-20231019163158996"></p><h2 id="2-脚本"><a href="#2-脚本" class="headerlink" title="2. 脚本"></a>2. 脚本</h2><h3 id="1-fortran"><a href="#1-fortran" class="headerlink" title="1. fortran"></a>1. fortran</h3><pre><code class="fortran">!November 10, 2015  by Peihao Huang --&lt;&lt;Computer simulation of liquids&gt;&gt; page 183program mainimplicit noneinteger                  ::k,i,j,Natoms,step,Nstep,n,n1,n2,BIN,MAXBIN,reject,Nrejectreal(kind=8)             ::factor,a(3,3),r1,r2,r3,Rx,Ry,Rz,Rsq,R,DELR,RMAX,CONST,RHO,RLOWER,RUPPER,NIDEAL,RMIDDLE,Volume,Total,Coor,Rminreal(kind=8),allocatable ::x(:),y(:),z(:),GR(:)integer,allocatable      ::HIST(:)real,parameter           ::PI=3.14159265!These parameters should be input by handDELR=0.1       !间距？不用改RMAX=5.9       !最小晶格常数的一半Nreject=6000  !去掉的步数Nstep=10477    !剩下的步数!InitializeMAXBIN=INT(ANINT(RMAX/DELR))allocate(HIST(MAXBIN))allocate(GR(MAXBIN))do k=1,MAXBIN  HIST(k)=0end do!Read the structural informationopen(unit=10,file=&#39;XDATCAR_300GPa_2300K&#39;)read(10,*)read(10,*)factorread(10,*)a(1,1),a(1,2),a(1,3)read(10,*)a(2,1),a(2,2),a(2,3)read(10,*)a(3,1),a(3,2),a(3,3)do i=1,3  do j=1,3    a(i,j)=a(i,j)*factor  end doend doread(10,*)read(10,*)Natomsallocate(x(Natoms))allocate(y(Natoms))allocate(z(Natoms))!Calculate the average density of the systemVolume=a(1,2)*a(2,3)*a(3,1)+a(1,3)*a(2,1)*a(3,2)+a(1,1)*a(2,2)*a(3,3)-a(1,3)*a(2,2)*a(3,1)-a(1,1)*a(2,3)*a(3,2)-a(1,2)*a(2,1)*a(3,3)RHO=REAL(Natoms)/Volumewrite(*,*)&quot;The total Volume is &quot;,Volume!Reject some steps before equilibriumdo reject=1,Nreject  read(10,*)  do n=1,Natoms    read(10,*)  end doend do!Read the equilibrium stepsdo step=1,Nstep  read(10,*)  do n=1,Natoms    read(10,*)x(n),y(n),z(n)  end do  do n1=1,Natoms-1    do n2=n1+1,Natoms      !Calculate minimum image distances      r1=x(n2)-x(n1)      r1=r1-ANINT(r1)      r2=y(n2)-y(n1)      r2=r2-ANINT(r2)      r3=z(n2)-z(n1)      r3=r3-ANINT(r3)      !Fractional to cartesian      Rx=r1*a(1,1)+r2*a(2,1)+r3*a(3,1)      Ry=r1*a(1,2)+r2*a(2,2)+r3*a(3,2)      Rz=r1*a(1,3)+r2*a(2,3)+r3*a(3,3)      Rsq=Rx**2+Ry**2+Rz**2      R=SQRT(Rsq)      !Sort the distances between the N atoms into histogram      BIN=INT(R/DELR)+1      if(BIN&lt;=MAXBIN) then        HIST(BIN)=HIST(BIN)+2      end if    end do  end doend do!NormalizeCONST=4.0*PI*RHO/3do BIN=1,MAXBIN  RLOWER=REAL(BIN-1)*DELR  RUPPER=RLOWER+DELR  NIDEAL=CONST*(RUPPER**3-RLOWER**3)  GR(BIN)=REAL(HIST(BIN))/REAL(Nstep)/REAL(Natoms)/NIDEALend doclose(10)!Writeopen(unit=20,file=&#39;rdf.dat&#39;)do BIN=1,MAXBIN  RMIDDLE=REAL(BIN-1)*DELR+DELR/2  write(20,*)RMIDDLE,GR(BIN)end doclose(20)!Check (RMAX should be set to sqrt(3)/2*L for cubic box)Total=0do BIN=1,MAXBIN  RLOWER=REAL(BIN-1)*DELR  RUPPER=RLOWER+DELR  NIDEAL=CONST*(RUPPER**3-RLOWER**3)  Total=Total+GR(BIN)*NIDEAL!  Total=Total+RHO*4*PI*(DELR*BIN)**2*GR(BIN)*DELR #this one is less accurateend dowrite(*,*)&quot;The total number of atoms is &quot;,Total!Calculate coordination number (method1: input by hand)Coor=0do BIN=1,44  RLOWER=REAL(BIN-1)*DELR  RUPPER=RLOWER+DELR  NIDEAL=CONST*(RUPPER**3-RLOWER**3)  Coor=Coor+GR(BIN)*NIDEAL  Rmin=REAL(BIN-1)*DELR+DELR/2end dowrite(*,*)&quot;The coordination number is &quot;,Coor,&quot;,and rmin is &quot;,Rmin!(method 2)Coor=0do BIN=1,MAXBIN  RLOWER=REAL(BIN-1)*DELR  RUPPER=RLOWER+DELR  NIDEAL=CONST*(RUPPER**3-RLOWER**3)  Coor=Coor+GR(BIN)*NIDEAL  Rmin=REAL(BIN-1)*DELR+DELR/2  if((BIN&gt;1).and.(BIN&lt;MAXBIN).and.(GR(BIN)&lt;GR(BIN-1)).and.(GR(BIN)&lt;GR(BIN+1))) then    write(*,*)&quot;The coordination number is &quot;,Coor,&quot;,and rmin is &quot;,Rmin    exit  end ifend dodeallocate(x)deallocate(y)deallocate(z)deallocate(HIST)deallocate(GR)end program main</code></pre><h3 id="2-python-ovito"><a href="#2-python-ovito" class="headerlink" title="2. python (ovito )"></a>2. python (ovito )</h3><p>conda下载ovito用官方的软件源（官方网址中有）不用conda-forge (官方python有付费版功能，conda源版没有)</p><pre><code class="python">##write by lijiaxiang# example script for calculating and plotting RDFs and partial RDFs# CAN NOT BE USED DIRECTLY!#       modify and run this script.#       add plt.savefig(&#39;fig&#39;) if you want to save the RDF figures.# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #from ovito.io import import_file, export_filefrom ovito.modifiers import CoordinationAnalysisModifier, TimeAveragingModifierfrom matplotlib import pyplot as pltimport numpy as npimport osdef get_data(strj_path: str, partial=False):    pipeline = import_file(strj_path)    modifier = CoordinationAnalysisModifier(cutoff=6, number_of_bins=200, partial=partial)    pipeline.modifiers.append(modifier)    pipeline.modifiers.append(TimeAveragingModifier(operate_on=&#39;table:coordination-rdf&#39;))    export_file(pipeline, &quot;rdf.txt&quot;, &quot;txt/table&quot;, key=&quot;coordination-rdf[average]&quot;)    with open(&#39;./rdf.txt&#39;, &#39;r&#39;) as f:        lines = f.readlines()        title = lines[1]        lines = lines[2:]    lines = [i.split() for i in lines]    datas = np.array(lines)    datas = datas.astype(float)    labels = title.split(&#39;&quot;&#39;)[-1].split()    os.remove(&#39;./rdf.txt&#39;)    # sort    labels = [&quot;-&quot;.join(sorted(i.split(&#39;-&#39;))) for i in labels]    sorts = sorted(enumerate(labels), key=lambda x: x[1])    labels = [item[1] for item in sorts]    sorted_indices = [item[0] for item in sorts]    datas = datas[:, [0] + [i + 1 for i in sorted_indices]]    return datas, labelsdef is_in(nplot: list, label: str):    for i in nplot:        if i in label:            return True    return Falseif __name__ == &#39;__main__&#39;:    cm = plt.colormaps[&#39;Paired&#39;]    # get rdf    datas_vasp, labels_vasp = get_data(&#39;/Users/spook/Desktop/h2o/XDATCAR&#39;)    datas_ml, labels_ml = get_data(&#39;/Users/spook/Desktop/h2o/A.lammpstrj661&#39;)    # plot rdf -------------------------------------------------------------------    fig = plt.figure(figsize=(4, 3), dpi=200)    ax = fig.add_subplot()    ax.plot(datas_vasp[:, 0], datas_vasp[:, 1], label=&quot;DFT&quot;)    ax.plot(datas_ml[:, 0], datas_ml[:, 1], linestyle=&quot;--&quot;, c=&#39;r&#39;, label=&quot;ACNN&quot;)    ax.set_xlabel(&#39;r&#39;)    ax.set_ylabel(&#39;g(r)&#39;)    ax.set_title(&#39;RDF&#39;)    y_lim = ax.get_ylim()    ax.set_ylim(y_lim[0], 10)    ax.legend()    # rdf plot end  --------------------------------------------------------------    #    #    #    &quot;&quot;&quot;    1. get partial rdf    2. plot partial rdf.    The `include (list)`  denote the elements or bonds to be plot.                             eg: [&quot;H&quot;] plot all bonds contain &quot;H&quot; atoms.                                [&quot;H-O&quot;] plot &quot;H-O&quot; rdf only.                                [&quot;Ti&quot;, &quot;H-O&quot;] plot &quot;Ti&quot; rdf adding &quot;H-O&quot;    &quot;&quot;&quot;    # get partial rdf    datas_vasp, labels_vasp = get_data(&#39;/Users/spook/Desktop/h2o/XDATCAR&#39;, partial=True)    datas_ml, labels_ml = get_data(&#39;/Users/spook/Desktop/h2o/A.lammpstrj661&#39;, partial=True)    # plot partial rdf -----------------------------------------------------------    include = [&#39;Ti&#39;]    include = [&quot;-&quot;.join(sorted(i.split(&#39;-&#39;))) for i in include]    fig = plt.figure(figsize=(6, 4), dpi=200)    ax = fig.add_subplot()    for i in range(len(labels_vasp)):        if is_in(include, labels_vasp[i]):            ax.plot(datas_vasp[:, 0], datas_vasp[:, 1 + i], c=cm.colors[i], label=&quot;DFT &quot; + labels_vasp[i], linewidth=1)    for i in range(len(labels_ml)):        if is_in(include, labels_ml[i]):            ax.plot(datas_ml[:, 0], datas_ml[:, 1 + i], c=cm.colors[i], label=&quot;ACNN &quot; + labels_ml[i], linestyle=&quot;--&quot;,                    linewidth=2)    ax.set_xlabel(&#39;r&#39;)    ax.set_ylabel(&#39;g(r)&#39;)    ax.set_title(&#39;RDF  &#39; + &quot; &quot;.join(include))    ax.legend(ncol=2, prop=&#123;&#39;size&#39;: 8&#125;)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>概率密度图</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6%E5%9B%BE/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="5-画出概率密度图"><a href="#5-画出概率密度图" class="headerlink" title="5. 画出概率密度图"></a>5. 画出概率密度图</h1><pre><code class="python">from pymatgen_diffusion.aimd.pathway import ProbabilityDensityAnalysisfrom pymatgen.core.trajectory import Trajectoryfrom pymatgen.io.vasp.outputs import Xdatcarfrom pymatgen.analysis.diffusion_analyzer import DiffusionAnalyzertraj=Trajectory.from_file(&#39;XDATCAR&#39;)diff=DiffusionAnalyzer.from_structures(traj,&#39;Li&#39;,900,2,1)pdb=ProbabilityDensityAnalysis.from_diffusion_analyzer(diff,interval=0.5,species=(&#39;Li&#39;))pdb.to_chgcar(&#39;CHGCAR.vasp&#39;)</code></pre><h1 id="3-lammps分子动力学使用"><a href="#3-lammps分子动力学使用" class="headerlink" title="3. lammps分子动力学使用"></a>3. lammps分子动力学使用</h1><h2 id="1-lammps使用详解"><a href="#1-lammps使用详解" class="headerlink" title="1.lammps使用详解"></a>1.lammps使用详解</h2><blockquote><p>lammps读取设置的方式与vasp不同，vasp是计算之前全部读取，而lammps是逐行读取，在读取每一行后都会进行相应的操作，输入文件读取完毕，lammps结束</p></blockquote><h3 id="1-in-lmp"><a href="#1-in-lmp" class="headerlink" title="1. in.lmp"></a>1. in.lmp</h3><ul><li><p>运行lammps使用  -in -in.file</p></li><li><p>lammps的命令行区分大小写</p></li><li><p>#号不要乱用</p></li></ul><p>命令分类</p><blockquote><p>建模   </p><p>相互作用  </p><p>fix加模拟条件   </p><p>计算的命令 (处理数据)</p><p>控制输出的命令 （热力学 、坐标、速度）</p></blockquote><blockquote><p>初始化、</p><p>系统定义、</p><p>模拟设置、</p><p>运行与输出</p></blockquote><h3 id="2-初始化命令"><a href="#2-初始化命令" class="headerlink" title="2.初始化命令"></a>2.初始化命令</h3><h4 id="1-newton"><a href="#1-newton" class="headerlink" title="1.newton"></a>1.newton</h4><p>控制通信</p><p>在read_data 或者create_box后，不能修改 ，默认为on</p><h4 id="2-package"><a href="#2-package" class="headerlink" title="2.package"></a>2.package</h4><p>对不同的机器进行加速？ 需要设置在顶部</p><h4 id="3-processors"><a href="#3-processors" class="headerlink" title="3. processors"></a>3. processors</h4><p>多进程的命令</p><h4 id="4-suffix"><a href="#4-suffix" class="headerlink" title="4. suffix"></a>4. suffix</h4><h4 id="5-units-重要"><a href="#5-units-重要" class="headerlink" title="5. units(重要)"></a>5. units(重要)</h4><p>指定文件中的单位 </p><p>metal符合常规的理解</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20230721165151960.png" alt="image-20230721165151960"></p><p>设置为metal时，默认的时间步长为1fs  </p><p>需要在设置模拟的模型之前设置 默认为lj 。&#x3D;&#x3D;需要修改为metal&#x3D;&#x3D;</p><h3 id="3-构建模型的命令"><a href="#3-构建模型的命令" class="headerlink" title="3.构建模型的命令"></a>3.构建模型的命令</h3><h4 id="1-boundary（重要）"><a href="#1-boundary（重要）" class="headerlink" title="1. boundary（重要）"></a>1. boundary（重要）</h4><blockquote><p>boundary x y z</p></blockquote><p>设置在不同方向上的边界条件  </p><p>p是周期性边界条件 可以设置为两个字母，分别对上下两个表面设置。设置p只能为一个字母。</p><ul><li>算成核时可以不带周期性边界条件</li></ul><p>默认为p p p</p><h4 id="2-change-box"><a href="#2-change-box" class="headerlink" title="2. change_box"></a>2. change_box</h4><p>修改盒子</p><h4 id="3-dimension"><a href="#3-dimension" class="headerlink" title="3. dimension"></a>3. dimension</h4><p>设置模拟的维度</p><h4 id="4-create-box"><a href="#4-create-box" class="headerlink" title="4. create_box"></a>4. create_box</h4><p>创建盒子</p><h4 id="5-lattice"><a href="#5-lattice" class="headerlink" title="5. lattice"></a>5. lattice</h4><h4 id="6-atom-style（重要）"><a href="#6-atom-style（重要）" class="headerlink" title="6. atom_style（重要）"></a>6. atom_style（重要）</h4><h3 id="4-输出热力学信息的命令"><a href="#4-输出热力学信息的命令" class="headerlink" title="4.输出热力学信息的命令"></a>4.输出热力学信息的命令</h3><p>thermo      1  #每一步输出一次</p><p>thermo_style   custom step time temp pe lx ly lz  #custom是自定义的意思</p><h3 id="5-模拟的设置"><a href="#5-模拟的设置" class="headerlink" title="5.模拟的设置"></a>5.模拟的设置</h3><p>velocity     all  create  600 87232</p><p>dump      1(第几个命令) all custom 100 A.lammpstrj id type xu yu zu fx fy fz</p><p>输出每一步的情况</p><p> fix          1   all nvt temp 600 600 100*dt</p><p>run          10000</p><p><a href="https://docs.lammps.org/dump.html">dump command — LAMMPS documentation</a></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231125162429505.png" alt="image-20231125162429505"></p><p>用一个正交的格子把三斜格子包围起来，</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/0870f414f31f528da4ab64315010825.png" alt="0870f414f31f528da4ab64315010825"></p><p>前两列是正交格子的边界，第三列应该是投影值</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/a67102ceb8e3dee5e1fa995e14cde3a.jpg" alt="a67102ceb8e3dee5e1fa995e14cde3a"></p><h3 id="6-temp-控温器频率的设置"><a href="#6-temp-控温器频率的设置" class="headerlink" title="6.$(temp)控温器频率的设置"></a>6.$(temp)控温器频率的设置</h3><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095627682.png" alt="image-20240518095627682"></p><p>既不能太大（会导致升温出问题）也不能太小（控制太严格，没法跑）</p><p>对于大胞应该减小频率的值</p><p>路径&#x2F;public&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;5_bigmodel_md&#x2F;test&#x2F;tdamp</p><p>111胞</p><p>0.001</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095021575.png" alt="image-20240518095021575"></p><p>0.01</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095036784.png" alt="image-20240518095036784"></p><p>0.1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095049830.png" alt="image-20240518095049830"></p><p>1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095059449.png" alt="image-20240518095059449"></p><p>10</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095111902.png" alt="image-20240518095111902"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095121218.png" alt="image-20240518095121218"></p><p>1000</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518095132036.png" alt="image-20240518095132036"></p><p>333胞</p><p>0.001 </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092249192.png" alt="image-20240518092249192"></p><p>0.01</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092302969.png" alt="image-20240518092302969"></p><p>0.1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092315834.png" alt="image-20240518092315834"></p><p>1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092328843.png" alt="image-20240518092328843"></p><p>10</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092340008.png" alt="image-20240518092340008"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092425126.png" alt="image-20240518092425126"></p><p>1000</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092437206.png" alt="image-20240518092437206"></p><p>666胞</p><p>0.001</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092537274.png" alt="image-20240518092537274"></p><p>0.01</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092549991.png" alt="image-20240518092549991"></p><p>0.1 </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092602604.png" alt="image-20240518092602604"></p><p>1</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092624982.png" alt="image-20240518092624982"></p><p>10</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092642026.png" alt="image-20240518092642026"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092701605.png" alt="image-20240518092701605"></p><p>1000</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240518092716921.png" alt="image-20240518092716921"></p><p>路径 &#x2F;home&#x2F;jildxwlxyljlstdui&#x2F;cccs-share02&#x2F;lijx&#x2F;liz&#x2F;2-Na-X-Si-O&#x2F;2_NaXSiO_big_model&#x2F;3_md_for_single_element&#x2F;13_Sm&#x2F;1000_444</p><p>0.5</p><p>10</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240311171144437.png" alt="image-20240311171144437"></p><p>50</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240311171217694.png" alt="image-20240311171217694"></p><p>100</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240311171243284.png" alt="image-20240311171243284"></p><p>1000</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20240311171312642.png" alt="image-20240311171312642"></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>msd收敛性分析</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/msd%E6%94%B6%E6%95%9B%E6%80%A7%E5%88%86%E6%9E%90/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/msd%E6%94%B6%E6%95%9B%E6%80%A7%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-MSD收敛性辨析"><a href="#1-MSD收敛性辨析" class="headerlink" title="1. MSD收敛性辨析"></a>1. MSD收敛性辨析</h1><p>&#x3D;&#x3D;本质上MSD是统计离子的跳跃事件，单位时间或单位空间内的跳跃事件为常数时，才能得到比较线性的MSD曲线，同时得到收敛的结果&#x3D;&#x3D;</p><p>&#x3D;&#x3D;换言之，只要是线性的结果，就说明是收敛的，因为只有在单位时间内的跳跃数相等时，线才能是线性的，这个时候就满足了收敛的判断&#x3D;&#x3D;</p><p>&#x3D;&#x3D;尺寸效应有所不同的是，在每个尺寸下，得到的数据都是线性的，也就是在每个尺寸都收敛，说明随着尺寸增加，得到的单位时间单位尺寸内的跳跃数量是整体减小的。这就是尺寸效应的影响&#x3D;&#x3D;</p><p>只有当单帧对比的MSD是线性的时候，才能说明可能收敛了，多起源的图像线性了不能证明真的线性</p><p>以后在计算之前需要先检验收敛性</p><p>&#x3D;&#x3D;线性未必收敛&#x3D;&#x3D;</p><p>单起源的收敛才是收敛，多起源的收敛是不得已的近似  错误的，多起源更容易判断收敛</p><p>&#x3D;&#x3D;以后的计算需要用多起源和单起源分别判断收敛性，最好是跑一个足够长的单起源，验证多起源可以更快的判断出收敛后的数值&#x3D;&#x3D;</p><p>用log来判断 两个log值之间相差不超过0.001或0.005</p><h2 id="1-同一段111单胞轨迹不同时间长度的MSD收敛性"><a href="#1-同一段111单胞轨迹不同时间长度的MSD收敛性" class="headerlink" title="1.同一段111单胞轨迹不同时间长度的MSD收敛性"></a>1.同一段111单胞轨迹不同时间长度的MSD收敛性</h2><h3 id="1-不同取点比例下的收敛性"><a href="#1-不同取点比例下的收敛性" class="headerlink" title="1. 不同取点比例下的收敛性"></a>1. 不同取点比例下的收敛性</h3><p>&#x2F;work&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;1-system-MD&#x2F;1-Na5YSi4O12&#x2F;6-machine-learning&#x2F;4-ceshi&#x2F;1-111&#x2F;xda-2</p><p>10 ps  </p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140251588.png" alt="image-20231026140251588"></p><p>20ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140300673.png" alt="image-20231026140300673"></p><p>30ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140311587.png" alt="image-20231026140311587"></p><p>40ps</p><p><img src="/./../%E5%9B%BE%E7%89%87/image-20231026140320770.png" alt="image-20231026140320770"></p><p>50ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140329665.png" alt="image-20231026140329665"></p><p>60ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140339109.png" alt="image-20231026140339109"></p><p>70ps</p><p><img src="/./../%E5%9B%BE%E7%89%87/image-20231026140347730.png" alt="image-20231026140347730"></p><p>80ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140358706.png" alt="image-20231026140358706"></p><p>90ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140406491.png" alt="image-20231026140406491"></p><p>100ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140418114.png" alt="image-20231026140418114"></p><p>200ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140428646.png" alt="image-20231026140428646"></p><p>300ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140438309.png" alt="image-20231026140438309"></p><p>400ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140446824.png" alt="image-20231026140446824"></p><p>500ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140457075.png" alt="image-20231026140457075"></p><p>600ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140506611.png" alt="image-20231026140506611"></p><p>700ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140514670.png" alt="image-20231026140514670"></p><p>800ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140522783.png" alt="image-20231026140522783"></p><p>900ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140547280.png" alt="image-20231026140547280"></p><p>1000 ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026091724170.png" alt="image-20231026091724170"></p><p>2000ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026091747914.png" alt="image-20231026091747914"></p><p>3000ps</p><p><img src="/./../%E5%9B%BE%E7%89%87/image-20231026091807338.png" alt="image-20231026091807338"></p><p>4000ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026091831114.png" alt="image-20231026091831114"></p><p>5000ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026091856011.png" alt="image-20231026091856011"></p><p>6000ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231026140912562.png" alt="image-20231026140912562"></p><p>7000ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231031161837793.png" alt="image-20231031161837793"></p><p>7900ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231031161850239.png" alt="image-20231031161850239"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102103530571.png" alt="image-20231102103530571"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102103544137.png" alt="image-20231102103544137"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102103904793.png" alt="image-20231102103904793"></p><p>横轴ps ，纵轴 百分比 值</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105135177.png" alt="image-20231102105135177"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105203532.png" alt="image-20231102105203532"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105236078.png" alt="image-20231102105236078"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105306567.png" alt="image-20231102105306567"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105333715.png" alt="image-20231102105333715"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105359078.png" alt="image-20231102105359078"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102105419768.png" alt="image-20231102105419768"></p><h3 id="2-同一时间段内的收敛性-（注意纵坐标的值）"><a href="#2-同一时间段内的收敛性-（注意纵坐标的值）" class="headerlink" title="2. 同一时间段内的收敛性 （注意纵坐标的值）"></a>2. 同一时间段内的收敛性 （注意纵坐标的值）</h3><p>横坐标 百分比 纵坐标是名称：代表时长</p><h2 id="2-333的轨迹收敛性"><a href="#2-333的轨迹收敛性" class="headerlink" title="2. 333的轨迹收敛性"></a>2. 333的轨迹收敛性</h2><p>时间：*0.01 ps</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102091954729.png" alt="image-20231102091954729"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092005094.png" alt="image-20231102092005094"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092016407.png" alt="image-20231102092016407"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092028981.png" alt="image-20231102092028981"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092041349.png" alt="image-20231102092041349"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092053830.png" alt="image-20231102092053830"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092105400.png" alt="image-20231102092105400"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092122039.png" alt="image-20231102092122039"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092132341.png" alt="image-20231102092132341"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102092141334.png" alt="image-20231102092141334"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102093704580.png" alt="image-20231102093704580"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102093745259.png" alt="image-20231102093745259"></p><h2 id="3-555的收敛性"><a href="#3-555的收敛性" class="headerlink" title="3.   555的收敛性"></a>3.   555的收敛性</h2><p>&#x3D;&#x3D;在计算扩散系数的过程中，随着尺度的增加，包括的不运动的钠离子数量也在增加，导致最后的计算结果不同尺寸不同  ——-这一结论是错误的，因为都除以了原子数，所以应该是相等的&#x3D;&#x3D;</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085847605.png" alt="image-20231102085847605"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085905796.png" alt="image-20231102085905796"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085918758.png" alt="image-20231102085918758"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085935524.png" alt="image-20231102085935524"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085947636.png" alt="image-20231102085947636"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102085959636.png" alt="image-20231102085959636"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102090009671.png" alt="image-20231102090009671"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102090019123.png" alt="image-20231102090019123"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102090030242.png" alt="image-20231102090030242"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102090042517.png" alt="image-20231102090042517"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102090946777.png" alt="image-20231102090946777"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102094034731.png" alt="image-20231102094034731"></p><p>555 log(D)  </p><p>多起源</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102111055601.png" alt="image-20231102111055601"></p><p>单起源</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102134914820.png" alt="image-20231102134914820"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102134831540.png" alt="image-20231102134831540"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102134841751.png" alt="image-20231102134841751"></p><p>111 log(D)</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102111117149.png" alt="image-20231102111117149"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102111222421.png" alt="image-20231102111222421"></p><p>555 700ps的百分之一到百分之100</p><p>&#x3D;&#x3D;还需要更长的计算</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102153841378.png" alt="image-20231102153841378"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102153854215.png" alt="image-20231102153854215"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102154002907.png" alt="image-20231102154002907"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102154057839.png" alt="image-20231102154057839"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102154110596.png" alt="image-20231102154110596"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231102154123021.png" alt="image-20231102154123021"></p><h2 id="4-一段101010的轨迹的log"><a href="#4-一段101010的轨迹的log" class="headerlink" title="4.一段101010的轨迹的log"></a>4.一段101010的轨迹的log</h2><p>华为 &#x2F;home&#x2F;jildxwlxyljlstdui&#x2F;cccs-share02&#x2F;lijx&#x2F;work-lijx&#x2F;nlso&#x2F;101010</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107093828712.png" alt="image-20231107093828712"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107093840976.png" alt="image-20231107093840976"></p><p>222</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107101322864.png" alt="image-20231107101322864"></p><p>444</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107101358450.png" alt="image-20231107101358450"></p><p>666</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107101435692.png" alt="image-20231107101435692"></p><p>101010</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231107101515605.png" alt="image-20231107101515605"></p><p>不同的模型会跑出不同的结果</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231115201117375.png" alt="image-20231115201117375"></p><h1 id="2-各种msd图形鉴赏"><a href="#2-各种msd图形鉴赏" class="headerlink" title="2. 各种msd图形鉴赏"></a>2. 各种msd图形鉴赏</h1><p>统计的必要性</p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231019211921034.png" alt="image-20231019211921034"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231019205733452.png" alt="image-20231019205733452"></p><p><img src="/./../../../%E5%9B%BE%E7%89%87/image-20231019212257570.png" alt="image-20231019212257570"></p>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
          <category> msd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> msd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp格式计算msd</title>
      <link href="/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/vasp%E6%A0%BC%E5%BC%8F%E8%AE%A1%E7%AE%97msd/"/>
      <url>/2024/05/25/3-%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6/%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/vasp%E6%A0%BC%E5%BC%8F%E8%AE%A1%E7%AE%97msd/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="1-MSD-包括所有起源和一半一半和单个起源"><a href="#1-MSD-包括所有起源和一半一半和单个起源" class="headerlink" title="1. MSD 包括所有起源和一半一半和单个起源"></a>1. MSD 包括所有起源和一半一半和单个起源</h1><p>&#x3D;&#x3D;去质心漂移对氢原子扩散重要&#x3D;&#x3D;</p><p>重要的是TMSD，不管统计多少，TMSD总体是不变的，但是MSD需要除以一个数字，就是离子数目，来作为每个离子平均的TMSD，这时候，在系数项乘数时，需要乘前面的离子数目。所以叫做均方根位移，这里的均是对有效的假定的离子数目做平均</p><p><img src="/./../%E5%9B%BE%E7%89%87/image-20231019195430974.png"></p><pre><code class="fortran">!November 12,2015, by Peihao Huang --&lt;&lt;Molecular dynamics simulation_elementary methods&gt;&gt;-Wileyprogram mainimplicit noneinteger::i,j,Natoms,step,atom,Origin,n,Totalstep,Nkindsofatom,Nstep,Nreject,nna  !整型real(kind=8)::factor,a(3,3),t,timestep,DeltaX,DeltaY,DeltaZ,DeltaRx,DeltaRy,DeltaRz,DeltaR,Xcenter0real(kind=8)   ::Ycenter0,Zcenter0,mh,mo,m3,m4,msum,dif,logdif,sigma!实型real(kind=8),allocatable ::X(:,:),Y(:,:),Z(:,:),MSD(:),x0(:),y0(:),z0(:),Xcenter(:),Ycenter(:),Zcenter(:)!实型双精度可分配数组integer,allocatable ::natom(:)character(len=6),allocatable ::temp(:)!长度为6的字符串数组character(len=10) ::temp1mo=39.10mh=88.91m3=28.09m4=16.00msum=30*mo+6*mh+24*m3+72*m4!These parameters should be input by hand Totalstep=180000Nstep=170000Nreject=10000timestep=0.002Nkindsofatom=4allocate(natom(Nkindsofatom),temp(Nkindsofatom))!natom为四维整型数组，temp为四维字符型数组!Read the original structure,only the fractional coordination is needed for the box is fixedopen(unit=30,file=&#39;POSCAR&#39;)read(30,*)read(30,*)read(30,*)read(30,*)read(30,*) ! for earlier versions of VASP, you should delete on line of thisread(30,*)read(30,*) natom!将原子个数存在七维实型数组里Natoms=0do i=1,Nkindsofatom  Natoms=Natoms+natom(i)  write(*,*)natom(i)end do!计算总的原子个数write(*,*)Natomsallocate(x0(Natoms),y0(Natoms),z0(Natoms))!分配一个natoms维的数组!read(30,*)read(30,*)do atom=1,Natoms  read(30,*)x0(atom),y0(atom),z0(atom)end doclose(30)!将所有的初始坐标存储!Read the structural information of the trajactoryopen(unit=10,file=&#39;XDATCAR&#39;)read(10,*)temp1read(10,*)factorread(10,*)a(1,1),a(1,2),a(1,3)read(10,*)a(2,1),a(2,2),a(2,3)read(10,*)a(3,1),a(3,2),a(3,3)do i=1,3  do j=1,3    a(i,j)=a(i,j)*factor  end doend do!读入晶格常数read(10,*)tempread(10,*)allocate(X(Totalstep,Natoms),Y(Totalstep,Natoms),Z(Totalstep,Natoms))!分配二维数组do step=1,Totalstep  read(10,*)  do atom=1,Natoms    read(10,*)X(step,atom),Y(step,atom),Z(step,atom)  end doend doclose(10)!将所有原子坐标读入!Unfold the atoms in the box with PBCdo atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend dodo step=2,Totalstep  do atom=1,Natoms    if(X(step,atom)-X(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)+1.0      end do!从第二步开始计算，第二部比第一步多或少    else if(X(step,atom)-X(step-1,atom)&gt;0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)-1.0      end do    end if    if(Y(step,atom)-Y(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)+1.0      end do    else if(Y(step,atom)-Y(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)-1.0      end do    end if    if(Z(step,atom)-Z(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)+1.0      end do    else if(Z(step,atom)-Z(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)-1.0      end do    end if  end doend do!考虑周期性!在第一帧上全部加减!Remove the drift of center of massXcenter0=0Ycenter0=0Zcenter0=0do atom=1,natom(1)  Xcenter0=Xcenter0+x0(atom)*mo/msum  Ycenter0=Ycenter0+y0(atom)*mo/msum  zcenter0=Zcenter0+z0(atom)*mo/msumend do!在natom中提取第一个原子的数量，并且计算质心do atom=natom(1)+1,natom(1)+natom(2)  Xcenter0=Xcenter0+x0(atom)*mh/msum  Ycenter0=Ycenter0+y0(atom)*mh/msum  zcenter0=Zcenter0+z0(atom)*mh/msumend do!提取第二个原子质量并求质心do atom=natom(1)+natom(2)+1,natom(1)+natom(2)+natom(3)  Xcenter0=Xcenter0+x0(atom)*m3/msum  Ycenter0=Ycenter0+y0(atom)*m3/msum  zcenter0=Zcenter0+z0(atom)*m3/msumend dodo atom=natom(1)+natom(2)+natom(3)+1,natom(1)+natom(2)+natom(3)+natom(4)   Xcenter0=Xcenter0+x0(atom)*m4/msum   Ycenter0=Ycenter0+y0(atom)*m4/msum   zcenter0=Zcenter0+z0(atom)*m4/msum end do !计算质心deallocate(x0,y0,z0)allocate(Xcenter(Totalstep),Ycenter(Totalstep),Zcenter(Totalstep))open(unit=400,file=&#39;Mc-drift.dat&#39;)do step=1,Totalstep  Xcenter(step)=0  Ycenter(step)=0  Zcenter(step)=0  do atom=1,natom(1)    Xcenter(step)=Xcenter(step)+X(step,atom)*mo/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*mo/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*mo/msum  end do  do atom=natom(1)+1,natom(1)+natom(2)    Xcenter(step)=Xcenter(step)+X(step,atom)*mh/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*mh/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*mh/msum  end do  do atom=natom(1)+natom(2)+1,natom(1)+natom(2)+natom(3)    Xcenter(step)=Xcenter(step)+X(step,atom)*m3/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*m3/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*m3/msum  end do  do atom=natom(1)+natom(2)+natom(3)+1,natom(1)+natom(2)+natom(3)+natom(4)    Xcenter(step)=Xcenter(step)+X(step,atom)*m4/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*m4/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*m4/msum  end do  Xcenter(step)=Xcenter(step)-Xcenter0  Ycenter(step)=Ycenter(step)-Ycenter0  Zcenter(step)=zcenter(step)-Zcenter0  t=step*timestep  write(400,&quot;(4(F9.6(2x)))&quot;)t,Xcenter(step),Ycenter(step),Zcenter(step)  !计算质心运动  do atom=1,Natoms    X(step,atom)=X(step,atom)-Xcenter(step)    Y(step,atom)=Y(step,atom)-Ycenter(step)    Z(step,atom)=Z(step,atom)-Zcenter(step)  end do  !去除质心运动end dodeallocate(Xcenter,Ycenter,Zcenter)!Reject some steps before equilibriumdo step=1,Nstep  do atom=1,Natoms    X(step,atom)=X(step+Nreject,atom)    Y(step,atom)=Y(step+Nreject,atom)    Z(step,atom)=Z(step+Nreject,atom)  end doend do!去除部分轨迹!Multile time originsallocate(MSD(Nstep-1))open(unit=20,file=&#39;msd-zong-t.dat&#39;)do step=1,Nstep-1  MSD(step)=0.0  do Origin=1,Nstep-step    do atom=1,natom(1)      DeltaX=X(Origin+step,atom)-X(Origin,atom)      DeltaY=Y(Origin+step,atom)-Y(Origin,atom)      DeltaZ=Z(Origin+step,atom)-Z(Origin,atom)      DeltaRx=DeltaX*a(1,1)+DeltaY*a(2,1)+DeltaZ*a(3,1)      DeltaRy=DeltaX*a(1,2)+DeltaY*a(2,2)+DeltaZ*a(3,2)      DeltaRz=DeltaX*a(1,3)+DeltaY*a(2,3)+DeltaZ*a(3,3)      DeltaR=DeltaRx**2+DeltaRy**2+DeltaRz**2      MSD(step)=MSD(step)+DeltaR    end do  end do  MSD(step)=MSD(step)/REAL(natom(1))/REAL(Nstep-step)  t=step*timestep  dif=MSD(step)/(t*6)*0.0001  logdif=log10(dif)  sigma=30*1.6*1.6*dif/1.38/400/1796.86!  sigma=sigma/(10**(-9))  write(20,*)t,MSD(step)end doclose(20)!一半一半open(unit=50,file=&#39;msd-zong-2-t.dat&#39;)do step=1,Nstep/2  MSD(step)=0.0  do Origin=1,Nstep/2    do atom=1,natom(1)      DeltaX=X(Origin+step,atom)-X(Origin,atom)      DeltaY=Y(Origin+step,atom)-Y(Origin,atom)      DeltaZ=Z(Origin+step,atom)-Z(Origin,atom)      DeltaRx=DeltaX*a(1,1)+DeltaY*a(2,1)+DeltaZ*a(3,1)      DeltaRy=DeltaX*a(1,2)+DeltaY*a(2,2)+DeltaZ*a(3,2)      DeltaRz=DeltaX*a(1,3)+DeltaY*a(2,3)+DeltaZ*a(3,3)      DeltaR=DeltaRx**2+DeltaRy**2+DeltaRz**2      MSD(step)=MSD(step)+DeltaR    end do  end do  MSD(step)=MSD(step)*2/REAL(natom(1))/REAL(Nstep)  t=step*timestep  dif=MSD(step)/(t*6)*0.0001  logdif=log10(dif)  sigma=30*1.6*1.6*dif/1.38/400/1796.86!  sigma=sigma/(10**(-9))  write(50,*)t,MSD(step)end doclose(50)!只和第一帧比较open(unit=60,file=&#39;msd-zong-t.dat&#39;)do step=0,Nstep-1  MSD(step)=0.0  do atom=1,natom(1)    DeltaX=X(1+step,atom)-X(1,atom)    DeltaY=Y(1+step,atom)-Y(1,atom)    DeltaZ=Z(1+step,atom)-Z(1,atom)    DeltaRx=DeltaX*a(1,1)+DeltaY*a(2,1)+DeltaZ*a(3,1)    DeltaRy=DeltaX*a(1,2)+DeltaY*a(2,2)+DeltaZ*a(3,2)    DeltaRz=DeltaX*a(1,3)+DeltaY*a(2,3)+DeltaZ*a(3,3)    DeltaR=DeltaRx**2+DeltaRy**2+DeltaRz**2    MSD(step)=MSD(step)+DeltaR  end do  MSD(step)=MSD(step)/REAL(natom(1))  t=step*timestep  dif=MSD(step)/(t*6)*0.0001  logdif=log10(dif)  sigma=30*1.6*1.6*dif/1.38/400/1796.86!  sigma=sigma/(10**(-9))  write(60,*)t,MSD(step)end doclose(60)deallocate(MSD)deallocate(X,Y,Z)write(*,*)&quot;success!&quot;end program</code></pre><p><img src="/./../%E5%9B%BE%E7%89%87/image-20231019205733452.png" alt="image-20231019205733452"></p><p>同一段轨迹的不同算法会得出不同的结果（真实VS统计结果）</p><p>平均算法会低估前面时间的msd</p><h1 id="2-NPT的MSD计算（因为每一步的晶格常数都会变，所以不能用上面的"><a href="#2-NPT的MSD计算（因为每一步的晶格常数都会变，所以不能用上面的" class="headerlink" title="2. NPT的MSD计算（因为每一步的晶格常数都会变，所以不能用上面的"></a>2. NPT的MSD计算（因为每一步的晶格常数都会变，所以不能用上面的</h1><pre><code class="python">program mainimplicit noneinteger::i,j,Natoms,step,atom,Origin,n,Totalstep,Nkindsofatom,Nstep,Nreject,nna!整型real(kind=8)  ::factor,a(3,3),t,timestep,DeltaX,DeltaY,DeltaZ,DeltaRx,DeltaRy,DeltaRz,DeltaR,Xcenter0real(kind=8)   ::Ycenter0,Zcenter0,mh,mo,m3,m4,msum,dif,logdif,sigma!实型real(kind=8),allocatable  ::X(:,:),Y(:,:),Z(:,:),MSD(:),x0(:),y0(:),z0(:),Xcenter(:),Ycenter(:),Zcenter(:),MM(:,:)real(kind=8),allocatable  ::NN(:,:),QQ(:,:)!实型双精度可分配数组integer,allocatable ::natom(:)character(len=6),allocatable ::temp(:)!长度为6的字符串数组character(len=10) ::temp1mo=40.08mh=1.008m3=28.09m4=16.00msum=256*mo+1472*mh!These parameters should be input by hand Totalstep=451Nstep=400Nreject=0timestep=0.002Nkindsofatom=2allocate(natom(Nkindsofatom),temp(Nkindsofatom))!natom为四维整型数组，temp为四维字符型数组!Read the original structure,only the fractional coordination is needed!for the box is fixedopen(unit=30,file=&#39;POSCAR&#39;)read(30,*)read(30,*)read(30,*)a(1,1),a(1,2),a(1,3)read(30,*)a(2,1),a(2,2),a(2,3)read(30,*)a(3,1),a(3,2),a(3,3)! for earlier versions of VASP, you should delete on line ofthisread(30,*)read(30,*) natom!将原子个数存在七维实型数组里Natoms=0do i=1,Nkindsofatom  Natoms=Natoms+natom(i)  write(*,*)natom(i)end do!计算总的原子个数write(*,*)Natomsallocate(x0(Natoms),y0(Natoms),z0(Natoms))!分配一个natoms维的数组!read(30,*)read(30,*)do atom=1,Natoms  read(30,*)x0(atom),y0(atom),z0(atom)end doclose(30)!将所有的初始坐标存储!Read the structural information of the trajactoryopen(unit=10,file=&#39;XDATCAR&#39;)allocate(X(Totalstep,Natoms),Y(Totalstep,Natoms),Z(Totalstep,Natoms))allocate(MM(Totalstep,3),NN(Totalstep,3),QQ(Totalstep,3))do step=1,Totalstep  read(10,*)  read(10,*)  read(10,*) MM(step,1),MM(step,2),MM(step,3)  read(10,*) NN(step,1),NN(step,2),NN(step,3)  read(10,*) QQ(step,1),QQ(step,2),QQ(step,3)  read(10,*)  read(10,*)  read(10,*)  do atom=1,Natoms    read(10,*)X(step,atom),Y(step,atom),Z(step,atom)  end doend doclose(10)!将所有原子坐标读入!Unfold the atoms in the box with PBCdo atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend dodo step=2,Totalstep  do atom=1,Natoms    if(X(step,atom)-X(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)+1.0      end do!从第二步开始计算，第二部比第一步多或少    else if(X(step,atom)-X(step-1,atom)&gt;0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)-1.0      end do    end if    if(Y(step,atom)-Y(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)+1.0      end do    else if(Y(step,atom)-Y(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)-1.0      end do    end if    if(Z(step,atom)-Z(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)+1.0      end do    else if(Z(step,atom)-Z(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)-1.0      end do    end if  end doend doopen(unit=100,file=&#39;XDATCAR-3&#39;)  do step=1,Nstep   write(100,*) step,&quot;sucess&quot;  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)do step=1,Totalstep   do atom=1,Natoms     X(step,atom)=MM(step,1)*X(step,atom)+NN(step,1)*Y(step,atom)+QQ(step,1)*Z(step,atom)     Y(step,atom)=MM(step,2)*X(step,atom)+NN(step,2)*Y(step,atom)+QQ(step,2)*Z(step,atom)     Z(step,atom)=MM(step,3)*X(step,atom)+NN(step,3)*Y(step,atom)+QQ(step,3)*Z(step,atom)   end doend dodo atom=1,Natoms  x0(atom)=a(1,1)*x0(atom)  y0(atom)=a(2,2)*y0(atom)  z0(atom)=a(3,3)*z0(atom)end doopen(unit=100,file=&#39;XDATCAR-2&#39;)  do step=1,Nstep   write(100,*) step ,&quot;success&quot;  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)!考虑周期性!在第一帧上全部加减!Remove the drift of center of massXcenter0=0Ycenter0=0Zcenter0=0do atom=1,natom(1)  Xcenter0=Xcenter0+x0(atom)*mo/msum  Ycenter0=Ycenter0+y0(atom)*mo/msum  zcenter0=Zcenter0+z0(atom)*mo/msumend do!在natom中提取第一个原子的数量，并且计算质心do atom=natom(1)+1,natom(2)  Xcenter0=Xcenter0+x0(atom)*mh/msum  Ycenter0=Ycenter0+y0(atom)*mh/msum  zcenter0=Zcenter0+z0(atom)*mh/msumend do!提取第二个原子质量并求质心 !计算质心deallocate(x0,y0,z0)allocate(Xcenter(Totalstep),Ycenter(Totalstep),Zcenter(Totalstep))open(unit=400,file=&#39;Mc-drift.dat&#39;)do step=1,Totalstep  Xcenter(step)=0  Ycenter(step)=0  Zcenter(step)=0  do atom=1,natom(1)    Xcenter(step)=Xcenter(step)+X(step,atom)*mo/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*mo/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*mo/msum  end do  do atom=natom(1)+1,natom(1)+natom(2)    Xcenter(step)=Xcenter(step)+X(step,atom)*mh/msum    Ycenter(step)=Ycenter(step)+Y(step,atom)*mh/msum    Zcenter(step)=Zcenter(step)+Z(step,atom)*mh/msum  end do  Xcenter(step)=Xcenter(step)-Xcenter0  Ycenter(step)=Ycenter(step)-Ycenter0  Zcenter(step)=zcenter(step)-Zcenter0  t=step*timestep  write(400,&quot;(4(F9.6(2x)))&quot;)t,Xcenter(step),Ycenter(step),Zcenter(step)  !计算质心运动  do atom=1,Natoms    X(step,atom)=X(step,atom)-Xcenter(step)    Y(step,atom)=Y(step,atom)-Ycenter(step)    Z(step,atom)=Z(step,atom)-Zcenter(step)  end do  !去除质心运动end dodeallocate(Xcenter,Ycenter,Zcenter)!Reject some steps before equilibriumdo step=1,Nstep  do atom=1,Natoms    X(step,atom)=X(step+Nreject,atom)    Y(step,atom)=Y(step+Nreject,atom)    Z(step,atom)=Z(step+Nreject,atom)  end doend do!去除部分轨迹!Multile time originsallocate(MSD(Nstep-1))open(unit=20,file=&#39;msd-zong-t-2.dat&#39;)do step=1,Nstep-1  MSD(step)=0.0  do Origin=1,Nstep-step    do atom=natom(1)+1,natom(1)+natom(2)      DeltaX=X(Origin+step,atom)-X(Origin,atom)      DeltaY=Y(Origin+step,atom)-Y(Origin,atom)      DeltaZ=Z(Origin+step,atom)-Z(Origin,atom)      DeltaR=DeltaX**2+DeltaY**2+DeltaZ**2      MSD(step)=MSD(step)+DeltaR    end do  end do  MSD(step)=MSD(step)/REAL(natom(2))/REAL(Nstep-step)  t=step*timestep  dif=MSD(step)/(t*6)*0.0001  logdif=log10(dif)  sigma=30*1.6*1.6*dif/1.38/400/1796.86!  sigma=sigma/(10**(-9))  write(20,*)t,MSD(step)end doclose(20)!!!!一半一半!!open(unit=50,file=&#39;msd-zong-2-t.dat&#39;)!do step=1,Nstep/2!  MSD(step)=0.0!  do Origin=1,Nstep/2!    do atom=1,natom(1)!      DeltaX=X(Origin+step,atom)-X(Origin,atom)!      DeltaY=Y(Origin+step,atom)-Y(Origin,atom)!      DeltaZ=Z(Origin+step,atom)-Z(Origin,atom)!      DeltaRx=DeltaX*a(1,1)+DeltaY*a(2,1)+DeltaZ*a(3,1)!      DeltaRy=DeltaX*a(1,2)+DeltaY*a(2,2)+DeltaZ*a(3,2)!      DeltaRz=DeltaX*a(1,3)+DeltaY*a(2,3)+DeltaZ*a(3,3)!      DeltaR=DeltaRx**2+DeltaRy**2+DeltaRz**2!      MSD(step)=MSD(step)+DeltaR!    end do!  end do!  MSD(step)=MSD(step)*2/REAL(natom(1))/REAL(Nstep)!  t=step*timestep!  dif=MSD(step)/(t*6)*0.0001!  logdif=log10(dif)!  sigma=30*1.6*1.6*dif/1.38/400/1796.86!!  sigma=sigma/(10**(-9))!  write(50,*)t,MSD(step)!end do!close(50)!只和第一帧比较open(unit=60,file=&#39;msd-zong-t.dat&#39;)do step=0,Nstep-1  MSD(step)=0.0  do atom=natom(1),natom(1)+natom(2)    DeltaX=X(1+step,atom)-X(1,atom)    DeltaY=Y(1+step,atom)-Y(1,atom)    DeltaZ=Z(1+step,atom)-Z(1,atom)    DeltaR=DeltaX**2+DeltaY**2+DeltaZ**2    MSD(step)=MSD(step)+DeltaR  end do  MSD(step)=MSD(step)/REAL(natom(2))  t=step*timestep  dif=MSD(step)/(t*6)*0.0001  logdif=log10(dif)  sigma=30*1.6*1.6*dif/1.38/400/1796.86!  sigma=sigma/(10**(-9))  write(60,*)t,MSD(step)end doclose(60)deallocate(MSD)deallocate(X,Y,Z)write(*,*)&quot;success!&quot;end program</code></pre><h1 id="3-pymatgen计算MSD"><a href="#3-pymatgen计算MSD" class="headerlink" title="3. pymatgen计算MSD"></a>3. pymatgen计算MSD</h1><pre><code class="python">import osfrom pymatgen.core.trajectory import Trajectoryfrom pymatgen.io.vasp.outputs import Xdatcarfrom pymatgen.core import Structurefrom pymatgen.analysis.diffusion_analyzer import DiffusionAnalyzerimport numpy as npimport picklefrom pymatgen.analysis.diffusion_analyzer import get_conversion_factortraj=Trajectory.from_file(&#39;XDATCAR&#39;)diff=DiffusionAnalyzer.from_structures(traj,&#39;H&#39;,600,1,1,smoothed=&#39;constant&#39;,avg_nsteps=1)#转换系数conv_factor = get_conversion_factor(diff.structure, diff.specie, diff.temperature)with open(&#39;conv_factor.dat&#39;,&#39;w&#39;) as f:    f.write(&#39;conv_factor\t%f&#39; %(conv_factor))#get summarysummary = diff.get_summary_dict()import jsonjson.dump(summary,open(&#39;summary.json&#39;,&#39;w&#39;))#msd数据diff.export_msdt(&#39;msddata.dat&#39;)#mscd数据#mscd = diff.mscd#with open(&#39;mscd.dat&#39;,&#39;w&#39;) as f:#    for row in mscd :#       f.write(&#39; &#39;.join([str(row)]))#       f.write(&#39;\n&#39;)</code></pre><h1 id="4-续算的分子动力学XDATCAR处理"><a href="#4-续算的分子动力学XDATCAR处理" class="headerlink" title="4. 续算的分子动力学XDATCAR处理"></a>4. 续算的分子动力学XDATCAR处理</h1><pre><code class="fortran">!November 12,2015, by Peihao Huang --&lt;&lt;Molecular dynamics simulation_elementary methods&gt;&gt;-Wileyprogram mainimplicit noneinteger::i,j,Natoms,step,atom,Origin,n,Totalstep,Nkindsofatom,Nstep,Nreject  !整型real(kind=8)             ::factor,a(3,3),t,timestep,DeltaX,DeltaY,DeltaZ,DeltaRx,DeltaRy,DeltaRz,DeltaR,Xcenter0real(kind=8)             ::Ycenter0,Zcenter0,mh,mo,m3,m4,msum,dif,logdif,sigma!实型real(kind=8),allocatable ::X(:,:),Y(:,:),Z(:,:),MSD(:),x0(:),y0(:),z0(:),Xcenter(:),Ycenter(:),Zcenter(:)!实型双精度可分配数组integer,allocatable ::natom(:)character(len=6),allocatable ::temp(:)!长度为6的字符串数组character(len=7) ::temp1mo=6.94mh=69.72m3=78.96m4=16msum=8*mo+8*mh+16*m3+48*m4!These parameters should be input by hand Totalstep=187554Nstep=187554Nreject=0timestep=0.002Nkindsofatom=4allocate(natom(Nkindsofatom),temp(Nkindsofatom))!natom为四维整型数组，temp为四维字符型数组!Read the original structure,only the fractional coordination is needed for the box is fixedopen(unit=30,file=&#39;POSCAR&#39;)read(30,*)read(30,*)read(30,*)read(30,*)read(30,*) ! for earlier versions of VASP, you should delete on line of thisread(30,*)read(30,*) natom!将原子个数存在四维实型数组里Natoms=0do i=1,Nkindsofatom  Natoms=Natoms+natom(i)end do!计算总的原子个数write(*,*)Natomsallocate(x0(Natoms),y0(Natoms),z0(Natoms))!分配一个natoms维的数组!read(30,*)read(30,*)do atom=1,Natoms  read(30,*)x0(atom),y0(atom),z0(atom)end doclose(30)!将所有的初始坐标存储!Read the structural information of the trajactoryopen(unit=10,file=&#39;XDATCAR&#39;)read(10,*)temp1read(10,*)factorread(10,*)a(1,1),a(1,2),a(1,3)read(10,*)a(2,1),a(2,2),a(2,3)read(10,*)a(3,1),a(3,2),a(3,3)do i=1,3  do j=1,3    a(i,j)=a(i,j)*factor  end doend do!读入晶格常数read(10,*)tempread(10,*)tempallocate(X(Totalstep,Natoms),Y(Totalstep,Natoms),Z(Totalstep,Natoms))!分配二维数组do step=1,Totalstep  read(10,*)  do atom=1,Natoms    read(10,*)X(step,atom),Y(step,atom),Z(step,atom)  end doend doclose(10)!将所有原子坐标读入!Unfold the atoms in the box with PBCdo atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend doopen(unit=100,file=&#39;XDATCAR-1&#39;)  do step=1,Nstep   write(100,*) step  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)do atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend doopen(unit=100,file=&#39;XDATCAR-2&#39;)  do step=1,Nstep   write(100,*) step  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)do atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend doopen(unit=100,file=&#39;XDATCAR-3&#39;)  do step=1,Nstep   write(100,*) step  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)do atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend doopen(unit=100,file=&#39;XDATCAR-4&#39;)  do step=1,Nstep   write(100,*) step  do atom =1,Natoms write(100,&quot;(F11.8,F15.8,F15.8)&quot;) X(step,atom),Y(step,atom),Z(step,atom)  end do  end doclose(100)deallocate(X,Y,Z)write(*,*)&quot;success!&quot;end program</code></pre><h1 id="5-计算单个原子的总MSD判断跳跃次数"><a href="#5-计算单个原子的总MSD判断跳跃次数" class="headerlink" title="5. 计算单个原子的总MSD判断跳跃次数"></a>5. 计算单个原子的总MSD判断跳跃次数</h1><blockquote><p>楼下 &#x2F;work&#x2F;home&#x2F;liz&#x2F;workspace&#x2F;1-system-MD&#x2F;1-Na5YSi4O12&#x2F;9a-smass&#x3D;2potim&#x3D;1&#x2F;600&#x2F;4-msd-for-every-atom&#x2F;msd-atom.f90</p></blockquote><pre><code class="fortran">!November 12,2015, by Peihao Huang --&lt;&lt;Molecular dynamics simulation_elementary methods&gt;&gt;-Wileyprogram mainimplicit noneinteger::i,j,Natoms,step,atom,Origin,n,Totalstep,Nkindsofatom,Nstep,Nreject,nna  !整型real(kind=8）::factor,a(3,3),t,timestep,DeltaX,DeltaY,DeltaZ,DeltaRx,DeltaRy,DeltaRz,DeltaR,Xcenter0real(kind=8) ::Ycenter0,Zcenter0,mh,mo,m3,m4,msum,dif,logdif,sigma!实型real(kind=8),allocatable::X(:,:),Y(:,:),Z(:,:),MSD(:),x0(:),y0(:),z0(:),Xcenter(:),Ycenter(:),Zcenter(:)!实型双精度可分配数组integer,allocatable ::natom(:)character(len=6),allocatable ::temp(:)!长度为6的字符串数组character(len=10) ::temp1character(len=20) :: filename!These parameters should be input by hand Totalstep=270000Nstep=270000Nreject=0timestep=0.002Nkindsofatom=4allocate(natom(Nkindsofatom),temp(Nkindsofatom))!natom为四维整型数组，temp为四维字符型数组!Read the original structure,only the fractional coordination is needed for the box is fixedopen(unit=30,file=&#39;POSCAR&#39;)read(30,*)read(30,*)read(30,*)read(30,*)read(30,*) ! for earlier versions of VASP, you should delete on line of thisread(30,*)read(30,*) natom!将原子个数存在七维实型数组里Natoms=0do i=1,Nkindsofatom  Natoms=Natoms+natom(i)end do!计算总的原子个数write(*,*)Natomsallocate(x0(Natoms),y0(Natoms),z0(Natoms))!分配一个natoms维的数组!read(30,*)read(30,*)do atom=1,Natoms  read(30,*)x0(atom),y0(atom),z0(atom)end doclose(30)!将所有的初始坐标存储!Read the structural information of the trajactoryopen(unit=10,file=&#39;XDATCAR&#39;)read(10,*)temp1read(10,*)factorread(10,*)a(1,1),a(1,2),a(1,3)read(10,*)a(2,1),a(2,2),a(2,3)read(10,*)a(3,1),a(3,2),a(3,3)do i=1,3  do j=1,3    a(i,j)=a(i,j)*factor  end doend do!读入晶格常数read(10,*)tempread(10,*)allocate(X(Totalstep,Natoms),Y(Totalstep,Natoms),Z(Totalstep,Natoms))!分配二维数组do step=1,Totalstep  read(10,*)  do atom=1,Natoms    read(10,*)X(step,atom),Y(step,atom),Z(step,atom)  end doend doclose(10)!将所有原子坐标读入!Unfold the atoms in the box with PBCdo atom=1,Natoms  if(X(1,atom)-x0(atom)&lt;-0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)+1.0    end do  else if(X(1,atom)-x0(atom)&gt;0.5) then    do step=1,Totalstep      X(step,atom)=X(step,atom)-1.0    end do  end if  if(Y(1,atom)-y0(atom)&lt;-0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)+1.0    end do  else if(Y(1,atom)-y0(atom)&gt;0.5) then    do step=1,Totalstep      Y(step,atom)=Y(step,atom)-1.0    end do  end if  if(Z(1,atom)-z0(atom)&lt;-0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)+1.0    end do  else if(Z(1,atom)-z0(atom)&gt;0.5) then    do step=1,Totalstep      Z(step,atom)=Z(step,atom)-1.0    end do  end ifend dodo step=2,Totalstep  do atom=1,Natoms    if(X(step,atom)-X(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)+1.0      end do!从第二步开始计算，第二部比第一步多或少    else if(X(step,atom)-X(step-1,atom)&gt;0.5) then      do n=step,Totalstep        X(n,atom)=X(n,atom)-1.0      end do    end if    if(Y(step,atom)-Y(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)+1.0      end do    else if(Y(step,atom)-Y(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Y(n,atom)=Y(n,atom)-1.0      end do    end if    if(Z(step,atom)-Z(step-1,atom)&lt;-0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)+1.0      end do    else if(Z(step,atom)-Z(step-1,atom)&gt;0.5) then      do n=step,Totalstep        Z(n,atom)=Z(n,atom)-1.0      end do    end if  end doend do!考虑周期性!在第一帧上全部加减!Remove the drift of center of mass!Reject some steps before equilibriumdo step=1,Nstep  do atom=1,Natoms    X(step,atom)=X(step+Nreject,atom)    Y(step,atom)=Y(step+Nreject,atom)    Z(step,atom)=Z(step+Nreject,atom)  end doend do!去除部分轨迹!Multile time originsallocate(MSD(Nstep-1))!open(unit=20,file=&#39;msd-zong-t.dat&#39;)!do step=1,Nstep-1!  MSD(step)=0.0!  atom=1!  DeltaX=X(step,atom)-X(1,atom)!  DeltaY=Y(step,atom)-Y(1,atom)!  DeltaZ=Z(step,atom)-Z(1,atom)!  DeltaRx=DeltaX*a(1,1)+DeltaY*a(2,1)+DeltaZ*a(3,1)!  DeltaRy=DeltaX*a(2,2)+DeltaY*a(2,2)+DeltaZ*a(3,2)!  DeltaRz=DeltaX*a(1,3)+DeltaY*a(2,3)+DeltaZ*a(3,3)!  DeltaR=DeltaRx**2+DeltaRy**2+DeltaRz**2!  MSD(step)=MSD(step)+DeltaR!    !  t=step*timestep!  dif=MSD(step)/(t*6)*0.0001!  logdif=log10(dif)!  sigma=30*1.6*1.6*dif/1.38/400/1796.86!!  sigma=sigma/(10**(-9))!  write(20,*)t,MSD(step)!end do!close(20)do atom=1, 30  write(filename, &quot;(A,I0,A)&quot;) &quot;msd-&quot;, atom, &quot;.dat&quot;  open(unit=20, file=trim(filename))  do step=1, Nstep-1    MSD(step) = 0.0    DeltaX = X(step,atom) - X(1,atom)    DeltaY = Y(step,atom) - Y(1,atom)    DeltaZ = Z(step,atom) - Z(1,atom)    DeltaRx = DeltaX * a(1,1) + DeltaY * a(2,1) + DeltaZ * a(3,1)    DeltaRy = DeltaX * a(1,2) + DeltaY * a(2,2) + DeltaZ * a(3,2)    DeltaRz = DeltaX * a(1,3) + DeltaY * a(2,3) + DeltaZ * a(3,3)    DeltaR = DeltaRx**2 + DeltaRy**2 + DeltaRz**2    MSD(step) = MSD(step) + DeltaR    t = step * timestep    dif = MSD(step) / (t * 6) * 0.0001    logdif = log10(dif)    sigma = 30 * 1.6 * 1.6 * dif / 1.38 / 400 / 1796.86    !  sigma = sigma / (10**(-9))    write(20, *) t, MSD(step)  end do  close(20)end dodeallocate(MSD)deallocate(X,Y,Z)write(*,*)&quot;success!&quot;end program</code></pre>]]></content>
      
      
      <categories>
          
          <category> 分子动力学 </category>
          
          <category> 分析方法 </category>
          
          <category> msd </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>超离子导体中阿伦尼乌斯公式的物理起源</title>
      <link href="/2024/05/24/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%B6%85%E7%A6%BB%E5%AD%90%E5%AF%BC%E4%BD%93%E4%B8%AD%E9%98%BF%E4%BC%A6%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%85%AC%E5%BC%8F%E7%9A%84%E7%89%A9%E7%90%86%E8%B5%B7%E6%BA%90/"/>
      <url>/2024/05/24/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%B6%85%E7%A6%BB%E5%AD%90%E5%AF%BC%E4%BD%93%E4%B8%AD%E9%98%BF%E4%BC%A6%E5%B0%BC%E4%B9%8C%E6%96%AF%E5%85%AC%E5%BC%8F%E7%9A%84%E7%89%A9%E7%90%86%E8%B5%B7%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>思考阿伦尼乌斯公式的起源，来源于对于固体电解质中随着温度改变，两种材料的离子电导率顺序会发生改变，也就是室温下那些相对有利的描述符在高温下变得相对有害；问题的根源来自离子电导率是温度的响应，或者说描述符是对温度的响应。响应的函数是活化能。活化能是本征不变的。</p><hr><h1 id="1-绘制一个非log的阿伦尼乌斯公式"><a href="#1-绘制一个非log的阿伦尼乌斯公式" class="headerlink" title="1. 绘制一个非log的阿伦尼乌斯公式"></a>1. 绘制一个非log的阿伦尼乌斯公式</h1><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604160746872.png" alt="image-20240604160746872"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604160816915.png" alt="image-20240604160816915"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604160647492.png" alt="image-20240604160647492"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604160933036.png" alt="image-20240604160933036"></p><p>y&#x3D;ae^(-b&#x2F;x)的导数 $\frac{\partial f}{\partial x} &#x3D; \frac{a,b,e^ {- \frac{b}{x} }}{x^2}$</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604162421787.png" alt="image-20240604162421787"></p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240604162442433.png" alt="image-20240604162442433"></p><h1 id="2-麦克斯韦-玻尔兹曼分布"><a href="#2-麦克斯韦-玻尔兹曼分布" class="headerlink" title="2. 麦克斯韦-玻尔兹曼分布"></a>2. 麦克斯韦-玻尔兹曼分布</h1><blockquote><p>物理化学讲义 彭笑刚</p><p><a href="https://img.sslibrary.com/n/slib/book/slib/10187693/bb8c7a9c40184c24aa13df047eef0be8/067598e620dd3dc848749a12394c9c92.shtml?dxbaoku=true&moocbaoku=false&deptid=920&fav=https://www.sslibrary.com/reader/pdg/dxpdgreader?d=4fdf840d872514b21b9babbd8ee01b5b&enc=efc50c213fa6456c44b7f0cb5426940b&ssid=10187693&did=920&fenlei=1304080104&spage=1&t=5&uid=&username=dx2baoku_59.72.114.217_920&view=-1&refinfo=&refaid=">分子化学反应动态学 (sslibrary.com)</a></p></blockquote><h2 id="1-玻尔兹曼分布的含义"><a href="#1-玻尔兹曼分布的含义" class="headerlink" title="1. 玻尔兹曼分布的含义"></a>1. 玻尔兹曼分布的含义</h2><p>平衡态的概念：对于一个系统，在确定的外界条件下，应该有且只有一个平衡态，平衡态的表现是在系统的各个地方（当不考虑表界面时），其物理量不随时间有巨大的改变，但应该允许有涨落的存在。</p><blockquote><p>平衡态只要求在系统的区域内其物理量不随时间有巨大改变，但并没有要求在不同的区域内物理量也相同，在表界面应该有梯度的存在，但是不同离子的化学势应该是平衡的。</p></blockquote><blockquote><p>在离子导体中的模拟中，或者在分子动力学的过程中，我们需要模拟的是平衡态的物理量，分子动力学中的收敛也是平衡态的含义。</p></blockquote><blockquote><p>对于一个宏观的孤立的离子导体，其内部的离子与表面处的离子应该是动态的平衡过程，或者表面到界面应该存在一个迁移的梯度，这种梯度的存在只是离子流的存在，但要求离子的化学势应该是平衡的。</p></blockquote><hr><p>对于每一个宏观状态，都对应着大量的微观状态。一个基本假设是所有的整体的微观状态都是等价的，具有相同的出现概率。宏观下的可观测的物理量，可以理解为微观状态的某个物理量的平均值</p><blockquote><p>扩散系数应该就是这样一个物理量，应该是微观离子运动的距离和时间的平均值</p></blockquote><p>时间平均值等价于系综平均值</p><blockquote><p>计算msd时，理论上时间足够长，晶胞尺寸很小时也应该计算足够准确</p></blockquote><blockquote><p>扩散系数是一个在运动中才能观察到的物理量，但并不是一个运动中才能确定的物理量，其数值的静态统计部分在结构确定时，就应当由离子的振动频率和扩散距离决定，但是运动的离子的关联部分，需要在运动中得到统计平均</p></blockquote><p>一个硬币抛1000次等于1000个硬币抛一次</p><blockquote><p>1000个离子运动一次等于1个离子运动1000次</p></blockquote><p>将N个粒子分配到n个能级上，第$i$个能级上的粒子数为$N_i$,可能的划分方式数量为<br>$$<br>w&#x3D;\frac{N!}{\prod \limits_{i&#x3D;0}^n N_i}<br>$$</p><blockquote><p>晶格中离子的振动与输运是否也有不同的能级。宏观上看，输运处于平衡态时，扩散系数稳定，意味着其微观的离子所处的不同的能级&#x2F;振幅的分布随时间是不变的（如果有这样的能级的话），这一平衡态也应该对应着大量的微观状态，也就是具体到每个粒子上，其所处的状态是不确定的，有大量可能的分布状态。</p></blockquote><blockquote><p>或许可以考虑从晶格静态结构中直接计算其（振幅）分布及分布的最可几状态，也就是平衡态，也就能计算扩散系数。不管非谐还是简谐，振动总是真实存在的，振幅也是真实存在的，或许非谐决定了分布的形状。</p></blockquote><blockquote><p>或许扩散系数有一个分布，而非谐、简谐决定了分布的样子，最可几分布就是宏观的扩散系数。当然，应该暂时不考虑运动中关联的效应</p></blockquote><hr><p>最可几态指的是微观状态数占据最大权重的宏观状态。在给定的外界条件下，系统的平衡态是系统的最可几态。</p><p>系统的元素数量越多，最可几态占据的权重越大。对一个真正宏观系统，当偏离最可几状态时，其状态所包含的微观状态数迅速下降到可以忽略不计。因此最可几状态是宏观系统的大部分时间能够观测到的。其他的涨落小到几乎不可观察</p><p><img src="/./../../%E5%9B%BE%E7%89%87/image-20240605205929118.png" alt="image-20240605205929118"></p><p>玻尔兹曼分布就是不同微观状态在外界环境下的分布状况</p><hr><p>宏观状态之间有确定的稳定性差异，通过比较微观状态数的数量，可以判断两个宏观状态间的相对稳定性。以及判断一个化学&#x2F;物理过程是否可以发生</p><blockquote><p>离子从一个稳定态向另一个稳定态跳跃是一个过程，过程中需要跨越一个过渡态，能否到达过渡态是一次微观状态数的比较，从过渡态去哪里是另一次微观状态数的比较。说明过渡态的微观状态数是足够大的</p></blockquote><blockquote><p>记得有一篇文章提到过微观状态数和过渡态的关系</p></blockquote><hr><p>玻尔兹曼对熵的定义<br>$$<br>S&#x3D;kln(W)<br>$$<br>$W$是微观状态数，微观状态数越多，权重越大，熵越大。<code>熵是微观状态数的另一种描述</code></p><p>平衡态是微观状态数权重最大的状态，对应着也是熵最大的状态。系统向着平衡态演化</p><blockquote><p>熵和微观状态数有相同的含义，在离子扩散过程中，是否可定义离子跳跃相关的熵。（振幅熵？）</p></blockquote><p>统计物理中的熵增原理是一个自然而然的推论</p><hr><p>在两个系统之间发生了能量的转移后，熵改变的难易程度，是由具体改变的能量与熵变来决定的。</p><p>温度是能量对熵的偏导数，描述了单位熵的改变需要的能量。<br>$$<br>T&#x3D;(\frac{dU}{dS})_v,_n<br>$$</p><blockquote><p>在离子输运中，也应该存在这样的定义，定义温度增加，可以允许的熵、即微观状态数的改变，这可能与温度升高，振动改变相关</p></blockquote><h1 id="3-化学家眼中的阿伦尼乌斯公式"><a href="#3-化学家眼中的阿伦尼乌斯公式" class="headerlink" title="3. 化学家眼中的阿伦尼乌斯公式"></a>3. 化学家眼中的阿伦尼乌斯公式</h1><h1 id="3-阿伦尼乌斯公式的含义是什么"><a href="#3-阿伦尼乌斯公式的含义是什么" class="headerlink" title="3. 阿伦尼乌斯公式的含义是什么"></a>3. 阿伦尼乌斯公式的含义是什么</h1><blockquote><p>阿伦尼乌斯公式是经验公式，与之相似的是Eyring在1935年提出的Eyring equation，是建立在统计物理上的</p></blockquote><p>一些参考资料</p><p>阿伦尼乌斯公式是如何推导出来的? - 查无此名12138的回答 - 知乎<br><a href="https://www.zhihu.com/question/568999539/answer/2778592065">https://www.zhihu.com/question/568999539/answer/2778592065</a></p><p>[非平衡态统计物理] 3 连续时间随机过程（四） - 笠道梓的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/409136603">https://zhuanlan.zhihu.com/p/409136603</a></p><p>关于如图的Arrhenius方程，老师一定就让你们记住就行，但是我想知道这个方程当初是怎么得出来的？ - 萌铁蛋 MnFeN的回答 - 知乎<br><a href="https://www.zhihu.com/question/431586967/answer/1591685455">https://www.zhihu.com/question/431586967/answer/1591685455</a></p><p>关于如图的Arrhenius方程，老师一定就让你们记住就行，但是我想知道这个方程当初是怎么得出来的？ - 磷酸君Phosphates的回答 - 知乎<br><a href="https://www.zhihu.com/question/431586967/answer/1591829506">https://www.zhihu.com/question/431586967/answer/1591829506</a></p><p>关于如图的Arrhenius方程，老师一定就让你们记住就行，但是我想知道这个方程当初是怎么得出来的？ - 太一的回答 - 知乎<br><a href="https://www.zhihu.com/question/431586967/answer/1841701550">https://www.zhihu.com/question/431586967/answer/1841701550</a></p><p>关于如图的Arrhenius方程，老师一定就让你们记住就行，但是我想知道这个方程当初是怎么得出来的？ - BenderRodriguez的回答 - 知乎<br><a href="https://www.zhihu.com/question/431586967/answer/1621985520">https://www.zhihu.com/question/431586967/answer/1621985520</a></p><p><a href="https://chem.libretexts.org/Bookshelves/Physical_and_Theoretical_Chemistry_Textbook_Maps/Supplemental_Modules_(Physical_and_Theoretical_Chemistry)/Kinetics/06%3A_Modeling_Reaction_Kinetics/6.04%3A_Transition_State_Theory/6.4.01%3A_Eyring_equation">6.4.1: Eyring equation - Chemistry LibreTexts</a></p><p><a href="https://public.websites.umich.edu/~elements/03chap/html/transition/index.htm#IV">https://public.websites.umich.edu/~elements/03chap/html/transition/index.htm#IV</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>固态离子学</title>
      <link href="/2024/05/24/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BA%E6%80%81%E7%A6%BB%E5%AD%90%E5%AD%A6/"/>
      <url>/2024/05/24/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9B%BA%E6%80%81%E7%A6%BB%E5%AD%90%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p><strong>始终没有搞懂离子迁移和昂萨格倒易关系、线性响应理论、涨落耗散、最小熵原理这些近平衡态、非平衡态的关系，以下列出比较好的帖子、书籍，可以学习一下</strong></p><p><strong><a href="https://zhuanlan.zhihu.com/p/148164408">统计物理研究前沿总结与漫谈 - 知乎 (zhihu.com)</a></strong></p><p><strong><a href="https://www.zhihu.com/question/24636701"> 为什么谱定理又称作涨落耗散定理，它与「涨落」「耗散」是怎么联系起来的？涨落与耗散是怎样定义的呢？ - 知乎 (zhihu.com)</a></strong></p><p><strong><a href="https://zhuanlan.zhihu.com/p/620689256">https://zhuanlan.zhihu.com/p/620689256</a></strong></p><p><strong>目前知道的是，统计物理分为平衡态统计物理、近平衡态、非平衡态，平衡态就是热统中学习的系综等内容，而近平衡态和非平衡态了解很少，生命系统是典型的非平衡态系统</strong></p><p><strong>对于不同物理的学科，可以简单地从时间尺度和空间尺寸两个标准进行划分</strong></p><blockquote><p><strong>凝聚态物理和统计物理的区别？</strong></p><p><strong>凝聚态物理更加关注材料，更关注大系统内部的相互作用，而统计物理重视对大系统整体的描述</strong></p></blockquote><p><strong>其现象是统计力学的，其现象是静态热力学的</strong></p><h1 id="1-理论研究"><a href="#1-理论研究" class="headerlink" title="1.理论研究"></a><strong>1.理论研究</strong></h1><h2 id="1-离子运动关联性"><a href="#1-离子运动关联性" class="headerlink" title="1.离子运动关联性"></a><strong>1.离子运动关联性</strong></h2><p><strong>对这种关联性的讨论在本笔记中只是对不同事件的结果的分析，而不包括对其原因的探讨，即可以根据这样的方法判断运动事件的关联性，但是不能得到关联性背后的原因以及关联性的后果，要获得原因的判断，需要十分小心</strong></p><blockquote><p><strong>Dynamic Ion Correlations in Solid and Liquid Electrolytes: How Do They Affect Charge and Mass Transport?</strong></p></blockquote><h3 id="1-Nernst-Einstein-equation（离子电导率和扩散系数的关联）"><a href="#1-Nernst-Einstein-equation（离子电导率和扩散系数的关联）" class="headerlink" title="1.Nernst-Einstein equation（离子电导率和扩散系数的关联）"></a><strong>1.Nernst-Einstein equation（离子电导率和扩散系数的关联）</strong></h3><p>$$<br>\sigma_{ion}&#x3D;\frac{F^2}{RTH_R}\sum_ic_iD_i^*<br>$$</p><blockquote><p><strong>$\sigma_{ion}$  ionic conductivity</strong> </p><p><em><em>$D_i^</em>$  self-diffusion coefficient</em>*</p><p><em><strong>$z_i$ 离子带电荷量   $c_i$ 离子浓度</strong></em>* </p><p><strong>$H_R$ Haven ratio</strong></p><p><em><strong>$k_B$ 玻尔兹曼常数</strong></em>* </p><p><strong>$T$ 温度</strong></p><p><em><strong>$F$ 法拉第常数</strong></em>*</p></blockquote><h3 id="2-自扩散系数与自相关作用"><a href="#2-自扩散系数与自相关作用" class="headerlink" title="2.自扩散系数与自相关作用"></a><strong>2.自扩散系数与自相关作用</strong></h3><blockquote><p><strong>离子在这一步和下一步跳跃之间的关联性</strong></p></blockquote><p><strong>热力学平衡状态下离子在材料中的输运可由自扩散系数描述：</strong><br>$$<br>D_\alpha^*&#x3D;\lim\limits_{t\to\infty}\frac{d}{dt}[\frac{1}{2dN_\alpha}(\sum_{i&#x3D;1}^{N_a}(\Delta\vec{R}_i(t))^2)]<br>$$</p><blockquote><p><strong>$d$ 输运的维度</strong></p><p><strong>$N_\alpha$ 离子数目</strong></p><p><strong>$\Delta\vec{R}_i$  离子运动的向量</strong></p></blockquote><p>$$<br>\Delta R_i(t)&#x3D;\sum_{k&#x3D;1}^m\Delta r_{i,k}(t)\Delta R_i(t)&#x3D;\sum_{k&#x3D;1}^m\Delta r_{i,k}(t)<br>$$</p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511162233156.png" alt="image-20230511162233156"></strong></p><p><strong>将$\Delta\vec{R}_i$ 带入得到</strong><br>$$<br>\begin{array}{l}D_{\alpha}^{*}&#x3D;\frac{1}{2 d N_{\alpha}} \lim \limits_{t \rightarrow \infty} \frac{d}{d t} \ {\left[\sum_{i&#x3D;1}^{N_{a}}\left(\sum_{k&#x3D;1}^{m}\left(\Delta r_{i, k}(t)\right)^{2}+\sum_{k&#x3D;1}^{m} \sum_{l \neq k} \Delta r_{i, k}(t) \cdot \Delta r_{i, l}(t) \mid\right)\right]}\end{array}<br>$$<br><strong>$\Delta\vec{r}_{i,k}(t)^2$  是独立跳跃的长度，是与连续跳跃的方向相关性无关的量，而第二项与前后跳跃的方向是相关的（图中显示的是正交关系，但是实际中可以有各种夹角）</strong></p><p><strong>在左右两侧分别除以第一项</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511165100589.png" alt="image-20230511165100589"></strong></p><p><strong>其中</strong><br>$$<br>D_\alpha&#x3D;\frac{1}{2 d N_{a}} \lim \limits_{t \rightarrow \infty} \frac{d}{d t}\left[\sum_{i&#x3D;1}^{N_{a}} \sum_{k&#x3D;1}^{m}\left(\Delta \vec{r}_{i, k}(t)\right)^{2}\right]<br>$$<br><strong>称作<code>无关联的自扩散系数</code>，而右侧{1+~}称为tracer correlation factor，标识为<em>f</em>。</strong></p><p><strong><code>如果同一个离子前后两次运动之间不存在方向相关性，那么f为1</code>，因为对于随机的运动，其运动的方向的统计平均是均匀的，最终右侧分数的分子相加是0。(向量积不总是正数，有多少相同方向的就有多少相反方向的)</strong></p><p><strong>$D\alpha$和 <em>f</em> 可以在模拟中计算出来，需要计算一个大位移中每个小跳跃的位移，然后平方相加</strong></p><p><strong><code>在我现在的计算中，是考虑了自关联的因素的</code>,因为并没有特意将单个位移分开</strong></p><h3 id="3-电导率计算中出现的不同离子间的关联及-H-r"><a href="#3-电导率计算中出现的不同离子间的关联及-H-r" class="headerlink" title="3.电导率计算中出现的不同离子间的关联及$H_r$"></a><strong>3.电导率计算中出现的不同离子间的关联及$H_r$</strong></h3><blockquote><p><strong>不同离子之间跳跃的关联性</strong></p></blockquote><p><strong>也就是固体电解质中的情形</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511171618003.png" alt="image-20230511171618003"></strong></p><blockquote><p><strong>注意，计算离子电导率的公式和计算扩散系数的公式中对$\Delta\vec{R}_i(t)$的加和与平方的顺序是不同的，计算离子电导率是先加和再平方，而计算自扩散电导率是先平方再加和。<code>两者之间的差别是：先加和再平方会比后者多出一些不同离子的交叉项，是不同离子间对扩散方向的影响</code></strong></p></blockquote><p><strong>计算电导率的公式完整版如下：</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20240524193235621.png" alt="image-20240524193235621"></strong></p><p><strong>根据</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511213843702.png" alt="image-20230511213843702"></strong></p><p><strong>容易得到，在使用Nernst-Einstein公式计算离子电导率时，使用的离子扩散系数通常为：</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511213949637.png" alt="image-20230511213949637"></strong></p><p><strong>也就是说，2中所使用的扩散系数的计算是更简化的</strong></p><p><strong>表示不同离子间关联性的函数是$H_R$</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511214519699.png" alt="image-20230511214519699">g</strong></p><p><em>*<em>self部分是独立的，而distinct部分表示不同离子间的相互作用, 如果不同的离子优先向相同的方向移动，那么distinct的值为正，$H_R$的值就小于1，也就是$D_\sigma$的值会大于计算的$D^</em>$*.</em>*</p><h3 id="4-整体的关联系数-f-I"><a href="#4-整体的关联系数-f-I" class="headerlink" title="4.整体的关联系数$f_I$"></a><strong>4.整体的关联系数$f_I$</strong></h3><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230511215703315.png" alt="image-20230511215703315"></strong></p><h2 id="2-在液体电解质中的情况"><a href="#2-在液体电解质中的情况" class="headerlink" title="2.在液体电解质中的情况"></a><strong>2.在液体电解质中的情况</strong></h2><h2 id="3-昂萨格倒易关系、Green-Kubo公式与速度自关联函数、扩散系数"><a href="#3-昂萨格倒易关系、Green-Kubo公式与速度自关联函数、扩散系数" class="headerlink" title="3.昂萨格倒易关系、Green-Kubo公式与速度自关联函数、扩散系数"></a><strong>3.昂萨格倒易关系、Green-Kubo公式与速度自关联函数、扩散系数</strong></h2><blockquote><p><strong>Transport phenomena in electrolyte solutions: Nonequilibrium</strong><br><strong>thermodynamics and statistical mechanics</strong></p></blockquote><h3 id="1-不同的扩散理论"><a href="#1-不同的扩散理论" class="headerlink" title="1. 不同的扩散理论"></a><strong>1. 不同的扩散理论</strong></h3><ol><li><p><strong>Stefan-Maxwell equations(力平衡理论,起源于气体动理论）</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230515160550000.png" alt="image-20230515160550000"></strong></p></li></ol><p><strong>左侧是作用在离子上的热力学力，右侧是离子与其他离子的摩擦力</strong> </p><p><strong>$\vec{u}_i$: 电化学势</strong></p><ol start="2"><li><strong>经典的不可逆热力学过程（Onsager,Prigogine,Groot,Mazur)</strong></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230515161146452.png" alt="image-20230515161146452"></strong></p><p><strong>翻译：利用内部熵产生率将热力学力与流使用输运系数矩阵连接起来</strong></p><p><strong>Onsager系数可以利用Breen-Kubo关系直接在分子模拟中计算出来</strong></p><p><strong>2.1 质量守恒定律 <a href="https://zhuanlan.zhihu.com/p/142394625">连续介质力学基础：动量守恒方程 - 知乎 (zhihu.com)</a></strong></p><p><strong>2.2 电荷守恒定律到麦克斯韦方程组   ：电荷守恒原理及其对四维时空坐标变换的不变性激发了第一对麦克斯韦方程组</strong></p><p><strong><a href="https://zhuanlan.zhihu.com/p/373965779">电荷守恒定律决定麦克斯韦方程组？ - 知乎 (zhihu.com)</a></strong></p><p><strong><a href="https://zhuanlan.zhihu.com/p/389735662">由麦克斯韦方程组推导电荷守恒定律 - 知乎 (zhihu.com)</a></strong></p><p><strong><a href="https://www.zhihu.com/question/529304982/answer/2452939120">(23 封私信 &#x2F; 81 条消息) 能否用文字分别表述麦克斯韦方程组四个式子的意思？ - 知乎 (zhihu.com)</a></strong></p><p><strong>2.3 动量守恒</strong></p><p><strong>2.4 能量守恒</strong></p><p><strong>4 昂萨格回归假设：</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230516152352215.png" alt="image-20230516152352215"></strong></p><p><strong>线性响应理论</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230516153440498.png" alt="image-20230516153440498"></strong></p><p><strong>注意，响应函数是系统的内禀性质</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230516153619278.png" alt="image-20230516153619278"></strong></p><h2 id="4-非平衡统计力学学习（非平衡统计力学-陈式刚）"><a href="#4-非平衡统计力学学习（非平衡统计力学-陈式刚）" class="headerlink" title="4.非平衡统计力学学习（非平衡统计力学 陈式刚）"></a><strong>4.非平衡统计力学学习（非平衡统计力学 陈式刚）</strong></h2><blockquote><p><strong>没有详细学习的必要，对重要的章节了解</strong></p></blockquote><h3 id="1-非平衡统计力学的发展概况与基本内容"><a href="#1-非平衡统计力学的发展概况与基本内容" class="headerlink" title="1. 非平衡统计力学的发展概况与基本内容"></a><strong>1. 非平衡统计力学的发展概况与基本内容</strong></h3><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230516150635873.png" alt="image-20230516150635873"></strong></p><h2 id="5-缺陷运动的绝对速率理论、同位素效应"><a href="#5-缺陷运动的绝对速率理论、同位素效应" class="headerlink" title="5. 缺陷运动的绝对速率理论、同位素效应"></a><strong>5. 缺陷运动的绝对速率理论、同位素效应</strong></h2><blockquote><p><strong>引用自 FREQUENCY FACTORS AND ISOTOPE EFFECTS IN SOLID STATE RATE PROCESSES</strong></p></blockquote><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619152518393.png" alt="image-20230619152518393"></strong></p><ol><li><p><strong>$\gamma &#x3D;ve^{-\Delta F&#x2F;kT}$</strong></p><p><strong>其中，$v$是沿着鞍点方向的振动频率</strong></p></li></ol><h1 id="2-提升离子电导的经验观点"><a href="#2-提升离子电导的经验观点" class="headerlink" title="2. 提升离子电导的经验观点"></a><strong>2. 提升离子电导的经验观点</strong></h1><h2 id="1-跳跃频率和浓度对离子电导分别的影响-（跳跃几率，指前因子）"><a href="#1-跳跃频率和浓度对离子电导分别的影响-（跳跃几率，指前因子）" class="headerlink" title="1.跳跃频率和浓度对离子电导分别的影响 （跳跃几率，指前因子）"></a><strong>1.跳跃频率和浓度对离子电导分别的影响 （跳跃几率，指前因子）</strong></h2><blockquote><p><strong>Hopping Rate and Migration Entropy as the Origin of Superionic Conduction within Solid-State Electrolytes</strong></p><p><em><strong>最新的结论：这篇文章的成立只是验证了焓熵关系的一个推论，即$\alpha &lt;\frac {1}{k_BT}时，活化能减少，跳跃次数增加，电导率升高$ 。比较好的一点是将电导率的升高依赖于跳跃次数的增加  $\omega _p&#x3D;\omega_0 exp(E_m(\frac{k_BbT-1}{k_BT}))$</strong></em></p></blockquote><p><em>*<em>结论：</em>并不认同 ，*但是一些推论可以作为理解MNR规则的源头，而且将晶格振动联系起来（跳跃次数的出现）</em>**</p><ol><li><p><em><strong>离子电导率和跳跃频率都遵循随着温度的阿伦尼乌斯公式，而载流子浓度保持为常数 (很正常，这一温度范围内载流子浓度并不会有很大变化，热激发能量变化不够）</strong></em></p></li><li><p><em><strong>相比载流子的浓度，载流子的迁移率对提升离子电导率更重要</strong></em></p></li></ol><h3 id="1-离子电导率随频率变化以及跳跃频率"><a href="#1-离子电导率随频率变化以及跳跃频率" class="headerlink" title="1. 离子电导率随频率变化以及跳跃频率"></a><strong>1. 离子电导率随频率变化以及跳跃频率</strong></h3><p><strong>Jonscher universal power law</strong></p><p><strong><img src="/./../%E5%9B%BE%E7%89%87/image-20230519103648585.png" alt="image-20230519103648585"></strong></p><blockquote><p> <strong>$\sigma_{dc}$是电导率的$d_.c_.$ 限制，$\omega$是角频率,A是与温度相关的系数</strong></p></blockquote><p><strong>$\sigma_{dc}$和系数A的关系为</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519104020863.png" alt="image-20230519104020863"></strong></p><p><strong>$\omega_p$是&#x3D;&#x3D;跳跃&#x3D;&#x3D;频率，将上面公式结合可得</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519104127915.png" alt="image-20230519104127915"></strong></p><p><strong>因此，当测得的$\sigma_w&#x3D;2\sigma_{dc}$时，可以得到此时跳跃频率的值等于角频率</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519104425493.png" alt="image-20230519104425493"></strong></p><ul><li><em><strong>借助实验手段，可以测得材料中离子的跳跃频率</strong></em></li></ul><h3 id="2-离子电导率阿伦尼乌斯公式"><a href="#2-离子电导率阿伦尼乌斯公式" class="headerlink" title="2. 离子电导率阿伦尼乌斯公式"></a><strong>2. 离子电导率阿伦尼乌斯公式</strong></h3><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102034548.png" alt="image-20230519102034548"></strong></p><p><strong>阿伦尼乌斯公式的指前因子为</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102056764.png" alt="image-20230519102056764"></strong></p><blockquote><p><strong>$\omega_0 $ ： 尝试频率</strong></p><p><strong>$\Delta{S}_m$ : 迁移熵，应该是过渡态和基态的熵变</strong></p><p><strong>$\alpha_0$ : 跳跃距离</strong></p><p><strong>$z$：几何因子</strong></p></blockquote><p><strong>跳跃频率是热激活的</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102949980.png" alt="image-20230519102949980"></strong></p><p><strong>$E_m$:迁移活化能（扩散势垒）</strong></p><p><strong>&#x3D;&#x3D;这里需要注意的是，跳跃频率不止等于尝试频率*exp(-Em),而是等于尝试频率</strong>exp(G)&#x3D;&#x3D;**</p><p><em><strong>通常测量的总的活化能$E_a$包括两部分：生成迁移离子需要的能量以及离子迁移的能量，即$E_a$包括了$E_m$，这里的Ea只特指跳跃前后的焓变。</strong></em></p><blockquote><p> <strong>$\omega_p与电导率的关系$：</strong></p><p>​                                     <strong>$\sigma T&#x3D;\omega_p\frac{znq^2}{k_B}exp(-\frac{E_a-E_m}{k_BT})\alpha_0^2)$</strong></p><p><strong>而电导率$\sigma$与扩散系数的关系为</strong></p><p><strong>$\sigma T&#x3D;\frac{nq^2}{k_B}D$</strong></p><p><strong>因此可以计算$\omega_P$与扩散系数D的关系</strong></p><p><strong>$D&#x3D;z\omega_p\alpha_0^2exp(-\frac{E_a-E_m}{k_BT})$</strong></p><p><strong>$\omega_p$等价于$\mu_0exp(-\frac{E_a}{k_BT})$,说是跳跃频率是合理的,只是跳跃频率不再只和Ea有关，而是和G有关</strong></p><p><strong>将$w_p$的值带入得</strong></p><p><strong>$D&#x3D;z\alpha_0^2\omega_0exp(-\frac{Ea}{k_BT})exp(\frac{\Delta S_m}{k_B})$</strong></p></blockquote><p><em><strong>现在将电导率的公式展开来写就变成（展开的越详细各种效应越清晰：</strong></em></p><p><strong>$\sigma T&#x3D;\frac{znq^2}{k_B}\alpha_0^2\omega_0exp(\frac{\Delta S_m}{k_B})exp(-\frac{E_a-E_m}{k_BT})exp(-\frac{E_m}{k_BT})$</strong></p><p><strong>其中，迁移熵$\Delta{S}_m$是运动前后晶格振动的变化带来的。</strong> </p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519105218197.png" alt="image-20230519105218197"></strong></p><p><strong>依据公式</strong></p><p><strong>定义载流子浓度量为</strong> </p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519110601952.png" alt="image-20230519110601952"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519105420194.png" alt="image-20230519105420194"></strong></p><p><strong>电导率据此等于</strong></p><p><strong>$\sigma T&#x3D;C\omega_p exp(-\frac{E_a-E_m}{k_BT})$</strong></p><p><strong>包括了生成载流子的活化能的影响</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519110727812.png" alt="image-20230519110727812"></strong></p><p><strong>载流子的“浓度”随温度变化不大</strong></p><h3 id="3-分析"><a href="#3-分析" class="headerlink" title="3.分析"></a><strong>3.分析</strong></h3><ol><li><p><strong>文章亮点在于将可用实验验证的量$\omega_ p$使用起来，它最主要的关系还是和扩散系数D。这样$E_m$就有了，定义的浓度C也有了</strong></p></li><li><p><strong>主要的有用的地方是把跳跃频率从尝试频率中分开了</strong></p></li><li><p><strong>在温度变化过程中，主导的是跳跃频率这一物理量（这个是很明显，不用做实验都可以发现的，因为浓度不变，只有跳跃几率随温度变化）</strong></p></li><li><p><strong>最后的例子说明不了和浓度无关，有可能是浓度增加导致跳跃次数变多，因为跳跃次数是和浓度相关的。不能说明任何问题</strong></p></li><li><p><strong>而且关于浓度系数的计算不是十分认同，很明显，浓度应该有比较大的不同</strong></p></li></ol><ul><li><p><strong>从文章中得到的启发</strong></p><ul><li><p><strong>从Li3YCl6和Li3HoCl6的对比中可以得到，<code>在Li-Cl这一体系中，跳跃频率越大，能垒越低，电导率越高，这三者是统一的。</code>但是跳跃频率越大，并不能说明振动（或者尝试）频率越大，这同先前的-爱-公式并不矛盾（振动频率越大，势垒也越高）。<code>这说明一点，能垒越低的地方，尽管其振动频率比较低，但是跳跃频率却是高的，电导率就更高。</code>对于Li-Cl体系，不应该去找刚性的结构，而是柔性的结构（离子半径更大的结构）。</strong></p></li><li><p><strong>由于Li3HoCl6中Ho的离子半径更大，骨架结构更加柔软，因此可以得到更低的活化能，并且有更大的离子跳跃距离，这是必然的结果，比较意外的是Li3HoCl6的跳跃频率更大，<code>这说明更加柔软的骨架结构尽管尝试频率变小，但是跳跃频率会增加。</code></strong></p></li></ul><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519170204452.png" alt="image-20230519170204452"></strong></p><ul><li><p><strong>一个问题就是，是否在氧化物，硫化物中，都遵循着这一结论（NYSO说明是的）</strong></p></li><li><p><strong>从Li-Cl体系的尝试频率和活化能也能看出，活化能越高，尝试频率也越大</strong></p></li><li><p><strong>由本文可知，在一些体系中，在下式中，$\omega_0$的值越小，后面的乘积越大，并且整体相乘是增加的。Em是减小的，而振动熵并不单调变化。</strong></p></li></ul><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102949980.png" alt="image-20230519102949980"></strong></p><p>​       <strong>怀疑振动熵和晶格振动相关，并且振动熵的变化很小</strong></p><ul><li><p><strong>由Meyer-Neldel 规则，活化能降低，指前因子降低，如果考虑Li-Y-Cl和Li-Ho-Cl</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102056764.png" alt="image-20230519102056764"></strong></p><p><strong>根据本文，$\sigma _0&#x3D;\frac{znq^2}{k_B}\alpha_0^2\omega_pexp(\frac{E_m}{k_BT})$</strong></p><p><strong>$E_m$ 下降时，$\omega_p$ 增加，但是两个相乘根据Meyer-Neldel又是降低的。</strong></p></li></ul></li></ul><ol><li><p><strong>浓度系数变化的根源（感觉应该不变才对）</strong></p></li><li><p><strong><code>没有给出为什么振动频率降低，跳跃频率反而增加</code></strong></p></li><li><p><strong>存在两种博弈，1.前置因子中，尝试频率和其他的博弈，2. 跳跃频率中，尝试频率与其他的博弈</strong></p></li></ol><h2 id="2-Meyer-Neldel规则"><a href="#2-Meyer-Neldel规则" class="headerlink" title="2.Meyer-Neldel规则"></a><strong>2.Meyer-Neldel规则</strong></h2><h3 id="1-跳跃次数和活化能成反比是有限制的"><a href="#1-跳跃次数和活化能成反比是有限制的" class="headerlink" title="1.  跳跃次数和活化能成反比是有限制的"></a><strong>1.  跳跃次数和活化能成反比是有限制的</strong></h3><blockquote><p><strong><code>需要满足一定的前置条件，才能达到上面的推论，而这一前置条件由结构决定</code></strong></p></blockquote><blockquote><p><strong>Rethinking the Design of Ionic Conductors Using Meyer–Neldel–Conductivity Plot</strong></p></blockquote><ol><li><p><strong>随着活化能的降低，前置因子也在降低</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230520100213374.png" alt="image-20230520100213374"></strong></p><blockquote><p><strong>对给定系列的化合物，$\alpha$和$\beta$是常数</strong></p></blockquote></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230520100605086.png" alt="image-20230520100605086"></strong></p><blockquote><p><strong>是$\alpha -\frac{1}{k_BT}$</strong></p></blockquote><p><strong>$\alpha 和\frac{1}{k_BT}$的关系决定了活化能降低能否带来电导率升高，决定能否带来跳跃次数增加  同结构的关系</strong></p><p><strong><img src="/./../%E5%9B%BE%E7%89%87/image-20230520163051407.png" alt="image-20230520163051407"></strong></p><p><strong><del>最终决定的是最下面的式子（这就是焓熵关系。。。白整了）</del></strong></p><p><strong><del>如果振动熵的一连串式子大于活化能，那么活化能越高，相差越大，电导率越高，反之，如果振动熵的式子小于活化能，那么活化能越低，相差越小，跳跃次数越大，离子电导率越高。这样下面两个式子就统一了，下面这两个在说同一件事情。但是这样的结论的一个问题是温度在其中扮演了很重要的角色，因为温度决定了式子的变化，因此要么在实际中结构随温度变化真有一个临界点，要么有一个指数项，取消了温度的影响。</del></strong></p><p><strong><del>wp一定小于w0的啊，肯定有w0的参与。</del></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102949980.png" alt="image-20230519102949980"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230520163653958.png" alt="image-20230520163653958"></strong></p><p><strong><code>跳跃前后熵的变化和跳跃过程中的活化能的关系（是否由结构决定）</code></strong></p><h2 id="3-Meyer-Neldel-rule和焓熵关系"><a href="#3-Meyer-Neldel-rule和焓熵关系" class="headerlink" title="3. Meyer-Neldel rule和焓熵关系"></a><strong>3. Meyer-Neldel rule和焓熵关系</strong></h2><blockquote><p><strong>Thermodynamic Interpretation of the Meyer-Neldel Rule Explains Temperature Dependence of Ion Diffusion in Silicate Glass</strong></p></blockquote><h3 id="1-扩散系数的理论基础"><a href="#1-扩散系数的理论基础" class="headerlink" title="1. 扩散系数的理论基础"></a><strong>1. 扩散系数的理论基础</strong></h3><p><strong>扩散系数                                                                   <img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155102889.png" alt="image-20230522155102889"></strong></p><blockquote><p><strong>$R_0$ 是尝试频率</strong></p></blockquote><p><strong>其中 $\Delta E_a$是两个状态的吉布斯自由能差</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155222366.png" alt="image-20230522155222366"></strong></p><p><strong>因此                                                                            <img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155236983.png" alt="image-20230522155236983"></strong></p><p><strong>a是一个常数</strong></p><p><strong>MNR规则的焓熵表述为</strong> </p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155327270.png" alt="image-20230522155327270"></strong></p><p><strong>其中b是一个常数</strong></p><p><strong>通过定义一个量</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155436229.png" alt="image-20230522155436229"></strong></p><p><strong>可以得到</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230522155448375.png" alt="image-20230522155448375"></strong></p><p><strong>焓熵表述与下述表述等价</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230520100213374.png" alt="image-20230520100213374"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102056764.png" alt="image-20230519102056764"></strong></p><p><strong><code>这里的熵是过渡态与基态的熵变，也就是说，按照这个文章的说法，计算得到的是焓变，而不是真实的活化能。之间相差一个熵变，熵变就成为指前因子的一部分。而上一篇文章还说，焓变分两部分，一部分产生空位，一部分用来跳跃。而测量得到的只是跳跃的焓变即</code></strong></p><p><strong>$\Delta E_a&#x3D;\Delta G&#x3D;\Delta H-T\Delta S&#x3D;\Delta H_1+\Delta H_2-T\Delta S$</strong></p><p><strong><code>我自己的理解：可以暂时不区分焓变的两部分，计算NEB得到的的确没有熵的部分，而测量得到的既然也遵守MNR，那么测量得到的也只是跳跃过程，而不包括熵变，这里的熵是过渡态和基态的熵变，暂时理解为过渡态和基态的振动熵变。</code></strong></p><h3 id="2-焓熵关系是本质"><a href="#2-焓熵关系是本质" class="headerlink" title="2. 焓熵关系是本质"></a><strong>2. 焓熵关系是本质</strong></h3><blockquote><p><strong>通过焓熵关系可以得到上面的离子电导率随活化能变化的关系</strong></p></blockquote><ol><li><p><strong>$b&#x3D;\alpha$  上面的文章也就是在说，通过比较$b和k_BT的大小，可以确定增加电导率的策略$</strong></p><p><strong>b是一个熵与焓变的比例系数 ，有能量的量纲，那么kb的量纲为$ev^2&#x2F;K$</strong></p><p><strong>系数有一个临界点还是很有趣的</strong></p><p><strong>将下式改写</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230519102949980.png"></strong></p><p><strong>得到 $\omega _p&#x3D;\omega_0 exp(E_m(\frac{k_BbT-1}{k_BT}))$</strong></p><p><strong><del>这样似乎就推不出什么情况下w_p的值增加了</del></strong></p></li></ol><p>​     <strong><code>第一篇文章和第二篇文章的含义是相同的：在$b&lt;\frac&#123;1&#125;&#123;k_BT&#125;$时，$E_m$越低，跳跃频率越大，电导率越高，第一篇文章只不过是这一种情况</code>。但是当b &gt; $\frac {1}{k_BT}$时，文章一的结论就不成立了。第一个文章的局限性就是只有在第二个文章成立时，才成立。</strong></p><ol start="2"><li><strong><del>目的一：跳跃次数增加和电导率之间关系的理解，解决，就是焓熵关系的变形</del></strong></li></ol><p>   <strong><u><code>目的二</code>：将结果与晶体结构联系起来，未解决，焓熵关系的系数b与结构的关系</u></strong></p><p>   <strong>目的四：还是认为跳跃次数增加是MNR背后的物理含义 ，但是在焓熵关系描述下，这一规则被弱化了，这种想法是对的</strong></p><p>   <strong><code>目的五</code>：还是试图理解，为什么活化能降低，跳跃次数增加了，需要理解</strong></p><p>   <strong>目的六：发现竞争关系，并且将竞争关系同结构、或者什么变为统一的关系</strong></p><p>   <strong>目前一个新的竞争关系，b和E_m、w_0的竞争</strong></p><p>​      <strong>目的七：跳跃次数增加和a-1&#x2F;k_bT&lt; 0之间有没有关系，有关</strong></p><h2 id="4-推论"><a href="#4-推论" class="headerlink" title="4.推论"></a><strong>4.推论</strong></h2><ol><li><p><strong><code>焓熵系数与 $k_B T$的大小决定了增加活化能，跳跃次数是否增加，离子电导率是否增加。</code></strong></p></li><li><p><strong>问题在于如何直观得理解增加活化能与跳跃次数增加间的关系，与晶格振动的关系，这涉及到熵和吉布斯自由能的变化</strong></p></li><li><p><strong><code>跳跃次数是隐含在焓熵关系中的，当$b&lt;\frac&#123;1&#125;&#123;k_BT&#125;$ 时，活化能越小，跳跃次数越大，电导率越高；当$b&gt;\frac&#123;1&#125;&#123;k_BT&#125;$时，活化能越大，跳跃次数越大，电导率越高</code></strong></p></li><li><p><strong><code>扩散势垒和熵变相关，对一类材料，熵变越大，势垒越大（势垒越大，熵变越大）。这个关系还决定了跳跃次数的增减（跳跃几率），</code></strong></p></li><li><p><strong>对势垒相同的材料，熵增越大，b值越大，跳跃次数越多（对b&lt;kbT和b&gt;kbT都适用）</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230522212936365.png" alt="image-20230522212936365"></strong></p><p><strong>是焓与熵的竞争，熵越大，吉布斯自由能变化量越少，并不是势垒越低越好，还有熵的影响。真实的跳跃是吉布斯自用能势能面的平滑，而不是扩散势垒的平滑。</strong></p><p><strong><code>！！！增加熵是增加离子电导率的一个有效方向</code></strong></p><ol start="7"><li><p><strong><code>$\Delta G_A=\Delta H_A-Tkb\Delta H_A=\Delta H_A(1-Tkb)$ ，如果$b&lt;\frac&#123;1&#125;&#123;k_BT&#125;$ ,$\Delta G&gt;0$ ，反之，小于0</code></strong></p></li><li><p><strong>为什么会有$\Delta G &lt;0$的材料，正常，因为正常是焓在起作用，而不是熵和焓一起。对于b&gt;1&#x2F;kBT的材料，是否存在实验和计算晶格占据点不同的！！！感觉b小于才是正常的，这也是为什么大多数见到的都是活化能越小，电导率越高。计算的都是焓最低的结构。计算中有没有出现在一些点停留比较久而不是能量最低的时候。做一下计算，分子动力学能否考虑熵</strong></p></li><li><p><strong><code>b与结构的关系，以及为什么和b与k_BT的关系会影响到跳跃次数，用语言解释，为什么有焓熵关系</code>。</strong></p></li><li><p><strong>如果知道玻璃化转变温度，就能得到b的值</strong></p></li><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230523091203327.png" alt="image-20230523091203327"></strong></p><p><strong>根据这个式子，要求$\omega _0 &gt;\omega_p$，也就是要求后面的式子小于1，也就是</strong></p><p><strong>$exp(\frac{T\Delta S_m-E_m}{k_BT})&lt;1$</strong></p><p><strong>也就是$T\Delta S_m-E_m&lt; 0 $ ，也就是$\Delta G  $大于0 (可以和第七条连起来)</strong></p><p><strong><code>那么，在$b&gt;\frac &#123;1&#125;&#123;k_BT&#125;$的材料中，$\Delta G$&lt;0，$\omega _0 &lt;\omega_p$，也就是跳跃频率多于尝试频率。问题是这样的材料真实存在，难道跳跃频率不止来源于尝试频率，还有熵驱动</code></strong></p></li><li><p><strong>迁移熵<img src="/./../../%E5%9B%BE%E7%89%87/image-20230523095425635.png" alt="image-20230523095425635"></strong></p></li><li><p><strong>存在两个矛盾，</strong></p><ol><li><strong>吉布斯自由能变化量为负，跳跃频率会高于尝试频率，随着Ea增加，电导率增加</strong></li><li><strong>最新文章计算出的熵居然是负数</strong></li></ol></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230523100827766.png" alt="image-20230523100827766"></strong></p><ol start="14"><li><p><strong><u>为什么扩散到过渡态的过程是熵增的过程？这种熵增和结构的关系</u></strong></p></li><li><p><strong>k_BT是随温度变化的，所以和b的比较并不固定</strong></p></li><li><p><strong><u><code>$b&gt;\frac &#123;1&#125;&#123;k_BT&#125;$ 意味着 $\frac&#123;\Delta H _A&#125;&#123;\frac&#123;\Delta S_A&#125;&#123;k&#125;&#125;&lt; k_BT$，也就是说需要跳跃的势垒除以一个常数小于热激发的能量。或者已经高于玻璃化转变温度了。这个时候还是跳跃吗，就像高压高温下的东西，已经不能说是跳跃了，而是和液体一样流动。统一了高压下近熔化区和离子电导。wp&gt;w0，有些非尝试频率的振动也会引起跳跃</code>,</u></strong></p><p><strong>但是没有完全小于</strong></p></li><li><p><strong>那些反常的材料到底是怎么回事 。离子跳跃只与几种特定的振动模相关和振动熵的联系</strong></p></li><li><p><strong>在田艺帆的高温高压质子电导中，虽然已经没有了空位，但是离子</strong></p></li><li><p><strong>当b&#x3D;1&#x2F;k_BT时，具有相同b值的所有的离子电导相等，扩散系数相交于一点</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230524104714644.png" alt="image-20230524104714644"></strong></p></li></ol><p><strong>高温下熵起作用，低温下，焓起作用。</strong></p><p><strong>20.熵如何与特定的晶格振动支联系起来，为什么是一个熵增的过程，什么样的晶格振动有助于降低b。b与活化能调控效果的关系</strong></p><p><strong>为什么现有的并没有达到水的效果。NYSO的这个关系。</strong></p><ol start="21"><li><strong><u>这种熵和角共享的关系</u></strong></li><li><strong>通过加压测电导率可以很快速的获得b的值</strong></li><li><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230520100605086.png" alt="image-20230520100605086"></strong></li></ol><p><strong>当b&lt; 时，b值越小，e指数上面的括号内差值越大，改变Ea带来的效果越好 ；当b&gt;时，b值越大，改变Ea带来的效果越好</strong></p><p><strong>有熵的项并不影响离子电导率和1&#x2F;T成反比，也就是不影响活化能的计算，但是影响最终离子电导率</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230524140047855.png" alt="image-20230524140047855"></strong></p><p><strong><code>因此，如果要找室温电导率好的，不但要关注现有的结构的电导率，还要看b值大小，有了b值，就可以确定当活化能变为多少时，离子电导率的值大小为多少，定性的进行评估，可以给一类结构制定一个上限。</code>这样可以给一类一类材料进行评估。考虑一类材料在什么温度下有作为固态电解质的潜力，是否适合做。</strong></p><p><strong>问题在于如何获得活化能，这个活化能不是NEB计算的活化能。活化能与晶格振动的关系。</strong></p><p><strong>24.一种材料的b是固定的，不固定的是温度</strong> </p><ol start="25"><li><p><strong><del>如果没有熵的效应，那么通过优化得到的是一系列的平行线，而不会有交点</del></strong></p><p><strong>有了熵的效应，导致相交点不在T–0，而在中间一个点</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230524135356318.png" alt="image-20230524135356318"></strong></p><p><strong>$ln(R)&#x3D;ln(a)-\frac {\Delta H_A}{kT}+b {\Delta H_A}$</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230524135701005.png" alt="image-20230524135701005"></strong></p><p><strong>绘制这样的log图像仍然是可以的，只不过纵轴有b的作用，不同的材料，在纵轴的截距就不同了，否则，所有的截距是相同的。</strong></p><ol start="26"><li><strong>理论上知道系统的活化能，只需要算一个高温温度点就可以了。难点在于活化能的确定</strong></li><li><strong>和指前因子随活化能线性增加是一致的。如果是完美符合MNR关系，那指前因子应该是完美的线性关系，但是实际上大部分并不是。但是对于给一些压强，是这样的。</strong></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525162530034.png" alt="image-20230525162530034"></strong></p><p><strong>说明压强能够很好的表示出结构的特征，大部分并不是严格的线性关系</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230525162724780.png" alt="image-20230525162724780"></strong></p><p><strong>指前因子的其他部分未必是相等的</strong></p><ol start="28"><li><p><strong>$\omega _p&#x3D;\omega_0 exp(E_m(\frac{k_BbT-1}{k_BT}))$  w_p有一个最大值,即T趋近无穷大时，$w_p &#x3D;w_0exp(bE_m)$，可以用来说明离子电导的潜力</strong></p></li><li><p><strong>跳跃次数   $\omega _p&#x3D;\omega_0 exp(E_m(\frac{k_BbT-1}{k_BT}))$</strong></p></li></ol><p>​      <strong>电导率     $\sigma T&#x3D;\frac {nq^2}{k_B}a^2w_p$        可以看出电导率和跳跃次数的变化是相同的（假设每次跳跃距离不变）</strong></p><ol start="30"><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230526153028288.png" alt="image-20230526153028288"></strong>  </p><p><strong><code>这是来自于自己的结论。</code></strong></p><p><strong>氧化物的交点都比较大，因为单个声子的能量比较大，MEE模型中的熵就小（排列组合少），b值小，T_MN就大，对氧化物，软化晶格，能比软化硫化物晶格获得更大的收益，软化后的单个声子能量就小了，动力学熵增加（是否也需要一个度呢）</strong></p><p><strong>是否软化晶格的度（晶格能被软化的程度）与结构构型、绳子带心、这些有关，能证明这件事很有意义</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918111106469.png" alt="image-20230918111106469"></strong></p><p><strong>Phonon–Ion Interactions: Designing Ion Mobility Based on Lattice Dynamics</strong></p></li><li><p><strong>通过得到b值，可以粗略估计什么温度下达到什么样的电导率需要什么样的活化能</strong></p></li></ol><h2 id="5-目前关注问题"><a href="#5-目前关注问题" class="headerlink" title="5.目前关注问题"></a><strong>5.目前关注问题</strong></h2><ol><li><p><strong>为什么有焓熵关系（熵变为什么随焓变化，是什么熵，为什么会在过渡态增加，跳跃次数）（组合熵）</strong></p></li><li><p><strong>b与结构的关系(关系到不同种类的结构，角共享，晶格振动)，非谐效应在其中起到什么样的作用</strong></p></li><li><p><strong>为什么是一个熵增的过程，这种熵增不同结构类型间的差异，如何判断 （组合熵，组合种类）</strong></p></li><li><p><strong>能为寻找高离子电导率材料带来什么启发（应该寻找哪种材料，是否可以据此给出一个预测的最高离子电导率值，关系到同一种类结构的调控，推论30，提升离子电导率，找什么系列）</strong></p></li><li><p><strong>温度升高，更容易跳过去，如何从能量上和振动上分别理解，吉布斯自由能是不同结构间的比较，振动模型是$k_BT$。表象是振动，内涵是能量吗</strong></p><p> <strong>温度升高，离子振动频率是不变的（晶格体积不变时）或者频率降低（考虑热膨胀）</strong></p><blockquote><p><strong>吉布斯自由能的差值代表了基态和过渡态的能量差，也就是势垒，温度升高，振动熵的部分也随之增加，那么势垒本身是在降低的，但是存在一个问题，现在的计算考虑的只是焓的变化，而不考虑振动熵的影响。<code>振动熵是比原来理解中更加重要的，因为表象是振动，内涵是能量</code></strong></p><p><strong>另一方面，离子振动的能量$k_BT$也在增加，跨越势垒的能力变大$e^\frac{-E_a}{k_BT}$变大。但是，存在一个问题，只要活化能$E_a$不等于0，那么就是一个跳跃几率，是跳跃模型。活化能为0，才意味着是熔化，是自由的流动</strong></p><p><strong>晶格振动方面，温度越高，振动频率越大，振幅应该是固定的吗</strong></p></blockquote></li><li><p><strong>对同一个结构，温度升高，在体积不变的情况下，振动模式频率没有变化（力常数没有变化），但是声子在同一个振动模式上的数量增加了（玻色爱因斯坦分布）；这样导致振幅增加了，在振动上看，更加容易跳过去。声子在某个频率上的增加，意味着这一模式的振幅的增加。</strong></p></li><li><p><strong>振动熵确实会随着温度增加而变化！！</strong></p></li><li><p><strong>对同一个结构，不同温度下的焓熵关系是固定的吗，因为焓是随温度不变的，熵是随着温度增加而改变的，那么不同温度下，必然存在不同的焓熵关系了。</strong></p><p> <strong><code>并不对，真实活化能是变化的，但是在公式里不存在$T\delta S$ 项，因此显示在图像中的仍然只是表观的</code>$\delta H$</strong></p></li><li><p><strong>同一个结构中，不同的元素类型（元素配比）会对振动熵产生什么影响；结构的振动熵和化学组分的关系。</strong></p></li><li><p><strong>加入尝试频率、单次跳跃距离</strong></p></li><li><p><strong>如何跳跃的</strong></p></li><li><p><strong>振动熵与组分的关系，振动熵与结构的关系</strong></p></li><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230526200356585.png" alt="image-20230526200356585"></strong></p><pre><code>这里的$\Delta G_A $是两个构型的吉布斯自由能差，应该要包括通常零温下计算不包括的振动能和振动熵，&gt; 振动能、振动熵&gt;&gt; 构型能量差</code></pre></li><li><p><strong>电导率公式中的Ea就是$\Delta H$,考虑熵之后因为分母也有T，所以温度的影响被忽略了。</strong></p><pre><code> 像那种发生高温相变的结构，$\Delta H$发生变化，但是还是大于0的，这和自己理解的高温下占据点的变化是不同的。  问题是当$\Delta G$&lt;0时，会发生什么，因为随着温度升高，必然存在这样的现象，那么变化之后，还如何考虑离子的跳跃过程，如何解释LiPSClBr,自由能对离子的影响比较直观，但是熵就很不明确。  实验中到底测量的是什么，是如何测量的，实验原理是什么</code></pre></li><li><p><strong>能否通过结构原型的特征（振动特征或者其他的特征）给出结构的b值（和迁移离子的低能声子模、晶格框架的特定振动模、非谐效应应该存在唯一的关系，振动本身包含了晶格的结构信息、也就是孔径的大小）</strong></p></li><li><p><strong>这种焓熵关系在协同扩散中的表现是什么样的</strong></p></li><li><p><strong>对相同的$\Delta H$,$\Delta S$越小，b越小,$T_{MN}$越大，降低活化能带来的室温离子电导率收益越大。b小这意味着，单个声子的能量越大的材料，降低活化能带来的好处更大</strong></p></li></ol><h2 id="6-当前关注的因素"><a href="#6-当前关注的因素" class="headerlink" title="6.当前关注的因素"></a><strong>6.当前关注的因素</strong></h2><ol><li><p><strong>从化学角度讲，软硬酸碱理论可以判断结构的稳定性</strong></p><p><strong>另一方面，如果根据软硬酸碱理论，Li、Na、K、都是硬碱，而硫化物比氧化物更加软，也可以解释为什么硫化物比氧化物的离子电导率更强，因为硬酸对硬碱，软酸对软碱，Li和较软的硫化物的成键是更弱的，而和更硬的氧化物成键是更强的，</strong></p><p><strong>相比之下，Na比Li更软，更软的碱更适合匹配更硬的氧化物，这样结合更加不紧密，离子电导率更高。问题在于Na是否是足够软，能够使得氧化物比硫化物更占据优势（从电负性上考虑，确实也是这样，硫的电负性更低，对锂离子的作用更弱，而氧的电负性更高，这样的对比下，电负性是更根本的的，软硬酸碱是更容易用来做问题的）</strong></p></li><li><p><strong>我仍然相信晶格振动是最终的描述离子跳跃的答案（除了协同扩散，直觉上已经不是跳跃的模型了），晶格振动的简谐、非谐如何刻画结构的离子电导率的特征</strong></p><p><strong>是否是一些文章中探讨的 框架的特定振动模式或者跳跃离子的特定范围振动模式起到主要作用</strong></p></li><li><p><strong>还有爱因斯坦关系中表述的，势垒越大，振动的振幅越小，频率越高，与晶格振动应该是一脉相承的</strong></p></li><li><p><strong>还有之前提到的，势垒越低，振动频率减小，有效的跳跃频率反而增加了，这与我现在了解的MNR rule的结果一致，但是原理不同（现在的解释认为MNR应该具有高的势垒才能触发动力学过程中的动力学熵，明显是不同的）</strong></p></li><li><p><strong>成键、极化对晶格振动的影响</strong></p></li><li><p><strong>结构特征扮演了什么角色，硫化物和氧化物需要的结构特征现在看是不同的，从MNR角度考虑，单个激发得能量越小，激发过程中的熵越大，不知道与结构特征是否有直接的关系</strong></p></li><li><p><strong>对于多元化合物，鲍林规则也有一些比较经验具体的规则指定特定的多面体拼接方式，这与软硬酸碱理论是不是有冲突，还是统一的（比如倾向于共角而不是共面、共线的理论）</strong></p></li><li><p><strong>晶格软化也有具体的文章来讨论，怎么把晶格振动和离子极化性这样物理和化学的概念链接起来</strong></p></li></ol><p><strong>结构-势垒-振动-跳跃-离子半径-极化（晶格、离子）最大的问题是，这些应该是统一的，而不是各自为战</strong></p><ol start="9"><li><p><strong>还有一些新的振动模式，能否纳入到相同的理论框架中，这一点值得怀疑</strong></p><p><strong>增加离子数目的作用，也仍旧无法给出完整的定性的理论描述</strong></p></li><li><p><strong>对于最终的离子电导率的调控，像太极一样的方式是必然的，而不会是头痛医治头，脚痛医治脚的方式来解决痛点。</strong></p></li><li><p><strong>高温还是低温，对材料本身是并没有区别的，有必要详细考虑温度对特定晶格结构的作用，为什么随着温度增加，不同结构的电导率增长模式是不同的，这可能涉及到了阿伦尼乌斯公式中势垒的问题，但是阿伦尼乌斯公式只是一个经验公式，它在振动模型中的底层理论是什么样子的，这个也会是一个突破口</strong></p><p><strong>温度对极化性、或者什么本质东西的作用（氧化物的离子电导率在高温下是并不弱的）</strong></p></li><li><p><strong>跳跃的离子本身和框架是强耦合还是弱耦合的（强耦合就是不同热力学状态间的变化，过渡态理论？）</strong></p></li><li><p><strong>是否软化晶格的度（晶格能被软化的程度）与结构构型、声子带心、这些有关，能证明这件事很有意义，能够串联</strong></p></li><li><p><strong>电子-成键  离子-晶格动力学</strong> </p><p><strong>静态-热力学 势垒、动态-动力学 动力学过程</strong></p><p><strong>强耦合系统</strong></p></li><li><p><strong>阿伦尼乌斯公式的起源：跳跃的概率取决于能跳跃的微观态占总微观态的比例，也就是只要到了能跳跃的微观态，就能跳跃，在宏观上上帝不掷色子，表观的结构上和隐含的能量上</strong></p></li></ol><p><strong>物理机理-调控材料</strong></p><h1 id="3-焓熵补偿关系"><a href="#3-焓熵补偿关系" class="headerlink" title="3. 焓熵补偿关系"></a><strong>3. 焓熵补偿关系</strong></h1><ol><li><p><strong>焓增加的过程也是熵增加的过程（按照对这种熵的理解，熵并不指的结构的熵，而是对应于$E_a$的组合熵)</strong></p></li><li><p><strong>仅根据化学组分计算振动熵和振动能</strong></p></li></ol><blockquote><p><strong>How Chemical Composition Alone Can Predict Vibrational Free Energies and Entropies of Solids</strong></p></blockquote><ol><li><p><strong>焓熵关系可以理解为：在做NEB时，移动一个离子到过渡态，能量上过渡态的能量大于平衡态，但是在移动过程中也有熵的增加，因为真实的是有温度的，而不是0K 。焓熵关系也就是在构型的能量增加时，熵也在增加。</strong></p><p><strong><code>一个问题就变成：有没有办法计算包括振动能、振动熵、高温下的NEB</code></strong></p><p><strong><code>也说明一件事，在温度下，有可能会发生离子向吉布斯自由能增大的方向移动。而吉布斯能小的位置反而更稳定。这肯定不对吧，因为离子总是要呆在能量更低的位置，说明有可能高温下和低温下离子的位置不同</code>是不是被最开始的文章误导了，不会存在b&gt;1&#x2F;k_BT的情况。那那篇文章是为什么呢，为什么实验上能做出那样的结果。</strong>   </p><p><strong><code>吉布斯能和这种组合熵没有关系</code></strong></p><p><strong>实验上做的肯定是最真实的，都考虑了</strong></p><p><strong>随着温度增加，离子的最稳定位点会发生改变。因此在构建结构时需要考虑温度的影响</strong></p><p><strong>焓熵关系不仅可以用在算离子跃迁，也可以用在结构优化、平衡的各个方面。</strong></p><p><strong>令人困惑的是为什么高温高压下的实验文章，跨过b点时没有什么斜率的变化呢。实验测的是焓值？而不是吉布斯自由能值</strong></p><p><strong>经常观察到的，离子电导率斜率的变化，是否和这个有关。</strong></p><p><strong>构型熵也应该考虑</strong></p><p><strong>分子动力学和热力学的巨大鸿沟</strong></p><p><strong><code>为什么吉布斯自由能增加的非自发过程是可以进行的。</code>确实是有问题的</strong></p><p><strong>第一性原理分子动力学中，不同温度下的结构能量不同</strong></p></li><li><p><strong>晶格振动能和振动熵：晶格振动能实际上包含在对温度的考虑中了，温度升高，振动能并不会带来能量序列的变化。没有考虑到的是振动熵，振动熵并没有考虑在温度之中。</strong></p><p><strong>考虑温度能否带来能量序列的变化，为什么会带来变化 ，因为考虑晶格振动能和熵吗</strong></p></li></ol><p>​      <strong>温度和晶格振动能得关系是啥</strong></p><ol start="3"><li><p><strong>高通量就是指批量化的计算，计算速度并不增加</strong></p></li><li><p><strong>振动熵和振动能和化学组分具有高的相关性，给定化学组分，可以定性评估振动熵。</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230529171309781.png" alt="image-20230529171309781"></strong></p><p>​       <strong>振动频率的算数平均和加权平均</strong></p><h2 id="2-晶格振动与MNR关系（一篇综述）"><a href="#2-晶格振动与MNR关系（一篇综述）" class="headerlink" title="2.晶格振动与MNR关系（一篇综述）"></a><strong>2.晶格振动与MNR关系（一篇综述）</strong></h2><blockquote><p><strong>Phonon–Ion Interactions: Designing Ion Mobility Based on Lattice Dynamics</strong></p></blockquote><ol><li><p><strong>考虑非对称的跳跃势垒</strong></p></li><li><p><strong>结构因子 z 包括了关联系数H_R</strong> </p></li><li><p><strong>测量的势垒事实包括两部分，缺陷的形成焓和跳跃过程中的焓，通常 忽略了缺陷的形成焓</strong></p></li><li><p><strong>改性方法：</strong></p><blockquote><p><strong>静态</strong></p><ol><li><strong>三维扩散路径</strong></li><li><strong>降低扩散势垒 （替代、应变改变电荷间相互作用、迁移机制、平滑势能面、传导路线的几何形状）</strong></li><li><strong>异价掺杂  （改变晶格尺寸、改变载流子浓度）</strong></li></ol><p><strong>动态</strong></p><ol><li><strong>软化的、极化性强的阴离子亚晶格（降低键的极性，弱化移动离子和阴离子的成键相互作用，进一步降低活化能</strong></li></ol></blockquote></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230602151435463.png" alt="image-20230602151435463"></strong></p><p><strong>爱因斯坦模型中，谐振子振幅和爱因斯坦频率的关系</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230602151705928.png" alt="image-20230602151705928"></strong></p><h3 id="3-1-离子极化与离子电导（非谐）"><a href="#3-1-离子极化与离子电导（非谐）" class="headerlink" title="3.1 离子极化与离子电导（非谐）"></a><strong>3.1 离子极化与离子电导（非谐）</strong></h3><p> <strong>离子的跳跃与非简谐性相关，<u>而非简谐性与离子极化能力相关</u>。</strong></p><p><strong>离子在一个简谐势中振动的图像忽视了离子的极化，离子极化指的是形成瞬时偶极子的能力，在元素中可以用元素尺寸和带电荷代表。与Pearson的强&#x2F;弱 酸碱的概念对应</strong></p><p><strong>在考虑成键相互作用时，可看作电负性差异或者键的极性，通过改变极性可以改变共价键的强度。较少极化的阳离子和较多极化的阴离子将最终形成更多的共价键相互作用，而较多极化的阳离子和较少极化的阴离子则表现出极性的离子相互作用</strong></p><p><strong>低频区 离子极化对晶格振动起到重要作用</strong></p><p><strong><code>通过增加成键的共价性，降低离子性，可以降低成键强度，降低活化能，增加离子跳跃频率</code></strong></p><p><strong>离子的跳跃代表非谐事件</strong></p><h3 id="3-2-德拜频率（尝试频率）将软化的晶格与低的活化能联系起来"><a href="#3-2-德拜频率（尝试频率）将软化的晶格与低的活化能联系起来" class="headerlink" title="3.2 德拜频率（尝试频率）将软化的晶格与低的活化能联系起来"></a><strong>3.2 德拜频率（尝试频率）将软化的晶格与低的活化能联系起来</strong></h3><p><strong>尝试频率与活化能的关系：</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230602160643922.png" alt="image-20230602160643922"></strong></p><p><strong>尝试频率与特定声子模式 （尝试频率与德拜频率）</strong></p><p><strong>德拜频率与声速测量相关联。</strong></p><h3 id="3-3-将特定声学支与活化势垒联系起来"><a href="#3-3-将特定声学支与活化势垒联系起来" class="headerlink" title="3.3 将特定声学支与活化势垒联系起来"></a><strong>3.3 将特定声学支与活化势垒联系起来</strong></h3><p><strong>德拜频率的测量完全忽视了光学声子对材料的影响</strong></p><p><strong>不同材料中，对尝试频率贡献的晶格振动模式是不同的</strong></p><h2 id="3-迁移熵的具体形式"><a href="#3-迁移熵的具体形式" class="headerlink" title="3.迁移熵的具体形式"></a><strong>3.迁移熵的具体形式</strong></h2><blockquote><p><strong>FREQUENCY FACTORS AND ISOTOPE EFFECTS IN   SOLID STATE RATE PROCESSES</strong></p></blockquote><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619161109340.png" alt="image-20230619161109340"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619161124079.png" alt="image-20230619161124079"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619161139047.png" alt="image-20230619161139047"></strong></p><p><strong><code>$v^*$是有效频率</code></strong></p><p><strong>在之前的计算中，一直认为$v*e^{\Delta S&#x2F;k_BT}$是常数</strong></p><p><strong><code>对于同一种材料不同的温度点，这确实是一个常数，因为不同温度下鞍点和平衡位置处的晶体结构没有变化，因此这个值也没有变化，</code></strong></p><p><strong><code>值得注意的是，焓熵关系中的熵并不是振动熵的变化，而是和振动相关的，鞍点和平衡点熵的变化。</code></strong></p><p><strong>在不同材料中，会得到不同的有效频率</strong></p><p><strong><code>目前明确了与振动相关的熵的含义，下一步需要明确的是这个熵与活化能之间的关系。</code></strong></p><p><strong>maybe可以考虑非谐</strong></p><p><strong><code>重要的一点是直接定义出了尝试频率的值！！！</code></strong></p><p><strong>给出了答案：这里的熵是什么、为什么是熵增的过程（虽然还没看懂）、熵与振动的关系</strong></p><h2 id="4-焓熵补偿关系的来源-和晶格振动"><a href="#4-焓熵补偿关系的来源-和晶格振动" class="headerlink" title="4.. 焓熵补偿关系的来源 和晶格振动"></a><strong>4.. 焓熵补偿关系的来源 和晶格振动</strong></h2><blockquote><p><strong>Multi-excitation entropy: its role in thermodynamics and kinetics</strong></p></blockquote><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819155311822.png" alt="image-20230819155311822"></strong></p><p><strong>晶格振动中的声子代表了离子跃迁吸收的能量，因此，晶格振动和活化能也是密不可分的，这里的熵是动力学过程中的熵，而不是热力学上的熵</strong></p><p><strong><code>一定注意区分，这里指的是动力学过程，而不是热力学过程</code></strong></p><p><strong><code>多激发熵的概念是热力学中不能得到的</code></strong></p><h3 id="section-2"><a href="#section-2" class="headerlink" title="section 2"></a><strong>section 2</strong></h3><ol><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819155655619.png" alt="image-20230819155655619"></strong></p><p><strong>其中w的含义是能够导致同一个宏观热力学状态的不同的微观状态的数量。对于微观粒子，这一图像是没有含义的，因为对于微观粒子，处在什么能级上是确定的（不懂这句话）</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819160116757.png" alt="image-20230819160116757"></strong></p><p>​      <strong>对于热力学有比较好的描述，但是对于动力学过程并不完善，动力学过程中，很多现象是热激活的，遵循阿伦尼乌斯公式</strong></p><p> <strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819160355348.png" alt="image-20230819160355348"></strong></p><p>​       <strong>还有一些其他的理论（WLF 1955）</strong></p><ol start="2"><li><p><strong>二十世纪化学<code>动力学</code>在稳步发展</strong></p><p><strong>势垒和化学反应需要跨过的的过渡态相关</strong></p><p><strong>势垒的大小对应初态与过渡态的<code>热力学</code>自由能差</strong></p><p><strong>过渡态理论：</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819161327126.png" alt="image-20230819161327126"></strong></p></li></ol><p>​                           <strong><code>其中的熵可以解释为导致反应发生的状态数与总的状态数的比值</code></strong></p><blockquote><p><strong>能否用热力学微观状态数的观点解释多激发熵的含义</strong></p><p><strong>个人理解，<code>不能完全用势能面上的移动来理解动力学中的问题，比如势能用势能面的起伏简单地表示</code>，在微观下势能面的变化是不能被忽视的</strong></p><p><strong>跳跃过程包括两部分熵，<code>一部分是初末态的能量差中的熵变，另一部分来源于动力学过程中的熵</code>。(化学家的看法)</strong></p></blockquote><ol start="3"><li><strong>如果活化能远大于声子的能量，那么要使这个过程发生，要求有多个激发（声子）的参与。（根据玻色爱因斯坦分布，温度越高，声子数越多，熵越大？）猜测多激发熵应该是如何获得这么多的声子的过程，而不是过程后的振幅增加这一个结果</strong></li></ol><p>​       <strong>有大量的方式去收集大量的激发，这会带来熵</strong></p><ol start="4"><li><p><strong>对动力学过程中的熵忽略的原因是难以计算</strong></p><p><strong>强耦合</strong></p></li></ol><h3 id="section-4"><a href="#section-4" class="headerlink" title="section 4"></a><strong>section 4</strong></h3><ol><li><strong>补偿关系，等速规则（某一个T处值相等），Meyer-Neldel rule</strong></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619211216763.png" alt="image-20230619211216763"></strong></p><p><strong>最早在1920s报道</strong></p><p><strong>1937年 Meyer Neldel用于描述无序材料中的传导过程</strong></p><p><strong>1990s，化学家们把这种动力学上的关系转换到热力学上</strong></p><p><strong>一个单位转换表</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230619212011552.png" alt="image-20230619212011552"></strong></p><ol start="2"><li><strong>化学家们认为这种规则由熵导致，其原因在于</strong></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230819165652131.png" alt="image-20230819165652131"></strong></p><p><strong>在这样的Eyring 方程中，熵是自然而然存在的。只不过，现在看，这种熵是只在动力学过程中存在的</strong></p><ol start="3"><li><p><strong><code>多激发熵的存在必然会导致热力学上活化能的含义的变化，并且导致了活化能数值的改变</code></strong></p></li><li><p><strong><code>存在熵变、焓变为负数的情况</code></strong></p></li><li><p><strong>在离子扩散的数据中，高的活化能更能表现出MNR rule</strong></p></li><li><p><strong>figure 7 有些异常</strong></p></li><li><p><strong>MNR的存在是十分广泛的，并不局限在离子跳跃的过程中（必要条件是由热激发的）</strong></p></li><li><p><strong>利用场效应可以在单个半导体样品中观察到补偿效应。通过改变压力，也可以在单个材料中观察到补偿效应。在地质学中存在作用</strong></p></li><li><p><strong>出现MNR的条件在于活化能相比系统和温度的激发足够大</strong></p></li><li><p><strong>对于这一规律的真实性存在一些争议，本文通过理论认为MNR必然存在</strong></p></li></ol><h3 id="section-5-核心"><a href="#section-5-核心" class="headerlink" title="section 5(核心)"></a><strong>section 5(核心)</strong></h3><h4 id="5-1-各种表象模型"><a href="#5-1-各种表象模型" class="headerlink" title="5.1 各种表象模型"></a><strong>5.1 各种表象模型</strong></h4><ol><li><p><strong><code>如果能垒$\Delta E$ 比$hw/2\pi$和$k_BT $都大很多，那么需要许多激发的组合才能使得跨越势垒的事件发生</code></strong></p></li><li><p><strong>当需要大量的激发组合来克服势垒时，有很多种组合的方式</strong></p><blockquote><p> <strong>这取决于单个激发的大小和势垒的大小，<code>单个激发越小，势垒越大，那熵越大</code></strong></p><p><strong>对应到晶格振动中，如果对于相同的势垒，单个激发越小， 那么熵越大，</strong></p><p><strong>$\Delta G$ 越小，那么单个激发越小的一类材料，越有利于扩散</strong></p><p><strong><code>这样可以用来对比不同结构原型的材料，这很重要</code></strong></p></blockquote></li><li><p><strong><code>MEE(多激发熵、活化熵)导致当活化能增加时，并不会导致活化过程的概率必然降低</code></strong></p></li><li><p><strong>机械模型</strong></p><ol><li><strong>1949 指前因子与空位熵相关</strong></li><li><strong>1950 $T_{iso}$对应一个局部融化或者局部无序的温度</strong></li><li><strong>多激发熵的概念使得MNR规则摆脱了对结构细节的依赖敏感性，而变成一个通用的模型</strong></li><li><strong>1949年的空位熵模型也说明活化熵与系统的基本性质相关，系统的基本性质会导致不同的活化熵，因此获得活化熵只需要考虑系统的基本性质</strong></li></ol></li><li><ol><li><strong>1957 激发熵与<code>活化体积</code>的关系（压力）</strong></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230820122623051.png" alt="image-20230820122623051"></strong></p><blockquote><p><strong>$\alpha_p$ : 体积膨胀等压系数</strong></p><p><strong>$\beta$ : 等温压缩率</strong></p></blockquote><ol start="2"><li><p><strong>1958 活化体积与活化能（$\Delta H$ )的关系 （现象学公式）</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230820123121674.png" alt="image-20230820123121674"></strong> </p><blockquote><p><strong>k ：一个常数</strong></p></blockquote></li><li><p><strong>1960  <img src="/./../../%E5%9B%BE%E7%89%87/image-20230820123216494.png" alt="image-20230820123216494"></strong></p></li></ol></li><li><p><strong>还有一些不以熵为基础的讨论模型</strong></p></li></ol><h4 id="5-2-多激发熵模型"><a href="#5-2-多激发熵模型" class="headerlink" title="5.2 多激发熵模型"></a><strong>5.2 多激发熵模型</strong></h4><ol><li><p><strong>1960 年 ，Miller-Abrahams近似指出低能的过程的发生依赖于所需能量大小的声子的湮灭，其中低能的声子没有作用，高能的声子湮灭的概率随能量呈指数下降</strong></p><p><strong>低能过程中，Miller–Abrahams (1960) approximation 成立，即需要通过声子湮灭来促使过程发生。但是当所需能量要高于声子的能量时，就无法通过单个声子湮灭实现了（声子湮灭的含义，为了发生需要减小振幅？）</strong></p><p><strong><code>1974年 ， Mott  $T^&#123;1/4&#125;$  规则对于低温下无序材料的跳跃适用</code></strong></p><p><strong><code>1982 n个声子的组合方式包含在激发态的态密度</code></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821143837475.png" alt="image-20230821143837475"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821143859933.png" alt="image-20230821143859933"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821143912580.png" alt="image-20230821143912580"></strong></p><p><strong>1983 Khait short-lived large energy fluctuations</strong> </p><p><strong>1987 化学上同样提出指前因子的变化来源于多个激发的组合</strong></p><p><strong>1990 本文作者 熵的概念</strong></p></li><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821145520660.png" alt="image-20230821145520660"></strong></p><blockquote><p><strong>其中n指的是需要穿越势垒所需要的激发的数量</strong> </p><p><strong>hw是激发的平均能量</strong></p></blockquote><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821145814028.png" alt="image-20230821145814028"></strong></p><blockquote><p><strong>玻尔兹曼熵，后面一项是方案数量</strong></p></blockquote><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230821145947626.png" alt="image-20230821145947626"></strong></p><blockquote><p><strong>满足限定条件下，使用stirling近似得到式子</strong></p><p><strong><code>这里有疑问，怎么推也推不过去</code></strong></p></blockquote></li><li><p><strong>1996 已经预言和观测到关联的运动</strong></p><p><strong>1982  熵项可以精确得到</strong></p></li></ol><h4 id="5-3-适用范围"><a href="#5-3-适用范围" class="headerlink" title="5.3 适用范围"></a><strong>5.3 适用范围</strong></h4><ol><li><strong>活化能要足够大于激发的能量和$k_BT$</strong></li></ol><h4 id="5-4-过渡态理论和长程的电子输运"><a href="#5-4-过渡态理论和长程的电子输运" class="headerlink" title="5.4 过渡态理论和长程的电子输运"></a><strong>5.4 过渡态理论和长程的电子输运</strong></h4><h3 id="section-6"><a href="#section-6" class="headerlink" title="section 6"></a><strong>section 6</strong></h3><p><strong>关于补偿关系的其他理论解释-与熵无关</strong></p><ol><li><p><strong>费米能移动的理论</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230831164544200.png" alt="image-20230831164544200"></strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230831164554964.png" alt="image-20230831164554964"></strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230831164603864.png" alt="image-20230831164603864"></strong></p><ol start="2"><li><strong>活化能的e指数分布带来MNR</strong></li><li><strong>竞争过程</strong></li></ol><h3 id="section-7"><a href="#section-7" class="headerlink" title="section 7"></a><strong>section 7</strong></h3><p><strong>活化熵&#x2F;多激发熵模型的证据</strong></p><ol><li><strong>分子动力学模拟FCC金属表面的扩散，并不存在dos或者e指数分布，但是MNR规则自然而然地出现，后续计算认为必定是由于MEE模型</strong></li></ol><h3 id="section-8"><a href="#section-8" class="headerlink" title="section 8"></a><strong>section 8</strong></h3><p><strong>关于活化能较低的情况下MNR仍然成立但是MEE model无法解释</strong></p><ol><li><strong>在活化能比较小的情况下，MNR规则并不成立？</strong> </li><li><strong>作者认为只有在高的活化能之下才能观察到MNR，在低活化能下无法观察到MNR规则的存在</strong></li></ol><h3 id="section-9"><a href="#section-9" class="headerlink" title="section 9"></a><strong>section 9</strong></h3><p><strong>活化熵带来的结果</strong></p><ol><li><p><strong>多一个指数因子项，不同的理论解释这一指数因子的来源是不同的</strong></p></li><li><p><strong>当存在一个大的活化能时，会影响载流子在不同能级上的分布，分布会增加一个指数项</strong></p></li><li><p><strong>当考虑到单粒子的态密度的分布时，如果存在较大的活化能，那么活化熵的指数因子和态密度的指数分布是相同的含义</strong></p></li></ol><h3 id="section-10"><a href="#section-10" class="headerlink" title="section 10"></a><strong>section 10</strong></h3><p><strong>激发的总熵</strong></p><h4 id="10-1-高于等速温度的系统的行为"><a href="#10-1-高于等速温度的系统的行为" class="headerlink" title="10.1 高于等速温度的系统的行为"></a><strong>10.1 高于等速温度的系统的行为</strong></h4><ol><li><p><strong>弱耦合下，在靠近$T_{iso}$的区域MNR失效</strong></p><p><strong>强耦合下</strong></p></li></ol><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230915160306025.png" alt="image-20230915160306025"></strong></p><p>​      <strong>只有当$\Delta S_B$   （系统本身的熵为负数时，才会发生阿伦尼乌斯曲线相交于$T_{iso}$的情况，因为</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230915160652712.png" alt="image-20230915160652712"></strong></p><p>​       <strong>如果大于0，就不存在活化能$\Delta G$了</strong></p><p>​       <strong>低耦合常数对应大的$T_{iso}$  大耦合常数对应小的</strong></p><h2 id="5-高压中发现的反常现象-日本人的讲座中关于反钙钛矿的研究"><a href="#5-高压中发现的反常现象-日本人的讲座中关于反钙钛矿的研究" class="headerlink" title="5.高压中发现的反常现象&#x2F;日本人的讲座中关于反钙钛矿的研究"></a><strong>5.高压中发现的反常现象&#x2F;日本人的讲座中关于反钙钛矿的研究</strong></h2><p><strong>随着压力升高活化能反而降低</strong></p><blockquote><p><strong>Superionic iron oxide–hydroxide in Earth’s deep  mantle</strong></p></blockquote><p>高压下的元素电负性和化学硬度都降低了，是不是可以据此讨论高压下的元素扩散的问题</p><p>原子：半径、质量、价电子</p><h1 id="4-晶格动力学与超离子导体"><a href="#4-晶格动力学与超离子导体" class="headerlink" title="4. 晶格动力学与超离子导体"></a><strong>4. 晶格动力学与超离子导体</strong></h1><h2 id="1-晶格振动与键极性的关系"><a href="#1-晶格振动与键极性的关系" class="headerlink" title="1.晶格振动与键极性的关系"></a><strong>1.晶格振动与键极性的关系</strong></h2><blockquote><p><strong>Lattice Dynamics and Bond Polarity of Be-Chalcogenides A New Class of II±VI Materials</strong></p></blockquote><h2 id="2-快离子导体的低热导率与离子电导率的关系—非谐"><a href="#2-快离子导体的低热导率与离子电导率的关系—非谐" class="headerlink" title="2. 快离子导体的低热导率与离子电导率的关系—非谐"></a><strong>2. 快离子导体的低热导率与离子电导率的关系—非谐</strong></h2><blockquote><p><strong>Extreme phonon anharmonicity underpins superionic diffusion and ultralow thermal conductivity in argyrodite Ag8SnSe6</strong></p></blockquote><ol><li><strong>超离子材料通常具有较低的热导率</strong></li><li><strong>和其他的超离子中声子的作用有什么不同，是递进关系吗，还是平行的</strong></li><li><strong>给结构的设计能带来什么样的启示呢，同结构的什么特征相关</strong></li></ol><h2 id="3-综述：晶格动力学角度的超离子导体"><a href="#3-综述：晶格动力学角度的超离子导体" class="headerlink" title="3. 综述：晶格动力学角度的超离子导体"></a><strong>3. 综述：晶格动力学角度的超离子导体</strong></h2><blockquote><p><strong>Phonon–Ion Interactions: Designing Ion Mobility Based on Lattice Dynamics</strong></p></blockquote><hr><ul><li><p><strong>考察超离子导体中的晶格振动，可以有不同的视角</strong></p><ul><li><strong>把所有的原子的振动当作一个整体来考</strong></li><li><strong>把超离子导体中的原子分为两个部分，一个是移动的离子，一个是其他原子组成的结构框架，其中移动的离子和刚性的框架是强耦合的</strong></li></ul></li><li><p><strong>对于超离子导体中的晶格振动的描述，依附在特定的结构框架上，同一晶格框架中，晶格振动应该有相似性，具有相似高电导率的不同晶格框架，其晶格振动也应该存在相似性。晶格振动应该是描述离子运动的根本特征</strong></p><p><strong>与之对应的是化学中的鲍林规则等对多面体晶体结构的结构描述</strong></p></li><li><p><strong>晶格振动的整体所有分支或特定分支的作用的考虑是不同的，需要把特定的分支与晶体的特定结构结合</strong></p></li></ul><hr><p><strong>超离子导体的应用：引文4-8</strong></p><ul><li><strong>理论上可以对一个静态的结构构建出一个二维的能量山峰图</strong></li></ul><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918151013994.png" alt="image-20230918151013994"></strong></p><p>​          <strong>这里的z值中包括了关联离子跃迁的Haven ratio系数等</strong></p><ul><li><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918151154441.png" alt="image-20230918151154441"></strong></li></ul><p>​        <strong>增加阴离子的极化能够增加晶格的软度，增加离子电导率，从化学的角度也可以理解，软硬酸碱理论告诉我们，与锂离子这种硬离子成键的离子越软，成键越不稳定，应该是更利于运动</strong></p><p>​        <strong>对于与软离子成键的软离子（共价键）其成键是稳定的，这类材料的晶格是什么样的，软还是硬？</strong></p><ul><li><p><strong>爱因斯坦关系</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918151831254.png" alt="image-20230918151831254"></strong></p></li></ul><p>​         <strong>振幅与振动频率的关系</strong></p><ul><li><p><strong>晶格极化与超离子导体</strong></p><ul><li><strong>晶格中离子的跳跃必然是一个非谐的事件，极化在非谐中起到作用。极化和非谐是什么关系？非谐的来源与物理图像是什么？</strong></li><li><strong>硫比氧的半径更大，电荷的空间分布更广，极化性更强。软硬酸碱理论-电负性理论-键的极性都是相似的</strong></li></ul></li><li><p><strong>软晶格和低活化能  德拜频率</strong></p><ul><li><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918153020516.png" alt="image-20230918153020516"></strong></li><li><strong>尝试频率的含义的不同观点：1.特定的声子振动模 2. 德拜频率</strong>  </li><li><strong>谐振子的结合强度越大，振动频率越高，成键越强。</strong></li></ul></li><li><p><strong>特定的声子频率与活化能</strong></p><ul><li><strong>德拜频率完全忽视了材料的光学声子模</strong></li><li><strong>声学支、光学支与物理结构的具体关联图像，振动不同支之间的关联。</strong></li><li><strong>活化能与低频光学支也存在关联</strong></li></ul></li><li><p><strong>平均声子频率和声子带心</strong></p><ul><li><strong>考察的是晶格的整体的振动特征以及移动的离子的单独的振动特征</strong></li><li><strong>降低振动的频率能够促进超离子态的产生</strong></li></ul></li><li><p><strong>晶格的旋转模-Paddle Wheel 机制</strong></p></li><li><p><strong>作者支持解释MNR的MEE模型</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918154311261.png" alt="image-20230918154311261"></strong></p><p><strong>尝试频率的改变不足以解释在改变晶格极化时指前因子几个数量级的变化，因为尝试频率只在一个数量级内改变，而指前因子改变了三个数量级</strong></p><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918154527580.png" alt="image-20230918154527580"></strong></p><p>   <strong>硫化物的$\delta_0$值要高于氧化物，也就是说T_MN要低于氧化物，那么氧化物降低晶格的硬度能够获得更高的离子电导率的收益</strong></p></li><li><p><strong>对一个结构构型，晶格到底最多可以软化到什么程度还保持稳定，应该是晶格动力学决定的？</strong></p></li><li><p><strong><img src="/./../../%E5%9B%BE%E7%89%87/image-20230918154902794.png" alt="image-20230918154902794"></strong></p><p> <strong>很明显，极化性更强的阴离子具有更低的振动频率，这也可以理解</strong></p></li><li><p><strong>作者认为，热电的研究中包含许多对非谐效应的理解，可以从中借鉴得到基本的概念</strong></p></li></ul><h2 id="4-非谐阳离子与阴离子耦合在硫化物固态电解质中的作用"><a href="#4-非谐阳离子与阴离子耦合在硫化物固态电解质中的作用" class="headerlink" title="4. 非谐阳离子与阴离子耦合在硫化物固态电解质中的作用"></a><strong>4. 非谐阳离子与阴离子耦合在硫化物固态电解质中的作用</strong></h2><blockquote><p><strong>Anharmonic Cation–Anion Coupling Dynamics Assisted</strong><br><strong>Lithium-Ion Diffusion in Sulfide Solid Electrolytes</strong></p></blockquote><ul><li><strong>对论文引言的翻译，引言写的很全面</strong></li></ul><blockquote><p><strong>离子电导率是最重要的性能指标之一，深入了解现有电解质中快速离子传输的物理起源是进一步设计先进超离子导体的关键。之前的开创性工作主要集中在三个方面来帮助理解Li(或Na)在这些材料中的扩散机制:&#x3D;&#x3D;<code>晶体结构或静态力学性能，[6-8]协同阳离子扩散，[9,10]和离子晶格相互作用动力学。[11 - 22]对于离子-晶格相互作用，分别讨论了桨轮效应[13 - 15,22]、软声子相关效应[11,17,21]和非谐效应</code>[16,23,24]。</strong></p><p><strong>1972年，有人提出了一个模型，将α-Li2SO4[25]中Li离子的高离子电导率与α-Li2SO4中聚阴离子的旋转无序性在≈635 ~ 790℃的温度范围内联系起来。该模型提出，四面体SO4 2−聚阴离子的旋转可以拓宽锂离子跳跃的扩散途径，最终提高锂离子的电导率，这也被称为“桨轮”机制。[26,27]随后用中子衍射实验在650℃下观察了SO4 2−聚阴离子的旋转行为[28] 虽然在高或中温范围内具有快速碱金属离子传导的其他硫酸盐和硼氢化物相中也报道了类似的效应，如LiNaSO4， [29] LiAgSO4， [29] LiBH4， [30] Li2B12H12，[31]和Na2B12H12，[31,32]，实际上，关于这种影响，特别是硫酸盐的影响，有过激烈的辩论，[33-36]部分原因是在原子尺度上直接观察这种超快动态效应在实验和计算上都具有挑战性。例如，从头算分子动力学(ab initio molecular dynamics, AIMD)模拟虽然在模拟中观察到聚阴离子的旋转，但无法同时找到足够多的Li跳变事件与SO4旋转事件良好相关。[36]同时，这篇工作还讨论了Li2SO4中除聚阴离子旋转外晶格动力学的复杂性，并指出了非弹性中子衍射对进一步研究的重要性。</strong></p><p><strong>此外，最近对硫化物电解质中桨轮现象的研究大多是在具有大自由体积的多阴离子旋转的高温晶相中，如Li3.25P0.75Si0.25S4[14]和Na3PS4[22]，尽管有一篇报道在室温下对玻璃0.75Li2S-0.25P2S5[13]有影响。此外，虽然x射线和中子衍射等实验可以检测到聚阴离子旋转的存在，但旋转与锂离子跳变事件的直接关联更具挑战性，往往不得不求助于AIMD。我们注意到，在讨论桨轮效应时，Li3.25P0.75Si0.25S4[14]的AIMD结果在&gt;600 K, Na11Sn2PX12 (X &#x3D; S和Se)[15]的AIMD结果在&gt;500K。对于这些超离子导体的结晶相，高温相中原子的大自由体积和&#x2F;或大动能可能使旋转突出。然而，在该领域广泛讨论的是，外推高温计算来预测室温行为可能会导致问题。[37]虽然对于某些类型的材料，聚阴离子的旋转可以持续到低温(≈0-300 K)，但[14,15]，在这个低温范围内，旋转是否有助于锂离子的扩散，这一研究较少，与固态电池的应用更相关。换句话说，利用室温附近的效应仍然是一个巨大的挑战</strong></p><p><strong>另一方面，近年来的一些研究强调软声子对活化能势垒和阳离子传导的影响，主要是基于低温(≈0-300 K)的测量和计算。较软的晶格动力学或较高的晶格极化率使得锂声子中心态密度(DOS)的频率较低，这与li3po4基LISICON、Li6PS5X (X &#x3D; Cl, Br, I)基银柱石和Na3PS4 - xSex家族中较小的活化能垒和较高的锂离子电导率有很好的相关性。[11,17 - 19,21]值得注意的是，据我们所知，还没有发现基于桨轮效应的这种依赖于物质的描述符。在Meyer-Neldel规则范围内进一步讨论了软声子效应[12,19,21]，[38]强调了熵和晶格振动谱对离子扩散的重要性和复杂性。特别是，软声子增加了阳离子振荡幅度以获得更高的跳变概率[11,18,39]，同时软晶格也降低了跳变事件的振荡频率和尝试频率。[17,21]与这种复杂的权衡效应相关，一项研究还表明，在研究了更广泛的电解质家族之后，描述符应该用于结构和化学上相似的导体。[12]例如，虽然硫化物通常比卤化物表现出更好的离子电导率，<code>但发现硫化物通常也比卤化物表现出更高的锂声子带中心频率</code></strong></p><p><strong>虽然晶体的非谐通常被认为等同于晶格的柔软性，但它们强调的是不同的方面。特别是，非谐波声子耦合效应可以在较宽的频率范围内耦合不同的模式，如最近在铜超导体的强相关晶体材料中讨论的那样。[40-42]对于超离子导体，Delaire等人最近强调了非调和声子效应对Cu离子、[24]Ag离子、[23]和Na离子[16]电解质中离子和热传导的重要性，在室温和低温下通过非弹性中子散射测量观察到几meV的低频宽峰，这归因于阳离子(即Cu、Ag或Na离子)的复杂运动。对于Na3PS4[16]，他们的AIMD模拟提出了Na离子扩散与PS4单元旋转以外的其他运动耦合的可能性，因为他们发现PS4的冻结旋转对计算的Na声子DOS影响很小，而冻结PS4的所有运动确实对DOS有显著的变化。此外，在这些非旋转运动中，特别提到了PS4的一类低频摆动运动。</strong></p><p><strong>在这项工作中，借用最近开发的用于计算强相关材料中的非调和耦合效应的从头计算方法[40,41]，我们能够直接研究超离子导体在0 K时的所有非谐声子耦合，这使我们能够首次阐明这些电解质材料中的模式耦合类型。进一步结合AIMD对离子电导率和300 K下振动声子DOS (VDOS)的评估，我们得到了与这些材料在固态电池中的实际应用更相关的温度范围的理解。我们揭示了几种具有代表性的硫化物和卤化物固体电解质中非谐波声子与锂离子电导的关系，包括Li7P3S11, Li10GeP2S12， β-Li3PS4, Li3YBr6(空间群:C2&#x2F;c)和Li3ErCl6(空间群:P321)。具体来说，我们发现对于硫化物基锂超离子导体，<code>Li扩散的活化能势垒越小，往往与Li VDOS在与高频阴离子拉伸或弯曲模式的非谐波耦合驱动下更多地向低频振动方向重新分布有关，而不是低频旋转模式</code>。通过这种非谐波声子耦合，Li离子被向扩散通道移动的模式推动，以减少扩散屏障。相比之下，在我们评估的卤化物电解质中，这种再分配在很大程度上是向高频和低频方向对称的。沿着这一方向的进一步了解可能为设计用于固态电池的具有更高碱性离子电导率的超离子导体提供新的途径。</strong></p></blockquote><ul><li><strong>低频的离子运动倾向于穿过瓶颈，而高频的离子声子倾向于沿着边或角，不贡献扩散，这是可以理解的。能够快速跳跃的一个前提是包围离子的多面体内有足够大的空间，才有利于低频的振动 <code>和晶体的晶格特征联系起来了</code></strong></li><li><strong>卤化物与硫化物之间的区别，在于阴阳离子耦合给硫化物的低频方向提供更多模式，低频Li与高频阴离子的耦合也更加大，相比之下，卤化物耦合后低频与高频增加的模式数相当，且高频锂振动与低频阴离子旋转振动耦合更强，因此卤化物的势垒更高。</strong></li><li><strong>低频的阴离子旋转是有害的，而不是有利的</strong></li><li><strong>要提高离子扩散，应该增加高频的阴离子拉伸，而不是低频的阴离子旋转</strong></li></ul><h2 id="5-非谐-声子声子相互作用-阻尼振动"><a href="#5-非谐-声子声子相互作用-阻尼振动" class="headerlink" title="5. 非谐-声子声子相互作用-阻尼振动"></a><strong>5. 非谐-声子声子相互作用-阻尼振动</strong></h2><h1 id="5-软硬酸碱理论-键极性和电负性"><a href="#5-软硬酸碱理论-键极性和电负性" class="headerlink" title="5. 软硬酸碱理论&#x2F;键极性和电负性"></a><strong>5. 软硬酸碱理论&#x2F;键极性和电负性</strong></h1><blockquote><p><strong>Correlation among electronegativity, cation polarizability, optical basicity and single bond strength of simple oxides</strong></p></blockquote><blockquote><p><strong>软硬酸碱理论经验规则的原因探讨</strong></p></blockquote><p><strong>软酸软碱理论：体积小，正电荷数高，可极化性低的中心原子称作硬酸 反之，称之为软酸；碱性有相同的定义</strong></p><p><strong>其中，软酸和软碱的结合比较强，硬酸和硬碱的结合比较强，导致稳定性比较强</strong></p><p><strong><code>软硬酸碱理论的物理根源是什么？？</code></strong></p><p><strong>电子对的受授来定义酸和碱，将电子对的受体定义为酸(Lewis酸)，而将电子对的给体定义为碱(Lewis碱)</strong></p><p><strong>该理论定义电荷密度高、半径小的物质，即离子势大的物质为“硬”，而将电荷密度低、半径大的、也就是离子势小的物质定义为“软”</strong></p><p><strong>分子的LUMO轨道的能量外在表现为电子亲和能，而分子的HOMO轨道的能量以电离能方式呈现。同时，如果电子发生了完全转移，轨道间的电子得失也能够与物质的氧化、还原能力相关联。硬酸的特点是带正电荷多、半径小，其被原子核吸引较强，LUMO的能量相对较高，软酸由于正电荷小、半径大，较弱的原子核吸引导致其LUMO轨道的能量则相对较低；硬碱持有价电子的能</strong><br><strong>力强、半径小，故而其HOMO上的电子更稳定、能量低，软碱的HOMO上的电子稳定性较低、能量则较高。当硬酸与硬碱之间发生相互作用是，由于硬酸LUMO的能量远高于硬碱HOMO的能量，相互作用轨道的较大能级差导致它们间相互作用的结果主要是形成离子键(图1A)；软酸LUMO的能量与软碱HOMO的能量相对接近，它们间的作用更容易导致共价键的形成(图1B)。</strong></p><p><strong><a href="https://www.zhihu.com/question/38390728/answer/76221290">(18 封私信 &#x2F; 66 条消息) 怎样理解化学中的「软亲软，硬亲硬」规则？ - 知乎 (zhihu.com)</a></strong></p><p><strong>高压会把离子变得更硬还是更软</strong></p><h1 id="6-化学预压缩与实际压缩的关系"><a href="#6-化学预压缩与实际压缩的关系" class="headerlink" title="6.化学预压缩与实际压缩的关系"></a><strong>6.化学预压缩与实际压缩的关系</strong></h1><blockquote><p><strong>替换除了带来压缩外，还有什么别的效应，虽然替换后体积都是减小的，但是除了减小体积，离子本身的重量在增加，导致晶格振动并不会因为压缩而变得更大，但是通道内的宽度、离子极化性确实是有变化的。</strong></p><p><strong>压缩带来的更本质的变化是什么嘞</strong></p><p><strong>温度带来的体积膨胀效应、化学压缩、和加压，带来的体积变化，三者是否相通</strong></p></blockquote><p>高压与非谐</p><p>化学概念与非谐</p><p>非谐与温度</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文献阅读标准</title>
      <link href="/2024/05/23/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E6%A0%87%E5%87%86/"/>
      <url>/2024/05/23/1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E6%A0%87%E5%87%86/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>文献阅读应该采用一定的顺序，这里记录一些规则，用于以后的阅读</p><hr><p>想法 - 论证过程&#x2F; -结论   - 研究方法</p><p>现象&#x2F;问题 - 解释 - 研究方法</p><p>想法 - 应用与预测</p><p>工具类</p><p>整理顺序 : 问题 -结论- 结果 -方法  重点看图</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>空暇集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E7%A9%BA%E6%9A%87%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E7%A9%BA%E6%9A%87%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="954517245f19f7ce8eb5a98dd4ae1c53f0721ca57505f9de3aafa6f383cd376b">bda6ad0d5f606e7055c23f770369041fed69a55df7f29c769d489763e906d9f878a01f7f539a3f8dbe2a48aeeb9e905b61ac58153cd4d8c5db7259825e4efcded13527bc57939f1d01480a9090d43016a788e2616156a43aeebfffcce4e328552f35289a68c0fb68afa57f0dbda577fcd247a11e4cda1444ef716a7370088647587cd300800fb47c77b8ce37620902beb6cc17172e31019c1ad95556ae04ae7336259a16778182cee10fd8edbf79728cffbce0c80cb81f231e9daad47479029e8805e921ad4cb43846789266593f67709346dc4da9f6b57c3596f6bd10d6accbe62bf344f4f87383c2fec90bb96538af3ff37d9fc6aa9764895a6204cf050a1669a0427efd746679904bf2b257dec192cfc859cd7574d039ac78412548d390c893359b6ffb0cb98695f40a074249e5523dda4d4228b8f0942fa74656755f7c3a2b47c496765ec410f28e6f0098bf4ef87c265ecaca727ce83e97fa8d0a1e89d25c7f9709cc429456046ea86cc9f9b454d87cb30d2bb2dbd3533427753abbd6171754bb1ba8f7697d3c8bc916079419869c8c4a93cebcce29006bc1ad9e373aed71976949b8cbbb25067bf5ec515faad681513c0685f05efdd10739d85a524ebc07898db5fd40b80211adcc487f8612e674f4784bd1b77021ee5f4469e73dbc30ec6fca6eac47cf18c71d062a9e31efe7246740044dbd0e9fd20241b07c85c7561f871d4cca8dc45db1455fa20a547c5e271009adb6f7bcf924110b957f5ab336b6d4169cd1f969658537b6d317c71b51833e878e8b87f784a18c94780cf346452a857b030cef2c28e37f1aa74b98c7da9fc5ab835324ef501100e12f0fa3ba8c970b269471040e53b8a02c552b5ce6458f1f36ac069833bd5a279473970223c6cd5701a6869b8db2db80fd311974d5f9f36f60d3cb56c7dcc7c64f4f792d943ed6f61c1313b562092373892e8a10d529610f9985ec4848f0d2f9f61a6161cb87f269b302b10d94ce00dd79f5ecb2a69b5829908b8716f24d564a699000107628bb83cf2eab1cbf51b9a24612c288982a3ce47526fe7e008abad08fcac6a0c5ef85f8c4860e533fcb91a135dee145a75019a7dafaeff7383c52ae129029839b57a483a0967c68139672c280240abc28384972344e3454e7cff913e69a2e473ca6a348378a3701498034ea4cbe8d86828a7b5fe79a67316caca13ef3199881cfbd27b46000bfb49f7083d7cd8df1fd53b49d9e4e56d13ecc81c5b8642df90a2edd0ae9a702b8f820e2763e4cd831c7656bdbbcc4f9d4cd7d74c474288ec98d73708b28341288750f9d5e4cfc9dd02ab7ad4c803cb223657eff10dce4427460932f1f6139b9b2353977db1c99a1f4437b5f392ff9d27d511bdd00d9efd6283d0956ef3e4271ef265169f267803fbd03c67e558bd2928c5ea277e979a00bf6afa61af9bb8d5cedb65f58f766076b5491018fd57c002fa94570542bd0055c5bccb9a247d674e6a4c9de06756a0663caca26db1af66e7acc9228476d791818936ad97be0b22bfdeac7c6d5206616c3336bd67d4a5e0e63c9d97f071e19a061298c69ee24e9024ae2da3133f7f60727f144c2ec90ed6efb998df49ffbc6d1c12bef50625a39b94c631d089f3c99cb893b6dc05d184f9e4312afbabb714934c9c63ca206edd4eb3d33fa2c1dd5da107346a9c0bd323ad41466b1d89a04a9bd94c7c4d91ad407b0a42a008ea3a9aff620d47fbca5a18e1dacba284cb84b4cb32006bd9d08b5553e79328394f5a90c0a770dce828cfabecf10cd1eaf3615e466009fee0663135f70113debed36599117ce4041782783b4197bd53294bd1514e1e0f89ed16d58d87fd26332c2f3760f0e6f433cb40385e3ec02417e9637412ed1bf73d6da9a19a3b35ad3cd98848f6f685cfdde4946808839ea4c2cc22190b472b19cbff028aa114253b2144f6c9c98bc39bc2d0b7ddcaf1b6996a6292c29fd3aba4f5ad37b264dde57c3ac29acdc2c1ad4a1a0d99471c6051365479eb54a7e991dbf1cab68c8dcc735dadddb8a5ae45da3ee953ba6bddb3a15450b62b2a12b9d7b74b6b34d245b2f1bb7d4f1673f7ed216591a58beceba51a777d4914f18dfb9252031449e1c46d57bd566ed69cac72d846199802332b4b32f2c8242f247dc1e2b7a6aa2b22bd1fd615bbd0ba12039dcd2baf7a655046311e16cef790c1d4bcc571681f2d88c9ad8ecc2c21ac49ec44d2e50c46c594cfe29b294f466fb31d15cb3d4d0a5f6faa8be23db1b8a0dc0ec35946466e00c4357a356d89fb46fcbb60a0a1b8d9033cf46f8c0662f77f9570affd8b286a1e04a7c87e20bc960e95c2e4fddac8d5734c6085a1a6d97614bd89871580fe462e103a9e25cd665a533396f70fae00a4ab72fe9e537f4c730939b4b00e3a6ed016955624f47bef07349cb520e7a4626b0ef8253d6f66c986d7081013e78db56be4408124bb43f2e5ffd3b493ac89fe74d9d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>疾集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E7%96%BE%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E7%96%BE%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8a5c79e4d4887b1fcd9f382c1866a305b241886a314b3b57420f37d9d6004f35">bda6ad0d5f606e7055c23f770369041ffa354e2b32a3834b155272c56f6444660f4a78a4c2a2735eac45225b3caffd00fd38baeef9da3e592e187300fd5329d91f4477e27ae38c67e0516180fb8e4baa750469e86ce88ded6fbbb3e34338f213d754e2c1f1032f8eea31a56f69b377062dcfd2fa01d094088471d4ef46fc570807ec8261701c89235100a5a3053fc09d2bb99f25f53930892d50f78a17d73023ba96204e13c3d2351c1b000f83fcfd786cfe77bec8edcb231035bb91374990a0f2ef7e233583415dc56f7a4bdaa1684986a337a43592a3ff5f545e71d5ecfdc6648e6131a59f2f5e020e839f91609b165b32e7fdbcfb9b4e1096db8769dcaadd8088c0076c8d62e5dd870f40351067788a6051bae32bbe84dd3c312f0bef161a470e2bda358b9006af6672d6947ad361bc722b6463f9408721c052307310a6d253b75036866210f8c1ff71ec64c5b5120432a71fa5a7340e115cc389fc2969b3150cff60f586bd0d2b4e7f08e481aaa991ce6df64797d517b4bc0f8e70e33d98fad4419766bb0d902b0f7a158d74d6ccce432539755962c5c7234cbad554932d4366660b63d5ca3149fd976b4da134c19537feb0f2ec022f03ed8ab7d036fee76916da03d3a4634851cd4ff6ff40b945b2a8d6586bb07934bafaae855b45ac845f263a9bd08b7a45322cda062ebf7c47ec351eb57dce27ba25e8e269915bc0e9b10e48b2a9ad52e6432c9436fbd2417402e10183cb9e97f0b90323038792ce421370f59cc44e2169f55622644f3231ac125689bce245cc1f0a2929e77f53953e0b3552c809244a414d83a6f24c28c22a2e6ca460079089831cafe861ea5bb23500637fae56f9517de2dbc8738a3cfedc61eb4cf55feb00f6611e9f30d4c0b39e1985e2cb816ca68627508890486ecb9e0bbb550bb9649b1cc97a5a5e808eed3f584821854f931213999d80a2da43a9b03d27451be93d3e78924206038dda755496f3641c6e4babc09c45094276f948f04bd15306adca50fdda5e8cf2ceda807b6c8548dc4d9b14ee820f958e21942a3c8c87f313674b6f949c0e0777540d9ac241e095c174861838e55c56fd91f4931ed5170dc285a4ce9b01b5c2afa65eff23578b3ab5ba8d1a7a03acfdd041eb5c7605a0f4dc5971d65563fc3b93f7248aabab92d9e1d257eade27e4cf193e37249d22986c6b95f6bb8c4035db048fa8108720f58092304cee8ece13320d168791dfe73f371d608b1183e2edb531e6eb60c76291dcdb8cf95a50bdbe92a2e7c9819fb50861423504f8fc2cfcc2a2702b6084f6a040c64a54bb96ef0d17a4df11391675a36c4646729d4d50696405259f9f28b72224c8b3bd6172ca739d01e93119c3e37dfab04bdc54f76d05c379d15c74efc2fea511692691e953b7723b53e23cb88284f7a8d7a50b6825b9346cc2092d315e8140d136e981477e369661600d893d83802b59eaa2e1a65b60395f08bf1d0e88ef70d9ac026b45113d5a1777c3e103e9f8a81651e0baa34b45823c02d4dd8e4666a636bd44d85b585546555b311e17efabaa955259449589dceddff547527c5e02968832469b7361021db16041cdb1e9750c5117452eb28c40b7c2232879c9ca9a16ac9ac7d763de4c0f412935120197e74889df6fd408c2a24ff10b924bb55f02bc1e808be14320ea8bc900b60a256f47344477f5a4f99b76e323969e175f2d0095eeb825a90fcda45fe5a6d0d77e17760c7848bdfec8f204ea814f5a0c6c9d10cd123532dee9aa6ff11ec2abc46aa32e23171f39265cfb429c28109209c2f30c625955e9a66dd8cbbcccaf85f539950f717d77f4ac6b5297052b524ffd7bbb82f5b8c499ec0cba4334e3631c37a57315c0681a03c090a16d43b1f4f1ae8534dfaae4a232c64332403a3400572b5bdadcbcf8906b4fd1fc6335e2f22248a1989c9c997733f8c77b01be33507c0d6e7a5360a3771d08bd7dfa753af88cebd4a7a5f311e3df9f3a3acb6f93379a559c3d4ffa8aa358a8f3a229c23568dde01ade80300ca9725ffedfc42b5e9c4bc6373bb17cbd6bbe687bf16cf866504a81ba63790e4e859e96bc8970e5414174bb22509058a80b33e4c5c33dae42da7363d0b100c96b7b633b4609d9f996f3dcba79901bd531e79ba9e3cf7f92a67cc16da48a053eb6a99ed7a45d7ffbcfec2acbd5eee9cd6a72bc29845f2061514f271f1b724458d25fad219be3d61c3ddd0e49f878d553aca8e837a2f52cae910e49ce2b3ec0eb800005609211dce76d6d42da04ab25ba0582de69bdb9c55d91c58e74d5c3c0314823ddd71f05ac83ac96c5fbec05df818105dfb46393da668798a701645f3d2307a3566ec29ca51cd42221e386008acb886b76f2d72dcff914d7dea82d906d6edb54f802d7292741234aa67f0da5dc7bf6ff8361347fa40b5f83ff07c758833feb1a63e6f92dacff8713e24a978fa4311ecf833e254055aee059c9bd0e3302fd44e46dd5f33458853e8372f4d7fbedde9fa83d869d225c99280aa06519d444408241fea40d088f4c17bdb748212450d18639f7e6d1a82b302ffa24d93a252f02abe5e0e578fdd68befb19eed3861dc4ef8f9206de11bb2ed93986a0cedae9738af3129afc584b64ee2c9cd23a5fd2d2ac7215a14ffc7559ec08a7d11a8c20a59691bb61bc260b162e8dad04bc146fab1675c1a4db38f804304c7c2d115c36e4177070afbffe401de6c5f07e8803bca281dcd74420f2d4c41406415d2eef5c4848fb2078204f7fd67343c3d163ebb1bb46185e4f82c20bf9292ca1b7f7c5c65fc8d4f11c124b0de9c352d49051470dfdb53273eb5bd7a82465c18012e2d6435cf1c1edcd08279f38830514b270f14eb4d5f4a3b460fa792ee5e2761d446ad36973182d5019e0f36a8c317c72e6f812b28329f565f04431f26d86d0966fdaf9b389c36cc317d6a340d02cba63c6fb39b41fc8bfbd988d461992c0d75b472e79f06d5b9be4cff27b725693e4b23ec02e02b22a4388e9ab101e3ae1803c8eefc4bc6b0350428f9b69a3aef00edb98489e1df970f5029cc51dd6e38470e0e6227f32919fbabb4c97100df8e31b133b574fc4748c67a56ef3b26f7c0616033a700b98db66c08348946c36cddf8d09440f22a76d0293eac5e0b364f3deed4821b19fcdb5a68d7c9851623acf111459b5c4a6a1eda54cf8ed9e0c349c484df8701bcede2cfb3fbe6f67f321fcbaef765eff6daf4e2963fd3c1f19c8496714f260a78c0438170bc446ef4b1e5eabdc157b1d09e65792dfba57385101265acb821d42c255b4c39bb870f7832ed41cd09af306e8e9c04239cb54d2e09d8ed1e7a7076e66ac0a053b469ef819610191df5f798a6aa810626e5db9852d85ef98bd5b7b4cfb5f873c0e825bda94c716e84e39d2b64d5e12d1cc9dc6b2df8b091fa9f131f0e82d724a247281fb974290cc3856ba5a246aa22a90887b79555ab0d321fac9e19f6e9d322b70ced8c2e117ce174437148754d53371f0199fde96dcaf3364a92dfd6243984a05163e435cf6b4dcced0f8cd684eb44d8e85b1a2d1af02ba897896830fb9b88943cad071edf1647348c67596b744fbcfe44a3b4699d424f9c77e10fae386a97dadaff88a42eb042e96b89a992369f48df2d9bfecd2d5c8065c5b9ceffe5c4bf0e837cdb790b01100348728ffc5d8dde96429ae315c95754a76d12b109de8f61a6e877ac4aed4575171f546fb115a74bfcdbe740565aaa9b8f0a2622c502b731c1d77418e699b0d404bae827825eabb4d13719b3e8b4cfba9c2bf2dba33dbd63d83f5e6848f18bfea4b49091e01878d99d2c66a6421632076a7abcd27b77d6c9963b5f285ec294d94bdcc14683046565ffd7c4ed40c4559fc7351488f7d6d2757005152751669b7e605ba7a7898b1a52a6a8e3916d986ae7925205548f2e8f2e0db0a62dc829804a2e463d48928aed54f901b9177df0818185dc8548559ae8dcd1e8be113736f71a1ae892fe872f8aabd28435e62b1c0cd2e8e8ff682a681deaa5cc3c6bd1b17bc7f5b2c08d74a2364eb8e7145c8b7b9290880012f9b067655eb2293bacd4ed895df404875d3a2e1d48c904bfeeaa087a69028ef06b2d46f0c94c7cb37a5a7426cd664b759300f30780462e03dea0223e1424829a7a6be8b580d92137a246d0b7ecb5bd7764f0277ba1ff45d7c44e8be89ed8e7542b5150a3ace4ea248adfb710bdb479a75d6ae5bf8ceacec23ee7cb2f0ed6feaa458f6052207321ba8c71876b77117f5399904fdecbb3417ba833b69475152df2f2e8631be7048f04a832fa75ddc334b48b8a948211d19dfd4000816eeb1bab76053507ac615cf79f22c43693fa9c01545c8586bf05fa8436fab9d37b06885104f82bd8cda303e523479c7a78baa43a671259cecaf8b18d0a76b3fe893cd9ee3a5be89f09a32701e446921e5178041f3465b027db6339d05d3f79e5f6b13caec7fe4c13c76f461418dbac6590fc9b52b5a5d65e1e1eae893466eba9f78cc52231e92839af825312bbc2681e37a39f45755b7e8c5435106203a53378903db0c66543785ca5eb3394de99051bfb5783415516bb89fca6d3da1e1dac5ce328c51b357e3d4eea050b8193ca10b28825251e4036b8c31a3ec3ea77d482255aeb8304573a708ef7ad2c707f6b5d221bae9d2fc39b0b37dfe8c9ea0a13fa6968e538c32ac2b28fd8ad0897e297ee7e05ad339007</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>信念集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E4%BF%A1%E5%BF%B5%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E4%BF%A1%E5%BF%B5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="014f8f3481f922931edc1a2dbc376ee5b154893bfd3250ebe1a5ecabdf6777f0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>愤慨集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E6%84%A4%E6%85%A8%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E6%84%A4%E6%85%A8%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="51df6e2eca9413d553c1b18a3f27bb42b67c6c3270a9652aa7c965d9b64ca50e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>other</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/other/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/other/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="be2fc45df6df39d2dad29a76a1ecd76b127ec1e472432418c5676386ecfac3bd">bda6ad0d5f606e7055c23f770369041fbdc863218cee7dfefc786ad316b08a781cd7a81da91aea91fad7c436a78c35f097a0a44e762e6e47dcf4cc07feff22a7b4b6f5d95371fefdd1596afae2cf1ed3974a1d05f23aafe44ed87c10df69b3be9f6f5753071964fc60e59e11d3492799c45d1474f046429b76c801851eb6da5b5a21182905dfda6ceb115acbb2575a2fc19ee084d31fd731a32c59c1434304bd6cc85c516f7adb8b4ad688059ae3b179c59bb037f06b63f18553a4775a09dc5f9e8b6a9d836ed044ca9109f520fd6fa1e988dfe9ad23408c045fd299e1637336e1afb245020a8bc75884fc7de17a6271f8bc1d2a13764c16454cc52dc83bc3459989a5e1ffee34cdb26c7662b2a115ef6a24efa25074300fe5cc069d6fed49e42dd2023897bb5158b0f293b919cf5332f5978704ee14ad101b34740e07207a24af5682f4cfad883694483f20d71eb6b2e49ca6b42bd23b9a7ec624fbe1178d147caa04c0737684181d1e7023a834293c54f79ac5e89971e83ee1847fecc59188911694f72c6749592e14b387654d0cab6c428029a86e9ab6c317b46cdd8e06fb52e8f955274da11852090a2483efaf5e05533093a283d872f6acb006cc8c7ef2ca6281f65016674f4e3442059c89fe83cd777af2f2a3f0722b52a3469077bf52cfa740deac4b5e80ec37ec7a5c71a93af9e7ecb5db43ea5a6645e79a35a8119a239f3b1f0ddbce2bff2bc9e0262b4e43b8e24a05464a0dd573e3e5832167bf85b4443b59b59a3d4cb7411ac5b66c195d1e48cd95e7e2784ac4e821301a30696bb85c8c80aa8cc7b9742ea943bd50b16d621757d189a0d015bd1dd981f3e19a1c540994b30b40ca9ad336de10a6554ed64b62b4ea38f56abdbe2154f89a7a6b5d5c29e7871aa6fdb2e8dbf943d48136cc08153a4c4e10fefd9796c38051392aa5c1c1f4e00213906c41c29877d244eae7993cf3353c3273d07563e75f12f5aaf4f66c31a800453c38c4db94efc5ca9161ac44d0b56307eb00145f5cee141514407694ebcd17ed0485d5d9b01fd9e06317ec0cdc14db9fa34e92b7aa4d581c01f7e661f9675d8c8c5d7171087981e9af0fb514c0320733b62e7fd80f7f7b82d810f35f7ff6ad2f68686ef29f252a045ff12361b50d771a90ce40c3b411b40778b5f7d0fd30f4fef69091ec2c1e36a8e60e07e17438dff0be90dfc031d7807844b431f75fe498c9f5c037089e4ea720915ff4c7ec5f4750140cd1d15cd2a8bf694896a27236a33601261dcbaaa45425e13cd4f2f66bdfe2c7f4a51ad3643990263ef5d1abd1b19d5412588d881a38bbe41d248cba8e4c417f9e43697cb701f845b0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>future</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/future/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/future/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="55873172d53792a7d9d84d86088a308752b25b19507ac944534cb8a96f476e1b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>任务清单</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cffcb9241ea476c1b7d08cd1b306cdd273612a775fc9a566d08c7f752fe94938">bda6ad0d5f606e7055c23f770369041fcfce55b1b7c25f5b1a0154db39fcb93ea264cbb7049226945e827e647bfa4a864a47b96f7b857d7782ff6840783e9ec3ee18568587fad618ebf2bde283fccec78d96f1ec7bed390d18d42c9917a95e6afe33c5a79ed558e32bbd27611fd34593b69ab8e8c7bb47afd33c8ad571f1c9162cff620ddb251e65d0749cfa782eba22fcc1521786d4560a28131562a4adaa46006040f5298ce72e799e53bdf6e8bd495132491fb717e883a68553ede412a8c0c32f6413fef70846300db7ce35080c532318196b1945e17f5137961a793307917000b9a42cadc8052862e83fcc452f47549d08b58ac756a5fc62d617dcf289a28e1e07c609c00ed2114bfc99152060b2b6720eaf3defacc5199b3fc8e0737676b6b24146dd601577ae1ccd921cc724d2fc0b49adbb9a57dcd2a9a7120df94a58db712295de8def528c79293e507308f043740d4752b29e44bdd40ebe5251041d9f844fb09fa561726c2f109916ce4b0c9d14db2c3c43a9fc255962c0b5afeae69757304de52631e46868cc1d338bb2a6381287092ab1b108ca8c08dab027ddd84269f50944c4ffa707c5a95e3482b2b6df8a5b541db4fe3c86273917498c30034dd325572348880b90a1d27faa59436b171780ac99846c7bf24c94a7d2e648a8ff957e9254353029e045c11a1972080ee374a85834b1c013bd707e0372cc34d117ea78dc389f8f14ef8c3711041092f956c7e88037dce9da939603bb1bbcec74e4dd3975f0872a49383aa1e9efdb51c0bdac35ac47ce7fb7e8a2a5ef4237b389be0161a8d8d3b7cc42dcd42cc3e3c5b21cb6fdd733a6ef52cbcfa633446788db50418f0a3e479a91004040d8e2e5401bf1e455c078ffc945dedf810ed324b87fe4aed36c21d990904b06736856fa8a2a011bf27c4f72df7259129cbba0a3b749f2047bcf5574a249048e7b67a0a0ed9a30a08c8e8c022b928715f483ff446c4e9f975c0a3d2c1ed458a2aa8bb104efc6add9151298a469fd1e3a4819ada212cb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>奇思集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E5%A5%87%E6%80%9D%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E5%A5%87%E6%80%9D%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="93a3ddf1688c809bc6004d55474a6851c9c044ec4fb027dee23ec51ccbf1b516">bda6ad0d5f606e7055c23f770369041f86866f216d9c16d2d1037a0d1ba17455ab00e7f423209fdb267f0cfe0c4a38508439495384736150fce05fc9059e5c09941cbccd5cc60b54c12214ee500203e303d160b26323929943f7e36b4cba275e15737464b727bc8cf28e5d8c6d43ae2dceae5c22234f060b815b40e5e418a2cdc099fee5d314930b92075c155dffb1ef7e4558d96fa99636c4cac3439fad44e35203d4a2af89c6b011d6f7344ddc0803bec749ca81e64fa81e35c0cca42c027d0e02aa962a20e73fbdbd0d4c01c5e8a2d73ced48248b6e4036c549c0fe954e6846ae87c93b5f8894985256ac4616025945338f4384ffd453c9227f034867a4aef1e7bb65608db55fc2a992e45311586c6233f3f78daf8899d4dd294eacc435c4cfabc398ce4aef17fc3502dc096cafa09f0ee49d924b5d15a5f0be14c5f13aaa9eb9d94858dbbdb83bf7e0c69a48ef8b73ea38b29debed3ac46c8fd73983edb845f8f542a377fe975ca9866e5690c5b306f1595a71d10c28788a981418d03794ffec10bdfe7fb40690b424c4b56d87f42e2c6f8ecbfc41d706ac4d8551a5c73eab16a5e98757187edca782607d9d6c0307c3218e6ba75f3fee02bd44203bbc888cfb20c8716b78fab2ac60669405ceb99e78607400fce6e3989f6c55a92df534963597cd2ad2da302a7721aed3b7d40727e6ac8ced2d47cb8ce44fc46313b14e402594bcd650c856b2395e9c292a91036b79e9cb206bce9f800813abb6621a140bcfc44aeb4795b30014a0ffeaeec9c2ed4d001197955bb8093f4ea236a7e76330b5926ea86910044c71ee84fc47ea3a0a7c5706537e1891a6f093848dc57d31f1c63f3e7b1b7da9175cf59e3a0a4cb07089be4b9ce647395423b6d2f4d69f1a5937367eadc438b34c0f4d2f1fdc2a4d8c660f875746ca8cc11546dfc8284cb7f55ae5a742ebb3f61e7a85f3afd978aedc838f295e7b5dd519dd3a27df6d14ab056b20d5316bda4c95a221cea1a611d64a6bde4f041aa04692b41e0900a2c801c3402b0efb83b59582f6466b56c90937deddf37abfe8636c1714d5c444b3de9f42ab663d62c142cabdef0a086df931a39735d0caf2a6979158ab7c099cd222f2ab6832ac9fba5cda5d03031b0c1678385ca3e983ab7565a79cd1b2dbb7346a0abbfce253711a582fe24ab1446157e967a9fce7d2431c3fb7d3c90e1c5e1b26f7f3feeeb0a5b195931c002a2468131d3e37f868fc63ec1df35949d9957cc19b2fae273182f348586bac67a057078ca772</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>年华集</title>
      <link href="/2024/05/23/8-%E6%9D%82%E8%B0%88/%E5%B9%B4%E5%8D%8E%E9%9B%86/"/>
      <url>/2024/05/23/8-%E6%9D%82%E8%B0%88/%E5%B9%B4%E5%8D%8E%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8e611efe6821f0b5e9a9c226867dd2afc047e3b9b73593cdc51db85bfc514dda"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>社会集</title>
      <link href="/2024/05/11/8-%E6%9D%82%E8%B0%88/%E7%A4%BE%E4%BC%9A%E9%9B%86/"/>
      <url>/2024/05/11/8-%E6%9D%82%E8%B0%88/%E7%A4%BE%E4%BC%9A%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4aaac59c7122d38aca7de3039dea1eb0a7b25dda88b63cbb2e94997bb0f7b4c1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
